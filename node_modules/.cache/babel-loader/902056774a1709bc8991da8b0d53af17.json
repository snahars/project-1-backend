{"ast":null,"code":"import _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport remarkTableMock from \"./remarkTableMock\";\nimport MockUtils from \"./mock.utils\";\nexport default function mockRemarks(mock) {\n  mock.onPost(\"api/remarks\").reply(function (_ref) {\n    var data = _ref.data;\n\n    var _JSON$parse = JSON.parse(data),\n        remark = _JSON$parse.remark;\n\n    var carId = remark.carId,\n        _remark$text = remark.text,\n        text = _remark$text === void 0 ? \"\" : _remark$text,\n        _remark$dueDate = remark.dueDate,\n        dueDate = _remark$dueDate === void 0 ? \"01/01/2019\" : _remark$dueDate,\n        _remark$type = remark.type,\n        type = _remark$type === void 0 ? 0 : _remark$type;\n    var id = generateRemarkId();\n    var newRemark = {\n      id: id,\n      carId: +carId,\n      text: text,\n      dueDate: dueDate,\n      type: type\n    };\n    remarkTableMock.push(newRemark);\n    return [200, {\n      remark: newRemark\n    }];\n  });\n  mock.onPost(/api\\/remarksfind\\/\\d+/).reply(function (config) {\n    var urls = config.url.split(\"/\");\n    var id = urls[2];\n    var mockUtils = new MockUtils();\n\n    var _JSON$parse2 = JSON.parse(config.data),\n        queryParams = _JSON$parse2.queryParams;\n\n    var productRemarks = remarkTableMock.filter(function (el) {\n      return el.carId === +id;\n    });\n    var filterdRemarks = mockUtils.baseFilter(productRemarks, queryParams);\n    return [200, filterdRemarks];\n  });\n  mock.onPost(\"api/remarks/deleteRemarks\").reply(function (config) {\n    var _JSON$parse3 = JSON.parse(config.data),\n        ids = _JSON$parse3.ids;\n\n    ids.forEach(function (id) {\n      var index = remarkTableMock.findIndex(function (el) {\n        return el.id === id;\n      });\n\n      if (index > -1) {\n        remarkTableMock.splice(index, 1);\n      }\n    });\n    return [200];\n  });\n  mock.onGet(/api\\/remarks\\/\\d+/).reply(function (config) {\n    var id = config.url.match(/api\\/remarks\\/(\\d+)/)[1];\n    var remark = remarkTableMock.find(function (el) {\n      return el.id === +id;\n    });\n\n    if (!remark) {\n      return [400];\n    }\n\n    return [200, remark];\n  });\n  mock.onPut(/api\\/remarks\\/\\d+/).reply(function (config) {\n    var id = config.url.match(/api\\/remarks\\/(\\d+)/)[1];\n\n    var _JSON$parse4 = JSON.parse(config.data),\n        remark = _JSON$parse4.remark;\n\n    var index = remarkTableMock.findIndex(function (el) {\n      return el.id === +id;\n    });\n\n    if (!index) {\n      return [400];\n    }\n\n    remarkTableMock[index] = _objectSpread({}, remark);\n    return [200];\n  });\n  mock.onDelete(/api\\/remarks\\/\\d+/).reply(function (config) {\n    var id = config.url.match(/api\\/remarks\\/(\\d+)/)[1];\n    var index = remarkTableMock.findIndex(function (el) {\n      return el.id === +id;\n    });\n    remarkTableMock.splice(index, 1);\n\n    if (!index === -1) {\n      return [400];\n    }\n\n    return [200];\n  });\n}\n\nfunction generateRemarkId() {\n  var ids = remarkTableMock.map(function (el) {\n    return el.id;\n  });\n  var maxId = Math.max.apply(Math, _toConsumableArray(ids));\n  return maxId + 1;\n}","map":{"version":3,"names":["remarkTableMock","MockUtils","mockRemarks","mock","onPost","reply","data","JSON","parse","remark","carId","text","dueDate","type","id","generateRemarkId","newRemark","push","config","urls","url","split","mockUtils","queryParams","productRemarks","filter","el","filterdRemarks","baseFilter","ids","forEach","index","findIndex","splice","onGet","match","find","onPut","onDelete","map","maxId","Math","max"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/ECommerce/__mocks__/mockRemark.js"],"sourcesContent":["import remarkTableMock from \"./remarkTableMock\";\r\nimport MockUtils from \"./mock.utils\";\r\n\r\nexport default function mockRemarks(mock) {\r\n  mock.onPost(\"api/remarks\").reply(({ data }) => {\r\n    const { remark } = JSON.parse(data);\r\n    const { carId, text = \"\", dueDate = \"01/01/2019\", type = 0 } = remark;\r\n    const id = generateRemarkId();\r\n    const newRemark = {\r\n      id,\r\n      carId: +carId,\r\n      text,\r\n      dueDate,\r\n      type\r\n    };\r\n    remarkTableMock.push(newRemark);\r\n    return [200, { remark: newRemark }];\r\n  });\r\n\r\n  mock.onPost(/api\\/remarksfind\\/\\d+/).reply(config => {\r\n    const urls = config.url.split(\"/\");\r\n    const id = urls[2];\r\n    const mockUtils = new MockUtils();\r\n    const { queryParams } = JSON.parse(config.data);\r\n    const productRemarks = remarkTableMock.filter(el => el.carId === +id);\r\n    const filterdRemarks = mockUtils.baseFilter(productRemarks, queryParams);\r\n    return [200, filterdRemarks];\r\n  });\r\n\r\n  mock.onPost(\"api/remarks/deleteRemarks\").reply(config => {\r\n    const { ids } = JSON.parse(config.data);\r\n    ids.forEach(id => {\r\n      const index = remarkTableMock.findIndex(el => el.id === id);\r\n      if (index > -1) {\r\n        remarkTableMock.splice(index, 1);\r\n      }\r\n    });\r\n    return [200];\r\n  });\r\n\r\n  mock.onGet(/api\\/remarks\\/\\d+/).reply(config => {\r\n    const id = config.url.match(/api\\/remarks\\/(\\d+)/)[1];\r\n    const remark = remarkTableMock.find(el => el.id === +id);\r\n    if (!remark) {\r\n      return [400];\r\n    }\r\n\r\n    return [200, remark];\r\n  });\r\n\r\n  mock.onPut(/api\\/remarks\\/\\d+/).reply(config => {\r\n    const id = config.url.match(/api\\/remarks\\/(\\d+)/)[1];\r\n    const { remark } = JSON.parse(config.data);\r\n    const index = remarkTableMock.findIndex(el => el.id === +id);\r\n    if (!index) {\r\n      return [400];\r\n    }\r\n\r\n    remarkTableMock[index] = { ...remark };\r\n    return [200];\r\n  });\r\n\r\n  mock.onDelete(/api\\/remarks\\/\\d+/).reply(config => {\r\n    const id = config.url.match(/api\\/remarks\\/(\\d+)/)[1];\r\n    const index = remarkTableMock.findIndex(el => el.id === +id);\r\n    remarkTableMock.splice(index, 1);\r\n    if (!index === -1) {\r\n      return [400];\r\n    }\r\n\r\n    return [200];\r\n  });\r\n}\r\n\r\nfunction generateRemarkId() {\r\n  const ids = remarkTableMock.map(el => el.id);\r\n  const maxId = Math.max(...ids);\r\n  return maxId + 1;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,eAAe,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EACxCA,IAAI,CAACC,MAAL,CAAY,aAAZ,EAA2BC,KAA3B,CAAiC,gBAAc;IAAA,IAAXC,IAAW,QAAXA,IAAW;;IAC7C,kBAAmBC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAnB;IAAA,IAAQG,MAAR,eAAQA,MAAR;;IACA,IAAQC,KAAR,GAA+DD,MAA/D,CAAQC,KAAR;IAAA,mBAA+DD,MAA/D,CAAeE,IAAf;IAAA,IAAeA,IAAf,6BAAsB,EAAtB;IAAA,sBAA+DF,MAA/D,CAA0BG,OAA1B;IAAA,IAA0BA,OAA1B,gCAAoC,YAApC;IAAA,mBAA+DH,MAA/D,CAAkDI,IAAlD;IAAA,IAAkDA,IAAlD,6BAAyD,CAAzD;IACA,IAAMC,EAAE,GAAGC,gBAAgB,EAA3B;IACA,IAAMC,SAAS,GAAG;MAChBF,EAAE,EAAFA,EADgB;MAEhBJ,KAAK,EAAE,CAACA,KAFQ;MAGhBC,IAAI,EAAJA,IAHgB;MAIhBC,OAAO,EAAPA,OAJgB;MAKhBC,IAAI,EAAJA;IALgB,CAAlB;IAOAb,eAAe,CAACiB,IAAhB,CAAqBD,SAArB;IACA,OAAO,CAAC,GAAD,EAAM;MAAEP,MAAM,EAAEO;IAAV,CAAN,CAAP;EACD,CAbD;EAeAb,IAAI,CAACC,MAAL,CAAY,uBAAZ,EAAqCC,KAArC,CAA2C,UAAAa,MAAM,EAAI;IACnD,IAAMC,IAAI,GAAGD,MAAM,CAACE,GAAP,CAAWC,KAAX,CAAiB,GAAjB,CAAb;IACA,IAAMP,EAAE,GAAGK,IAAI,CAAC,CAAD,CAAf;IACA,IAAMG,SAAS,GAAG,IAAIrB,SAAJ,EAAlB;;IACA,mBAAwBM,IAAI,CAACC,KAAL,CAAWU,MAAM,CAACZ,IAAlB,CAAxB;IAAA,IAAQiB,WAAR,gBAAQA,WAAR;;IACA,IAAMC,cAAc,GAAGxB,eAAe,CAACyB,MAAhB,CAAuB,UAAAC,EAAE;MAAA,OAAIA,EAAE,CAAChB,KAAH,KAAa,CAACI,EAAlB;IAAA,CAAzB,CAAvB;IACA,IAAMa,cAAc,GAAGL,SAAS,CAACM,UAAV,CAAqBJ,cAArB,EAAqCD,WAArC,CAAvB;IACA,OAAO,CAAC,GAAD,EAAMI,cAAN,CAAP;EACD,CARD;EAUAxB,IAAI,CAACC,MAAL,CAAY,2BAAZ,EAAyCC,KAAzC,CAA+C,UAAAa,MAAM,EAAI;IACvD,mBAAgBX,IAAI,CAACC,KAAL,CAAWU,MAAM,CAACZ,IAAlB,CAAhB;IAAA,IAAQuB,GAAR,gBAAQA,GAAR;;IACAA,GAAG,CAACC,OAAJ,CAAY,UAAAhB,EAAE,EAAI;MAChB,IAAMiB,KAAK,GAAG/B,eAAe,CAACgC,SAAhB,CAA0B,UAAAN,EAAE;QAAA,OAAIA,EAAE,CAACZ,EAAH,KAAUA,EAAd;MAAA,CAA5B,CAAd;;MACA,IAAIiB,KAAK,GAAG,CAAC,CAAb,EAAgB;QACd/B,eAAe,CAACiC,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;MACD;IACF,CALD;IAMA,OAAO,CAAC,GAAD,CAAP;EACD,CATD;EAWA5B,IAAI,CAAC+B,KAAL,CAAW,mBAAX,EAAgC7B,KAAhC,CAAsC,UAAAa,MAAM,EAAI;IAC9C,IAAMJ,EAAE,GAAGI,MAAM,CAACE,GAAP,CAAWe,KAAX,CAAiB,qBAAjB,EAAwC,CAAxC,CAAX;IACA,IAAM1B,MAAM,GAAGT,eAAe,CAACoC,IAAhB,CAAqB,UAAAV,EAAE;MAAA,OAAIA,EAAE,CAACZ,EAAH,KAAU,CAACA,EAAf;IAAA,CAAvB,CAAf;;IACA,IAAI,CAACL,MAAL,EAAa;MACX,OAAO,CAAC,GAAD,CAAP;IACD;;IAED,OAAO,CAAC,GAAD,EAAMA,MAAN,CAAP;EACD,CARD;EAUAN,IAAI,CAACkC,KAAL,CAAW,mBAAX,EAAgChC,KAAhC,CAAsC,UAAAa,MAAM,EAAI;IAC9C,IAAMJ,EAAE,GAAGI,MAAM,CAACE,GAAP,CAAWe,KAAX,CAAiB,qBAAjB,EAAwC,CAAxC,CAAX;;IACA,mBAAmB5B,IAAI,CAACC,KAAL,CAAWU,MAAM,CAACZ,IAAlB,CAAnB;IAAA,IAAQG,MAAR,gBAAQA,MAAR;;IACA,IAAMsB,KAAK,GAAG/B,eAAe,CAACgC,SAAhB,CAA0B,UAAAN,EAAE;MAAA,OAAIA,EAAE,CAACZ,EAAH,KAAU,CAACA,EAAf;IAAA,CAA5B,CAAd;;IACA,IAAI,CAACiB,KAAL,EAAY;MACV,OAAO,CAAC,GAAD,CAAP;IACD;;IAED/B,eAAe,CAAC+B,KAAD,CAAf,qBAA8BtB,MAA9B;IACA,OAAO,CAAC,GAAD,CAAP;EACD,CAVD;EAYAN,IAAI,CAACmC,QAAL,CAAc,mBAAd,EAAmCjC,KAAnC,CAAyC,UAAAa,MAAM,EAAI;IACjD,IAAMJ,EAAE,GAAGI,MAAM,CAACE,GAAP,CAAWe,KAAX,CAAiB,qBAAjB,EAAwC,CAAxC,CAAX;IACA,IAAMJ,KAAK,GAAG/B,eAAe,CAACgC,SAAhB,CAA0B,UAAAN,EAAE;MAAA,OAAIA,EAAE,CAACZ,EAAH,KAAU,CAACA,EAAf;IAAA,CAA5B,CAAd;IACAd,eAAe,CAACiC,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;;IACA,IAAI,CAACA,KAAD,KAAW,CAAC,CAAhB,EAAmB;MACjB,OAAO,CAAC,GAAD,CAAP;IACD;;IAED,OAAO,CAAC,GAAD,CAAP;EACD,CATD;AAUD;;AAED,SAAShB,gBAAT,GAA4B;EAC1B,IAAMc,GAAG,GAAG7B,eAAe,CAACuC,GAAhB,CAAoB,UAAAb,EAAE;IAAA,OAAIA,EAAE,CAACZ,EAAP;EAAA,CAAtB,CAAZ;EACA,IAAM0B,KAAK,GAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQZ,GAAR,EAAlB;EACA,OAAOW,KAAK,GAAG,CAAf;AACD"},"metadata":{},"sourceType":"module"}