{"ast":null,"code":"import _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/inventory/DepotToDepotMovementReport.js\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport ProductCategoryTreeView from '../../../SalesCollection/CommonComponents/ProductCategoryTreeView';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport { getDayDiff, getDaysCount } from \"../../../Util\";\nexport default function DepotToDepotMovementReport() {\n  var fields = {\n    categoryIds: \"\",\n    productCategoryId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    reportFormat: \"\"\n  };\n\n  var _useState = useState(fields),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      producCategoryTree = _useState4[0],\n      setProductCategoryTree = _useState4[1];\n\n  var selectedCompany = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var userLoginId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n  var companyId = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var intl = useIntl();\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      productCategoryId = _useState6[0],\n      setProductCategoryId = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      categoryIds = _useState8[0],\n      setCategoryIds = _useState8[1]; //const [childCategoryList, setChildCategoryList] = useState([]);\n  //const [locationId, setLocationId] = useState('');\n  //const [locationTree, setLocationTree] = useState([]);\n  //const [accountingYearId, setAccountingYearId] = useState('');\n  //const [productList, setProductList] = useState([]);\n  //const [allAccountingYear, setAllAccountingYear] = useState([]);\n  //const [categoryName, setCategoryName] = useState('All');\n  //const [salesOfficer, setSalesOfficer] = useState([]);\n  //const [inputs, setInputs] = useState({});\n  //const [salesOfficerValue, setSalesOfficerValue] = useState(null);\n  //const [showReport, setShowReport] = useState('');\n  //const [reportData, setReportData] = useState([]);\n  //const [showProductTradePriceChangeHistory, setProductTradePriceChangeHistory] = useState(false);\n  //const [searchProductList, setSearchProductList] = useState([]);\n\n\n  var searchParams = useMemo(function () {\n    return {\n      userLoginId: userLoginId,\n      companyId: selectedCompany,\n      categoryIds: categoryIds,\n      productCategoryId: productCategoryId\n    };\n  }, [userLoginId, selectedCompany, productCategoryId]);\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedLocation = _useState10[0],\n      setSelectedLocation = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectProductCategory = _useState12[0],\n      setSelectProductCategory = _useState12[1]; //const [total, setTotal] = useState({ totalQuantity: 0, totlaSalesAmount: 0 });\n  //const [salesDataList, setProductTradePriceChangeHistoryList] = useState([]);\n\n\n  var history = useHistory();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      singleAll = _React$useState4[0],\n      setSingleAll = _React$useState4[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? 'simple-popper' : undefined;\n  useEffect(function () {\n    document.getElementById('reportShowIframe').style.display = \"none\";\n    getProductCategoryTreeList(selectedCompany);\n  }, [userLoginId, selectedCompany]);\n\n  var getProductCategoryTreeList = function getProductCategoryTreeList(params) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category/list-info/\") + params;\n    axios.get(URL).then(function (response) {\n      setProductCategoryTree(response.data.data.childProductCategoryDtoList);\n    }).catch(function (err) {\n      showError(\"Can not get product category tree data.\");\n    });\n  };\n\n  var selectTreeNode = function selectTreeNode(node) {\n    var id = \"summary-id-\" + node.id;\n    var getId = document.getElementById(id);\n    var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n    for (var i = 0; i < getElements.length; i++) {\n      getElements[i].classList.remove('tree-nav-item');\n    }\n\n    if (getId) {\n      getId.classList.add('tree-nav-item');\n      setSelectProductCategory(node);\n      setProductCategoryId(node.id);\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"productCategoryId\": node.id\n      }));\n    }\n\n    if (categoryIds.length !== 0) {\n      // for clear state\n      categoryIds.length = 0;\n    }\n\n    getProductCategoryIds(node);\n  }; // const getSalesOfficerListByLocation = (locationId, companyId) => {\n  //     const URL = `${process.env.REACT_APP_API_URL}/auth/get-sales-officer-location/${locationId}/${companyId}`;\n  //     axios.get(URL).then(response => {\n  //         if (response.data.data != undefined) {\n  //             console.log(response.data.data)\n  //             setSalesOfficer(response.data.data);\n  //         }\n  //     }).catch(err => {\n  //         showError(\"Cannot get Company data.\");\n  //     });\n  // }\n\n\n  var handleChange = function handleChange(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    setInputs(function (values) {\n      return _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var validate = function validate() {\n    // if (!inputs.productCategoryId) {\n    //     showError('Product Category is required.');\n    //     return false;\n    // }\n    if (!inputs.startDate) {\n      showError(\"Start date  is required\");\n      return false;\n    } else if (!inputs.endDate) {\n      showError(\"End date is required\");\n      return false;\n    } else if (inputs.endDate < inputs.startDate) {\n      showError(\"End Date should be greater than Start Date.\");\n      return false;\n    } else if (!inputs.reportFormat) {\n      showError('Report Format is required.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var previewValidate = function previewValidate() {\n    // if (!inputs.productCategoryId) {\n    //     showError('Product Category is required.');\n    //     return false;\n    // }\n    if (!inputs.startDate) {\n      showError(\"Start date  is required\");\n      return false;\n    } else if (!inputs.endDate) {\n      showError(\"End date is required\");\n      return false;\n    } else if (inputs.endDate < inputs.startDate) {\n      showError(\"End Date should be greater than Start Date.\");\n      return false;\n    }\n\n    return true;\n  };\n\n  var download = function download() {\n    if (categoryIds.length == 0) {\n      // all category pass when no category selected\n      producCategoryTree.map(function (aaa) {\n        getProductCategoryIds(aaa);\n      });\n    }\n\n    if (!validate()) {\n      return false;\n    }\n\n    var queryString = '?';\n    queryString += 'companyId=' + parseInt(selectedCompany);\n    queryString += categoryIds.length !== 0 ? '&categoryIds=' + categoryIds : '';\n    queryString += inputs.productCategoryId ? '&productCategoryId=' + inputs.productCategoryId : '';\n    queryString += '&startDate=' + inputs.startDate;\n    queryString += '&endDate=' + inputs.endDate;\n    queryString += '&reportFormat=' + inputs.reportFormat;\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/reports/depot-to-depot-movement-history\") + queryString;\n    axios.get(URL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var url = window.URL.createObjectURL(new Blob([response.data]));\n      var link = document.createElement('a');\n      link.href = url;\n\n      if (inputs.reportFormat == \"pdf\") {\n        link.setAttribute('download', \"depotToDepotMovement.pdf\");\n      } else {\n        link.setAttribute('download', \"depotToDepotMovement.xlsx\");\n      }\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var preview = function preview() {\n    if (categoryIds.length == 0) {\n      // all category pass when no category selected\n      producCategoryTree.map(function (aaa) {\n        getProductCategoryIds(aaa);\n      });\n    }\n\n    if (!previewValidate()) {\n      return false;\n    }\n\n    var queryString = '?';\n    queryString += 'companyId=' + parseInt(selectedCompany);\n    queryString += categoryIds.length !== 0 ? '&categoryIds=' + categoryIds : '';\n    queryString += inputs.productCategoryId ? '&productCategoryId=' + inputs.productCategoryId : '';\n    queryString += '&startDate=' + inputs.startDate;\n    queryString += '&endDate=' + inputs.endDate;\n    queryString += '&reportFormat=' + \"pdf\";\n    var dataURL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/reports/depot-to-depot-movement-history\") + queryString;\n    axios.get(dataURL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var file = new Blob([response.data], {\n        type: \"application/pdf\"\n      });\n      var fileURL = URL.createObjectURL(file);\n      var iframe = document.querySelector(\"iframe\");\n      if (iframe === null || iframe === void 0 ? void 0 : iframe.src) iframe.src = fileURL;\n      document.getElementById('reportShowIframe').style.display = \"inline-block\";\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var getProductCategoryIds = function getProductCategoryIds(node) {\n    var temp = _toConsumableArray(categoryIds);\n\n    var index = temp.findIndex(function (id) {\n      return id === node.id;\n    });\n\n    if (index === -1) {\n      categoryIds.push(node.id);\n    }\n\n    node.children.map(function (nodeChild) {\n      getProductCategoryIds(nodeChild);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MisReportBreadCrum, {\n    menuTitle: \"Depot To Depot Movement Report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-3\",\n    style: {\n      borderRight: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottom: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc3.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginLeft: \"10px\",\n      color: \"#828282\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 41\n    }\n  }, \"Product Category (All)\"))), /*#__PURE__*/React.createElement(ProductCategoryTreeView, {\n    tree: producCategoryTree,\n    selectProductCategoryTreeNode: selectTreeNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 41\n    }\n  }, \"Start Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 82\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"startDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"startDate\",\n    value: inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 41\n    }\n  }, \"End Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 80\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"endDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"endDate\",\n    value: inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    required: true,\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 76\n    }\n  }, \"Report Format\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 119\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"reportFormat\",\n    name: \"reportFormat\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 49\n    }\n  }, \"Select Report Format\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 49\n    }\n  }, \"Pdf\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"excel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 49\n    }\n  }, \"Excel\"))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: download,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 33\n    }\n  }, \"download\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-5 mr-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 37\n    }\n  }, \"Preview\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    src: \"\",\n    className: \"w-100\",\n    id: \"reportShowIframe\",\n    height: \"500px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 25\n    }\n  }))))));\n}","map":{"version":3,"names":["React","useEffect","useMemo","useState","toAbsoluteUrl","Card","CardBody","useHistory","LocationTreeView","showError","axios","useIntl","shallowEqual","useSelector","ProductCategoryTreeView","Autocomplete","TextField","Button","typeOf","moment","Flatpickr","MisReportBreadCrum","getDayDiff","getDaysCount","DepotToDepotMovementReport","fields","categoryIds","productCategoryId","startDate","endDate","reportFormat","inputs","setInputs","producCategoryTree","setProductCategoryTree","selectedCompany","state","auth","company","userLoginId","user","userId","companyId","intl","setProductCategoryId","setCategoryIds","searchParams","selectedLocation","setSelectedLocation","selectProductCategory","setSelectProductCategory","history","anchorEl","setAnchorEl","singleAll","setSingleAll","handleClick","event","currentTarget","open","Boolean","id","undefined","document","getElementById","style","display","getProductCategoryTreeList","params","URL","process","env","REACT_APP_API_URL","get","then","response","data","childProductCategoryDtoList","catch","err","selectTreeNode","node","getId","getElements","getElementsByClassName","i","length","classList","remove","add","getProductCategoryIds","handleChange","name","target","value","values","validate","previewValidate","download","map","aaa","queryString","parseInt","responseType","url","window","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","removeChild","preview","dataURL","file","type","fileURL","iframe","querySelector","src","temp","index","findIndex","push","children","nodeChild","borderRight","borderBottom","width","height","textAlign","marginLeft","color","format","dateFormat","Date","e"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/inventory/DepotToDepotMovementReport.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport ProductCategoryTreeView from '../../../SalesCollection/CommonComponents/ProductCategoryTreeView';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport { getDayDiff, getDaysCount } from \"../../../Util\"\n\n\nexport default function DepotToDepotMovementReport() {\n\n    const fields = {\n        categoryIds: \"\",\n        productCategoryId: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        reportFormat: \"\",\n    };\n\n    const [inputs, setInputs] = useState(fields);\n    const [producCategoryTree, setProductCategoryTree] = useState([]);\n    const selectedCompany = useSelector((state) => state.auth.company, shallowEqual);\n    const userLoginId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const companyId = useSelector((state) => state.auth.company, shallowEqual);\n    const intl = useIntl();\n    const [productCategoryId, setProductCategoryId] = useState('');\n    const [categoryIds, setCategoryIds] = useState([]);\n\n    //const [childCategoryList, setChildCategoryList] = useState([]);\n    //const [locationId, setLocationId] = useState('');\n    //const [locationTree, setLocationTree] = useState([]);\n    //const [accountingYearId, setAccountingYearId] = useState('');\n    //const [productList, setProductList] = useState([]);\n    //const [allAccountingYear, setAllAccountingYear] = useState([]);\n    //const [categoryName, setCategoryName] = useState('All');\n    //const [salesOfficer, setSalesOfficer] = useState([]);\n    //const [inputs, setInputs] = useState({});\n    //const [salesOfficerValue, setSalesOfficerValue] = useState(null);\n    //const [showReport, setShowReport] = useState('');\n    //const [reportData, setReportData] = useState([]);\n    //const [showProductTradePriceChangeHistory, setProductTradePriceChangeHistory] = useState(false);\n    //const [searchProductList, setSearchProductList] = useState([]);\n\n    const searchParams = useMemo(() => {\n        return {\n            userLoginId: userLoginId, companyId: selectedCompany,\n            categoryIds: categoryIds ,productCategoryId: productCategoryId\n        }\n    }, [userLoginId, selectedCompany, productCategoryId]);\n\n    const [selectedLocation, setSelectedLocation] = useState({});\n    const [selectProductCategory, setSelectProductCategory] = useState({});\n    //const [total, setTotal] = useState({ totalQuantity: 0, totlaSalesAmount: 0 });\n    //const [salesDataList, setProductTradePriceChangeHistoryList] = useState([]);\n\n    let history = useHistory();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    let [singleAll, setSingleAll] = React.useState([]);\n\n    const handleClick = (event) => {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popper' : undefined;\n \n    useEffect(() => {\n        document.getElementById('reportShowIframe').style.display = \"none\";\n        getProductCategoryTreeList(selectedCompany);\n    }, [userLoginId, selectedCompany]);\n\n\n    const getProductCategoryTreeList = (params) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category/list-info/` + params;\n        axios.get(URL).then(response => {\n            setProductCategoryTree(response.data.data.childProductCategoryDtoList);\n        }).catch(err => {\n            showError(\"Can not get product category tree data.\");\n        });\n    }\n\n    const selectTreeNode = (node) => {\n        let id = \"summary-id-\" + node.id;\n        const getId = document.getElementById(id);\n        const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n        for (var i = 0; i < getElements.length; i++) {\n            getElements[i].classList.remove('tree-nav-item');\n        }\n        if (getId) {\n            getId.classList.add('tree-nav-item');\n             setSelectProductCategory(node);\n             setProductCategoryId(node.id);\n             setInputs({ ...inputs, \"productCategoryId\": node.id })\n        }\n        if (categoryIds.length !== 0) { // for clear state\n            categoryIds.length = 0;\n        }\n        getProductCategoryIds(node);\n    }\n\n    // const getSalesOfficerListByLocation = (locationId, companyId) => {\n    //     const URL = `${process.env.REACT_APP_API_URL}/auth/get-sales-officer-location/${locationId}/${companyId}`;\n    //     axios.get(URL).then(response => {\n    //         if (response.data.data != undefined) {\n    //             console.log(response.data.data)\n    //             setSalesOfficer(response.data.data);\n    //         }\n    //     }).catch(err => {\n    //         showError(\"Cannot get Company data.\");\n    //     });\n    // }\n\n    const handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setInputs(values => ({ ...values, [name]: value }))\n    }\n\n    const validate = () => {\n\n        // if (!inputs.productCategoryId) {\n        //     showError('Product Category is required.');\n        //     return false;\n        // }\n        if (!inputs.startDate) {\n            showError(\"Start date  is required\");\n            return false;\n        }\n        else if (!inputs.endDate) {\n            showError(\"End date is required\");\n            return false;\n        }\n\n        else if (inputs.endDate < inputs.startDate) {\n            showError(\"End Date should be greater than Start Date.\");\n            return false;\n        }\n\n        else if (!inputs.reportFormat) {\n            showError('Report Format is required.');\n            return false;\n        }\n        return true;\n    }\n    const previewValidate = () => {\n\n        // if (!inputs.productCategoryId) {\n        //     showError('Product Category is required.');\n        //     return false;\n        // }\n        if (!inputs.startDate) {\n            showError(\"Start date  is required\");\n            return false;\n        }\n        else if (!inputs.endDate) {\n            showError(\"End date is required\");\n            return false;\n        }\n\n        else if (inputs.endDate < inputs.startDate) {\n            showError(\"End Date should be greater than Start Date.\");\n            return false;\n        }\n        return true;\n    }\n    const download = () => {        \n        if (categoryIds.length == 0) {\n            // all category pass when no category selected\n            producCategoryTree.map(aaa => {            \n                getProductCategoryIds(aaa);\n            }) \n        }         \n        \n        if (!validate()) {\n            return false;\n        }\n        let queryString = '?';\n        queryString += 'companyId=' + parseInt(selectedCompany);\n        queryString += categoryIds.length !== 0 ? '&categoryIds=' + categoryIds : '';\n        queryString += inputs.productCategoryId ? '&productCategoryId=' + inputs.productCategoryId : '';\n        queryString += '&startDate=' + inputs.startDate;\n        queryString += '&endDate=' + inputs.endDate;\n        queryString += '&reportFormat=' + inputs.reportFormat;\n\n        const URL = `${process.env.REACT_APP_API_URL}/api/reports/depot-to-depot-movement-history` + queryString;\n        axios.get(URL, { responseType: 'blob' }).then(response => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            if(inputs.reportFormat == \"pdf\") {\n                link.setAttribute('download', \"depotToDepotMovement.pdf\");\n            }\n            else {\n                link.setAttribute('download', \"depotToDepotMovement.xlsx\");\n            }\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n\n        }).catch(err => {\n            showError();\n        });\n    }\n\n    const preview = () => {        \n        if (categoryIds.length == 0) {\n            // all category pass when no category selected\n            producCategoryTree.map(aaa => {            \n                getProductCategoryIds(aaa);\n            }) \n        }         \n        \n        if (!previewValidate()) {\n            return false;\n        }\n        let queryString = '?';\n        queryString += 'companyId=' + parseInt(selectedCompany);\n        queryString += categoryIds.length !== 0 ? '&categoryIds=' + categoryIds : '';\n        queryString += inputs.productCategoryId ? '&productCategoryId=' + inputs.productCategoryId : '';\n        queryString += '&startDate=' + inputs.startDate;\n        queryString += '&endDate=' + inputs.endDate;\n        queryString += '&reportFormat=' + \"pdf\";\n\n        const dataURL = `${process.env.REACT_APP_API_URL}/api/reports/depot-to-depot-movement-history` + queryString;\n        axios.get(dataURL, { responseType: 'blob' }).then(response => {  \n            const file = new Blob([response.data], { type: \"application/pdf\" });\n            const fileURL = URL.createObjectURL(file);\n            const iframe = document.querySelector(\"iframe\");\n            if (iframe?.src) iframe.src = fileURL;\n            document.getElementById('reportShowIframe').style.display = \"inline-block\";\n        }).catch(err => {\n            showError();\n        });\n    }\n\n    const getProductCategoryIds = (node) => {\n        let temp = [...categoryIds]\n        let index = temp.findIndex(id => id === node.id)\n        if (index === -1) {\n            categoryIds.push(node.id)\n        }\n\n        node.children.map(nodeChild => {\n            getProductCategoryIds(nodeChild)\n        })\n    }\n\n    return (\n        <>\n            <div>\n                <MisReportBreadCrum menuTitle=\"Depot To Depot Movement Report\" />\n            </div>\n            <div>\n                <Card>\n                    <CardBody>\n                        <div className='row'>\n                            {/* LEFT SIDE TREE ROW */}\n                            <div className='col-xl-3' style={{ borderRight: \"1px solid #F2F2F2\" }}>\n                                <div style={{ borderBottom: \"1px solid #F2F2F2\" }}>\n                                    <label>\n                                        <img src={toAbsoluteUrl(\"/images/loc3.png\")}\n                                            style={{ width: \"20px\", height: \"20px\", textAlign: \"center\" }}\n                                            alt='Company Picture' />\n\n                                        <strong style={{\n                                            marginLeft: \"10px\",\n                                            color: \"#828282\"\n                                        }}>Product Category (All)</strong>\n                                    </label>\n                                </div>\n                                {/* TREE */}\n                                <ProductCategoryTreeView\n                                    tree={producCategoryTree}\n                                    selectProductCategoryTreeNode={selectTreeNode}\n                                />\n                            </div>\n                            {/* RIGHT SIDE LIST ROW */}\n                            <div className='col-xl-9'>\n                                <div className='mt-5 row'>\n\n                                </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>Start Date<i style={{ color: \"red\" }}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"startDate\" placeholder=\"dd-MM-yy\"\n                                            name='startDate'\n                                            value={inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"d-M-Y\" }}\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                })\n\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>End Date<i style={{ color: \"red\" }}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"endDate\" placeholder=\"dd-MM-yy\"\n                                            name='endDate'\n                                            value={inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"d-M-Y\" }} required\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                })\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span className=\"mr-1\">Report Format</span><span className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportFormat\" name=\"reportFormat\"\n                                                onChange={(e) => handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report Format</option>\n                                                <option value=\"pdf\">Pdf</option>\n                                                <option value=\"excel\">Excel</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <Button className=\"float-right mt-5\" id=\"gotItBtn\" variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={download}\n                                >\n                                    download\n                                </Button>\n                                <div className=\"float-right\">\n                                    <Button className=\"mt-5 mr-5\" id=\"gotItBtn\" variant=\"contained\" color=\"primary\" onClick={preview}>\n                                        Preview\n                                    </Button>\n                            </div>\n                            </div>\n                        </div>\n                        <div className='mt-5'>\n                        <iframe src=\"\" className='w-100' id=\"reportShowIframe\" height=\"500px\"/>\n                    </div>\n                    </CardBody>\n                </Card>\n            </div>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}