{"ast":null,"code":"import _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Inventory/configure/product-configure/ProductConfigurePage.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Card, CardBody, CardHeaderToolbar } from \"../../../../../_metronic/_partials/controls\";\nimport { ProductConfigureTable } from \"./product-configure-table/ProductConfigureTable\";\nimport axios from \"axios\";\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport LevelTreeModal from './LevelTreeModal';\nimport LevelSetup from './LevelSetup';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { CategoryTypeTree } from \"./CategoryTypeTree\";\nimport { showSuccess, showError } from '../../../../pages/Alert';\nimport { useLocation } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { set } from \"lodash\";\nimport * as XLSX from \"xlsx\";\nimport UnauthorizedPage from \"../../../Common/UnauthorizedPage\";\nimport { hasAcess } from \"../../../Util\";\nimport { event } from \"jquery\"; // this part is need to understand tree node\n\nvar categorTypeNode = {\n  id: null,\n  name: '',\n  level: '',\n  children: []\n};\nvar tree = [];\n\nvar addNode = function addNode(productCategoryTree, treeLevel, locationNode) {\n  productCategoryTree.map(function (node) {\n    // traverse every node to find match\n    if (node.treeLevel === treeLevel) {\n      node.children.push(locationNode);\n      return;\n    } else {\n      addNode(node.children, treeLevel, locationNode);\n      return;\n    }\n  });\n};\n\nexport default function ProductConfigurePage(props) {\n  var _this = this;\n\n  var permissions = useSelector(function (state) {\n    return state.auth.user.permissions;\n  }, shallowEqual);\n  var companyId = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var childCompanyList = useSelector(function (state) {\n    return state.auth.user.companies;\n  }, shallowEqual);\n  var selectedCompany = childCompanyList.find(function (it) {\n    return it.id == companyId;\n  });\n  var initialCategoryType = [{\n    id: null,\n    name: '',\n    level: 0,\n    companyId: companyId\n  }];\n  var routeProductCategory = useLocation();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      productCategoryTreeDepth = _useState2[0],\n      setProductCategoryTreeDepth = _useState2[1];\n\n  var initialLocationTypes = useRef(initialCategoryType);\n\n  var _useState3 = useState(tree),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categoryTypeTree = _useState4[0],\n      setCategoryTypeTree = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isUpdate = _useState6[0],\n      setIsUpdate = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      productCategoryTypes = _useState8[0],\n      setProductCategoryTypes = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      editNode = _useState10[0],\n      SetEditNode = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      singleAll = _useState12[0],\n      setSingleAll = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      categoryIds = _useState14[0],\n      setCategoryIds = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      reloadCategoryIds = _useState16[0],\n      setReloadCategoryIds = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      productProfileList = _useState18[0],\n      setProductProfileList = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      productProfileSearchList = _useState20[0],\n      setProductProfileSearchList = _useState20[1]; //const [levelSetupButtonId, setLevelSetupButtonId] = useState(\"update-btn\");\n  // const [breadCrumParentProductCategoryTypeName, setBreadCrumParentProductCategoryTypeName] = useState(\"sadfasf\");\n  // const [breadCrumParentProductCategoryName, setBreadCrumParentProductCategoryName] = useState(\"asfas\");\n\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      breadCrum = _useState22[0],\n      setBreadCrum = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      showProductCreateBtn = _useState24[0],\n      setShowProductCreateBtn = _useState24[1];\n\n  var _useState25 = useState({}),\n      _useState26 = _slicedToArray(_useState25, 2),\n      selectedNode = _useState26[0],\n      setSelectedNode = _useState26[1];\n\n  var handleChange = function handleChange(event) {\n    if (document.getElementById('update-btn') != null) {\n      document.getElementById('update-btn').style.display = 'block';\n    }\n\n    getAllProductCategoryTypeByCompanyWise(companyId);\n  };\n\n  useEffect(function () {\n    setProductCategoryTreeDepth(getProductCategoryTreeDepth(categoryTypeTree));\n  });\n  useEffect(function () {\n    getAllProductCategoryTypeByCompanyWise(companyId);\n    getAllProductCategoryTreeByCompanyWise(companyId);\n    setCategoryTypeTree(tree);\n  }, []); // useEffect(() => {\n  //     getAllProductCategoryTypeByCompanyWise(companyId);\n  //     getAllProductCategoryTreeByCompanyWise(companyId)\n  //     setCategoryTypeTree(tree);\n  // }, []);\n\n  useEffect(function () {\n    setSelectedNode({});\n    getAllProductCategoryTypeByCompanyWise(companyId);\n    getAllProductCategoryTreeByCompanyWise(companyId);\n    setCategoryTypeTree(tree);\n    setProductProfileList([]);\n    setProductProfileSearchList([]);\n    setShowProductCreateBtn(false);\n  }, [companyId]);\n  var productProfileUIEvents = {\n    newCategoryAddButtonClick: function newCategoryAddButtonClick() {\n      props.history.push(\"/inventory/configure/product-configure/list/add-category\");\n    },\n    newProductProfileButtonClick: function newProductProfileButtonClick() {\n      var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category-type/list-info/\").concat(companyId);\n      axios.get(URL).then(function (response) {\n        if (response.data.data.length > 0) {\n          if (selectedNode.treeLevel && selectedNode.treeLevel.split('-').length === response.data.data.length) {\n            props.history.push({\n              pathname: \"/inventory/configure/product-configure/new\",\n              state: {\n                breadCrum: breadCrum\n              }\n            });\n          } else {\n            showError(\"Please Check Level Setup\");\n            return;\n          }\n        }\n      });\n    }\n  };\n\n  var getAllProductCategoryTypeByCompanyWise = function getAllProductCategoryTypeByCompanyWise(id) {\n    if (id) {\n      var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category-type/list-info/\").concat(id);\n      axios.get(URL).then(function (response) {\n        if (response.data.data.length > 0) {\n          var productCategoryTypeList = response.data.data;\n          initialLocationTypes.current = productCategoryTypeList;\n          setProductCategoryTypes(productCategoryTypeList);\n          setIsUpdate(true);\n        } else {\n          initialLocationTypes.current = initialCategoryType;\n          setProductCategoryTypes([]);\n        }\n      });\n    }\n  };\n\n  var getAllProductCategoryTreeByCompanyWise = function getAllProductCategoryTreeByCompanyWise(id) {\n    if (id) {\n      var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category/list-info/\").concat(id);\n      axios.get(URL).then(function (response) {\n        if (response.data.data.childProductCategoryDtoList.length > 0) {\n          setIsUpdate(true);\n          setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n        } else {\n          setCategoryTypeTree([]);\n        }\n      });\n    }\n  };\n\n  var getProductCategoryTreeDepth = function getProductCategoryTreeDepth(data) {\n    if (data.length === 0) {\n      return 0;\n    } else {\n      var max = 0;\n\n      for (var i = 0; i < data.length; i++) {\n        max = Math.max(max, getProductCategoryTreeDepth(data[i].children));\n      }\n\n      return 1 + max;\n    }\n  }; // Get all product by category ids\n\n\n  var selectProductCategoryName = function selectProductCategoryName(node) {\n    setSelectedNode(node);\n\n    if (node !== '') {\n      getProductCategoryIds(node);\n    }\n\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category/get-all-product?ids=\").concat(categoryIds);\n    axios.get(URL).then(function (response) {\n      if (response.data.data) {\n        setProductProfileList(response.data.data);\n        setProductProfileSearchList(response.data.data);\n        setCategoryIds([]);\n      }\n    });\n  }; // Get category id recursively\n\n\n  var getProductCategoryIds = function getProductCategoryIds(node) {\n    var temp = _toConsumableArray(categoryIds);\n\n    var index = temp.findIndex(function (id) {\n      return id === node.id;\n    });\n\n    if (index === -1) {\n      categoryIds.push(node.id);\n    }\n\n    node.children.map(function (nodeChild) {\n      getProductCategoryIds(nodeChild);\n    });\n  };\n\n  var getBreadCrumByCategoryId = function getBreadCrumByCategoryId(id) {\n    var categoryNode = getCategoryNodeById(categoryTypeTree, id);\n    return getBreadCrum(categoryNode);\n  };\n\n  var getCategoryNodeById = function getCategoryNodeById(arr, id) {\n    for (var j = 0; j < arr.length; j++) {\n      if (arr[j].id == id) {\n        return arr[j];\n      } else {\n        var val = getCategoryNodeById(arr[j].children, id);\n\n        if (val) {\n          return val;\n        }\n      }\n    }\n\n    ;\n  };\n\n  var getBreadCrum = function getBreadCrum(node) {\n    setBreadCrum([]);\n    var level = '';\n    var breadCrumTemp = new Array();\n    var treeLevels = node.treeLevel.split('-');\n    var treeLength = treeLevels.length;\n    console.log(\"node.children.length\", node.children.length);\n    console.log(\"node.children.treeLength\", treeLength);\n    console.log(\"productCategoryTypes.length\", productCategoryTypes.length);\n    setShowProductCreateBtn(node.children.length == 0 && node.id != null && treeLength == productCategoryTypes.length);\n\n    if (treeLength > 1) {\n      level = treeLevels[0];\n      var rootNode = categoryTypeTree.find(function (obj) {\n        return obj.treeLevel === level;\n      });\n      breadCrumTemp.push(rootNode);\n\n      for (var i = 1; i < treeLength - 1; i++) {\n        level += '-' + treeLevels[i];\n        rootNode = rootNode.children.find(function (obj) {\n          return obj.treeLevel === level;\n        });\n        breadCrumTemp.push(rootNode);\n      }\n    }\n\n    breadCrumTemp.push(node);\n    setBreadCrum(breadCrumTemp);\n    return breadCrumTemp;\n  };\n\n  var addTreeNode = function addTreeNode(node) {\n    // add category type name\n    var treeLength = node.treeLevel.split('-').length;\n\n    if (productCategoryTypes.length == 0 || productCategoryTypes.length > 0 && productCategoryTypes[0].id == null) {\n      showError(\"Please Add Level Setup\");\n      return;\n    } else {\n      if (node.treeLevel != '') {\n        node.nextCategoryType = productCategoryTypes[treeLength].name;\n      }\n\n      node.action = 'add';\n      props.history.push({\n        pathname: '/inventory/configure/product-configure/list/add-category',\n        state: node\n      });\n      /* if (node && node.hasOwnProperty(\"action\")) {\n          node.action = 'add';\n          props.history.push({ pathname: '/inventory/configure/product-configure/list/add-category', state: node });\n      } else {\n          props.history.push({ pathname: '/inventory/configure/product-configure/list/add-category', state: node });\n      } */\n    }\n  };\n\n  var updateTreeNode = function updateTreeNode(node) {\n    node.action = 'update';\n    props.history.push({\n      pathname: '/inventory/configure/product-configure/list/add-category',\n      state: node\n    });\n  };\n\n  var updateNode = function updateNode(productCategoryTree, treeLevel, productCategoryParams) {\n    productCategoryTree.map(function (node) {\n      // traverse every node to find match\n      if (node.treeLevel === treeLevel) {\n        node.name = productCategoryParams.categoryTypeName;\n        node.companyId = companyId;\n        setIsUpdate(true);\n        SetEditNode(node);\n        return;\n      } else {\n        updateNode(node.children, treeLevel, productCategoryParams);\n        return;\n      }\n    });\n  };\n\n  var deleteTreeNode = function deleteTreeNode(node) {\n    deleteNode(node);\n    props.history.push(\"/inventory/configure/product-configure/list\");\n  };\n\n  function deleteCategoryTreeNode(categoryTree, treeLevel) {\n    for (var i = 0; i < categoryTree.length; i++) {\n      if (categoryTree[i].treeLevel === treeLevel) {\n        categoryTree.splice(i, 1); //remove that node\n\n        return;\n      } else {\n        deleteCategoryTreeNode(categoryTree[i].children, treeLevel);\n      }\n    }\n  }\n\n  var deleteNode = function deleteNode(node) {\n    if (node.id) {\n      var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category/\").concat(node.id);\n      axios.delete(URL).then(function (response) {\n        if (response.data.success == true) {\n          showSuccess(response.data.message); // deleteCategoryTreeNode(categoryTypeTree, node.treeLevel);\n\n          setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n        } else {\n          showError(response.data.message);\n        }\n      }).catch(function (err) {\n        showError(err);\n      });\n    } else {\n      deleteCategoryTreeNode(categoryTypeTree, node.treeLevel);\n    }\n  };\n\n  var saveProductCategory = function saveProductCategory() {\n    var obj = {};\n    obj.childProductCategoryDtoList = categoryTypeTree;\n    obj.companyId = companyId;\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category/create-all\");\n    axios.post(URL, JSON.stringify(obj), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      if (response.data.success == true) {\n        setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n        showSuccess(response.data.message);\n      } else {\n        showError(response.data.message);\n      }\n    }).catch(function (err) {\n      showError(err);\n    });\n    props.history.push(\"/inventory/configure/product-configure/list\");\n  };\n\n  var updateProductCategory = function updateProductCategory() {\n    var obj = {};\n    obj.childProductCategoryDtoList = categoryTypeTree;\n    obj.companyId = companyId;\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category/update-all\");\n    axios.put(URL, JSON.stringify(obj), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      if (response.data.success == true) {\n        setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n        showSuccess(response.data.message);\n      } else {\n        showError(response.data.message);\n      }\n    }).catch(function (err) {\n      showError(err);\n    });\n    props.history.push(\"/inventory/configure/product-configure/list\");\n  };\n  /* const updateProductCategory = () => {\n      const URL = `${process.env.REACT_APP_API_URL}/api/product-category`;\n      axios.put(URL, JSON.stringify(editNode), { headers: { \"Content-Type\": \"application/json\" } }).then(response => {\n          if (response.data.success == true) {\n              setIsUpdate(false)\n              setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n              showSuccess(response.data.message)\n          } else {\n              showError(response.data.message);\n          }\n      }).catch(err => {\n          showError(err);\n      });\n      props.history.push(\"/inventory/configure/product-configure/list\");\n  } */\n\n\n  var handleCategorySubmit = function handleCategorySubmit() {\n    if (isUpdate) {\n      updateProductCategory();\n    } else {\n      saveProductCategory();\n    }\n  };\n\n  var exportData = function exportData(e) {\n    if (e.target.value === 'excel') {\n      handleExport();\n    }\n  };\n\n  var handleExport = function handleExport() {\n    var data = _toConsumableArray(singleAll);\n\n    if (data.length === 0) {\n      showError(\"No row is selected for export data\");\n      return;\n    }\n\n    var exportData = [];\n    data.map(function (row) {\n      var obj = {};\n      obj.productSku = row.product_sku;\n      obj.productName = row.name + ' ' + row.item_size + ' ' + row.uom_name + ' * ' + row.pack_size;\n      obj.expiryDays = row.expiry_days;\n      obj.minimumStock = row.minimum_stock;\n      exportData.push(obj);\n      setSingleAll([]);\n    });\n    var workbook = XLSX.utils.book_new();\n    var Heading = [[\"Product SKU\", \"Product Name\", \"Expiry Days\", \"Minimum Stock\"]];\n    var worksheet = XLSX.utils.json_to_sheet(exportData, {\n      origin: 'A2',\n      skipHeader: true\n    }); // creating sheet and adding data from 2nd row of column A.\n    // Leaving first row to add Heading\n\n    XLSX.utils.sheet_add_aoa(worksheet, Heading, {\n      origin: 'A1'\n    });\n    /* const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    for (let i = 0; i < Heading.length; i++) {\n        worksheet[letters.charAt(i).concat('1')].s = {\n            font: {\n                name: 'arial',\n                sz: 10,\n                bold: true,\n                color: \"#F2F2F2\"\n            },\n        }\n    } */\n\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n    XLSX.writeFile(workbook, \"ProductProfileList.xlsx\");\n  };\n\n  var handleSearchChange = function handleSearchChange(event) {\n    var value = event.target.value;\n    getSearchList(value);\n  };\n\n  console.log(productProfileSearchList);\n\n  var getSearchList = function getSearchList(searchText) {\n    var searchTextValue = searchText.toLowerCase();\n    var tp = [];\n\n    for (var i = 0; i < productProfileSearchList.length; i++) {\n      var productSku = productProfileSearchList[i].product_sku.toLowerCase();\n      var productName = productProfileSearchList[i].name.toLowerCase();\n\n      if (productSku.includes(searchTextValue) || productName.includes(searchTextValue)) {\n        tp.push(productProfileSearchList[i]);\n      }\n    }\n\n    setProductProfileList(tp);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    path: \"/inventory/configure/product-configure/list/add-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 13\n    }\n  }, function (_ref) {\n    var history = _ref.history,\n        match = _ref.match;\n    return /*#__PURE__*/React.createElement(LevelTreeModal, {\n      node: routeProductCategory.state,\n      show: match != null,\n      onHide: function onHide() {\n        history.push(\"/inventory/configure/product-configure/list\");\n      },\n      handleSubmit: function handleSubmit(productCategoryParams) {\n        var productCategoryTree = categoryTypeTree;\n\n        if (typeof routeProductCategory.state !== 'undefined' && routeProductCategory.state.action === 'update') {\n          // for update existing\n          updateNode(productCategoryTree, routeProductCategory.state.treeLevel, productCategoryParams);\n        } else {\n          // for add new// for add new\n          var treeLevel = '';\n          var _categorTypeNode = {\n            id: null,\n            name: productCategoryParams.categoryTypeName,\n            treeLevel: treeLevel,\n            typeName: routeProductCategory.state.nextCategoryType,\n            children: []\n          };\n\n          if (routeProductCategory.state.treeLevel === '') {\n            //  top layer node add\n            treeLevel = '' + (categoryTypeTree.length + 1);\n            _categorTypeNode.treeLevel = treeLevel;\n            productCategoryTree.push(_categorTypeNode);\n          } else {\n            // any child node add\n            treeLevel = routeProductCategory.state.treeLevel + '-' + (routeProductCategory.state.children.length + 1);\n            _categorTypeNode.treeLevel = treeLevel;\n            addNode(productCategoryTree, routeProductCategory.state.treeLevel, _categorTypeNode);\n          }\n        }\n\n        history.push(\"/inventory/configure/product-configure/list\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 21\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"-30px\",\n      marginLeft: \"-18px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    class: \"breadCrum-bg-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    \"aria-current\": \"page\",\n    className: \"breadCrum-main-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 25\n    }\n  }, selectedCompany === null || selectedCompany === void 0 ? void 0 : selectedCompany.name), /*#__PURE__*/React.createElement(\"li\", {\n    \"aria-current\": \"page\",\n    className: \"mt-1 breadCrum-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 25\n    }\n  }, \"\\xA0Inventory\\xA0\\xA0\\xA0\\xA0\"), /*#__PURE__*/React.createElement(\"li\", {\n    \"aria-current\": \"page\",\n    className: \"mt-1 breadCrum-sub-title text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-weight-bolder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 99\n    }\n  }, \".\"), \"\\xA0 Configure \\xA0\\xA0\"), /*#__PURE__*/React.createElement(\"li\", {\n    \"aria-current\": \"page\",\n    className: \"mt-1 breadCrum-sub-title text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-weight-bolder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 99\n    }\n  }, \".\"), \"\\xA0 Product Configure\")))), hasAcess(permissions, 'PRODUCT_CONFIGURE') ? /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4 border border-left-0 border border-light border-primary border-bottom-0 border-top-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: \"levelTree\",\n    id: \"tab\",\n    className: \"mr-5 pr-5 mb-5 tabs-class\",\n    centered: true,\n    onClick: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"levelTree\",\n    title: \"Level Tree\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc1.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn ml-0 btn-sm\",\n    onClick: function onClick(event) {\n      event.preventDefault();\n      addTreeNode({\n        nextCategoryType: productCategoryTypes.length > 0 ? productCategoryTypes[0].name : '',\n        treeLevel: '',\n        children: []\n      }); //most top level\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-plus-circle-fill text-primary\",\n    style: {\n      fontSize: \"20px\",\n      marginLeft: \"-4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"tree-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CategoryTypeTree, {\n    tree: categoryTypeTree,\n    addTreeNode: addTreeNode,\n    updateTreeNode: updateTreeNode,\n    maxDepth: productCategoryTypes.length,\n    deleteTreeNode: deleteTreeNode,\n    selectProductCategoryName: selectProductCategoryName,\n    getBreadCrum: getBreadCrum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary  btn-sm float-right ml-3 mt-5 \",\n    onClick: handleCategorySubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 41\n    }\n  }, categoryTypeTree.length > 0 ? 'Update' : 'Save')), /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"levelSetup\",\n    title: \"Level Setup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(LevelSetup, {\n    setProductCategoryTypes: setProductCategoryTypes,\n    maxDepth: productCategoryTreeDepth,\n    productCategoryTypeDtoList: initialLocationTypes.current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"cardBackground\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-profile-breadcrum \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    class: \"breadCrum-bg-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 45\n    }\n  }, breadCrum.length > 0 && breadCrum.map(function (row, index) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      \"aria-current\": \"page\",\n      className: \"mt-1 breadCrum-sub-title\",\n      style: {\n        fontSize: \"13px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"bi bi-chevron-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 71\n      }\n    })), \"\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 65\n      }\n    }, row.typeName, \" \\xA0\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 65\n      }\n    }, row.name)));\n  })))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"create-field-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 49\n    }\n  }, \"Product Profile List\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"#B6B6B6\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 49\n    }\n  }, \"Total \", productProfileList.length, \" products \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form form-label-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"searchText\",\n    placeholder: \"Search Here\",\n    style: {\n      paddingLeft: \"28px\"\n    },\n    onChange: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 57\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-7 d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(CardHeaderToolbar, {\n    title: \"Add Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 53\n    }\n  }, showProductCreateBtn ? /*#__PURE__*/React.createElement(\"button\", {\n    tree: categoryTypeTree,\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: productProfileUIEvents.newProductProfileButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 61\n    }\n  }, \"+ New Product Profile\") : '')), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginRight: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    \"aria-label\": \"Default select example\",\n    onChange: exportData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 57\n    }\n  }, \"Export\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"excel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 57\n    }\n  }, \"Excel\"))))), /*#__PURE__*/React.createElement(ProductConfigureTable, {\n    setSingleAll: setSingleAll,\n    singleAll: singleAll,\n    productProfileList: productProfileList,\n    setProductProfileList: setProductProfileList,\n    getBreadCrum: getBreadCrumByCategoryId,\n    reloadProductList: selectProductCategoryName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 41\n    }\n  }))))))) : /*#__PURE__*/React.createElement(UnauthorizedPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 19\n    }\n  }));\n}","map":{"version":3,"names":["React","useRef","useState","useEffect","Route","Card","CardBody","CardHeaderToolbar","ProductConfigureTable","axios","Tabs","Tab","LevelTreeModal","LevelSetup","toAbsoluteUrl","CategoryTypeTree","showSuccess","showError","useLocation","shallowEqual","useSelector","set","XLSX","UnauthorizedPage","hasAcess","event","categorTypeNode","id","name","level","children","tree","addNode","productCategoryTree","treeLevel","locationNode","map","node","push","ProductConfigurePage","props","permissions","state","auth","user","companyId","company","childCompanyList","companies","selectedCompany","find","it","initialCategoryType","routeProductCategory","productCategoryTreeDepth","setProductCategoryTreeDepth","initialLocationTypes","categoryTypeTree","setCategoryTypeTree","isUpdate","setIsUpdate","productCategoryTypes","setProductCategoryTypes","editNode","SetEditNode","singleAll","setSingleAll","categoryIds","setCategoryIds","reloadCategoryIds","setReloadCategoryIds","productProfileList","setProductProfileList","productProfileSearchList","setProductProfileSearchList","breadCrum","setBreadCrum","showProductCreateBtn","setShowProductCreateBtn","selectedNode","setSelectedNode","handleChange","document","getElementById","style","display","getAllProductCategoryTypeByCompanyWise","getProductCategoryTreeDepth","getAllProductCategoryTreeByCompanyWise","productProfileUIEvents","newCategoryAddButtonClick","history","newProductProfileButtonClick","URL","process","env","REACT_APP_API_URL","get","then","response","data","length","split","pathname","productCategoryTypeList","current","childProductCategoryDtoList","max","i","Math","selectProductCategoryName","getProductCategoryIds","temp","index","findIndex","nodeChild","getBreadCrumByCategoryId","categoryNode","getCategoryNodeById","getBreadCrum","arr","j","val","breadCrumTemp","Array","treeLevels","treeLength","console","log","rootNode","obj","addTreeNode","nextCategoryType","action","updateTreeNode","updateNode","productCategoryParams","categoryTypeName","deleteTreeNode","deleteNode","deleteCategoryTreeNode","categoryTree","splice","delete","success","message","catch","err","saveProductCategory","post","JSON","stringify","headers","updateProductCategory","put","handleCategorySubmit","exportData","e","target","value","handleExport","row","productSku","product_sku","productName","item_size","uom_name","pack_size","expiryDays","expiry_days","minimumStock","minimum_stock","workbook","utils","book_new","Heading","worksheet","json_to_sheet","origin","skipHeader","sheet_add_aoa","book_append_sheet","writeFile","handleSearchChange","getSearchList","searchText","searchTextValue","toLowerCase","tp","includes","match","typeName","marginTop","marginLeft","width","height","textAlign","preventDefault","fontSize","color","paddingLeft","marginRight"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Inventory/configure/product-configure/ProductConfigurePage.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport {\n    Card,\n    CardBody,\n    CardHeaderToolbar,\n} from \"../../../../../_metronic/_partials/controls\";\nimport { ProductConfigureTable } from \"./product-configure-table/ProductConfigureTable\";\nimport axios from \"axios\";\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport LevelTreeModal from './LevelTreeModal'\nimport LevelSetup from './LevelSetup'\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { CategoryTypeTree } from \"./CategoryTypeTree\"\nimport { showSuccess, showError } from '../../../../pages/Alert';\nimport { useLocation } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { set } from \"lodash\";\nimport * as XLSX from \"xlsx\";\nimport UnauthorizedPage from \"../../../Common/UnauthorizedPage\";\nimport { hasAcess } from \"../../../Util\";\nimport { event } from \"jquery\";\n\n// this part is need to understand tree node\nvar categorTypeNode = {\n    id: null,\n    name: '',\n    level: '',\n    children: []\n};\n\nlet tree = [];\n\nconst addNode = (productCategoryTree, treeLevel, locationNode) => {\n    productCategoryTree.map((node) => {  // traverse every node to find match\n        if (node.treeLevel === treeLevel) {\n            node.children.push(locationNode);\n            return;\n        } else {\n            addNode(node.children, treeLevel, locationNode);\n            return;\n        }\n    });\n}\n\nexport default function ProductConfigurePage(props) {\n    const permissions = useSelector((state) => state.auth.user.permissions, shallowEqual);\n    const companyId = useSelector((state) => state.auth.company, shallowEqual);\n    const childCompanyList = useSelector((state) => state.auth.user.companies, shallowEqual);\n    const selectedCompany = childCompanyList.find(it => it.id == companyId);\n    const initialCategoryType = [{ id: null, name: '', level: 0, companyId: companyId, }];\n    const routeProductCategory = useLocation();\n    const [productCategoryTreeDepth, setProductCategoryTreeDepth] = useState();\n    const initialLocationTypes = useRef(initialCategoryType);\n    const [categoryTypeTree, setCategoryTypeTree] = useState(tree);\n    const [isUpdate, setIsUpdate] = useState(false);\n    const [productCategoryTypes, setProductCategoryTypes] = useState([]);\n    const [editNode, SetEditNode] = useState({});\n    const [singleAll, setSingleAll] = useState([]);\n    const [categoryIds, setCategoryIds] = useState([]);\n    const [reloadCategoryIds, setReloadCategoryIds] = useState([]);\n    const [productProfileList, setProductProfileList] = useState([]);\n    const [productProfileSearchList, setProductProfileSearchList] = useState([]);\n    //const [levelSetupButtonId, setLevelSetupButtonId] = useState(\"update-btn\");\n    // const [breadCrumParentProductCategoryTypeName, setBreadCrumParentProductCategoryTypeName] = useState(\"sadfasf\");\n    // const [breadCrumParentProductCategoryName, setBreadCrumParentProductCategoryName] = useState(\"asfas\");\n    const [breadCrum, setBreadCrum] = useState([]);\n    const [showProductCreateBtn, setShowProductCreateBtn] = useState(false);\n\n    const [selectedNode, setSelectedNode] = useState({});\n\n    const handleChange = (event) => {\n        if(document.getElementById('update-btn') != null){\n            document.getElementById('update-btn').style.display = 'block' \n        }\n        getAllProductCategoryTypeByCompanyWise(companyId);\n    };\n\n\n    useEffect(() => {\n        setProductCategoryTreeDepth(getProductCategoryTreeDepth(categoryTypeTree));\n    });\n\n    useEffect(() => {\n        getAllProductCategoryTypeByCompanyWise(companyId);\n        getAllProductCategoryTreeByCompanyWise(companyId)\n        setCategoryTypeTree(tree);\n\n    }, []);\n    // useEffect(() => {\n    //     getAllProductCategoryTypeByCompanyWise(companyId);\n    //     getAllProductCategoryTreeByCompanyWise(companyId)\n    //     setCategoryTypeTree(tree);\n\n    // }, []);\n\n    useEffect(() => {\n        setSelectedNode({})\n        getAllProductCategoryTypeByCompanyWise(companyId);\n        getAllProductCategoryTreeByCompanyWise(companyId)\n        setCategoryTypeTree(tree);\n        setProductProfileList([]);\n        setProductProfileSearchList([]);\n        setShowProductCreateBtn(false);\n    }, [companyId]);\n\n    const productProfileUIEvents = {\n        newCategoryAddButtonClick: () => {\n            props.history.push(\"/inventory/configure/product-configure/list/add-category\");\n        },\n        newProductProfileButtonClick: () => {\n            const URL = `${process.env.REACT_APP_API_URL}/api/product-category-type/list-info/${companyId}`;\n            axios.get(URL).then(response => {\n            if (response.data.data.length > 0) {             \n                if(selectedNode.treeLevel && selectedNode.treeLevel.split('-').length === response.data.data.length){\n                    props.history.push({ pathname: \"/inventory/configure/product-configure/new\", state: { breadCrum } });\n                }else{\n                    showError(\"Please Check Level Setup\"); \n                    return;\n                }\n            }\n        });\n        },\n    };\n\n    const getAllProductCategoryTypeByCompanyWise = (id) => {\n        if (id) {         \n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category-type/list-info/${id}`;\n        axios.get(URL).then(response => {\n            if (response.data.data.length > 0) {\n                const productCategoryTypeList = response.data.data;\n                initialLocationTypes.current = productCategoryTypeList;\n                setProductCategoryTypes(productCategoryTypeList);\n                setIsUpdate(true);\n            } else {\n                initialLocationTypes.current = initialCategoryType;\n                setProductCategoryTypes([]);\n            }\n        });}\n    }\n\n\n    const getAllProductCategoryTreeByCompanyWise = (id) => {\n        if (id) {          \n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category/list-info/${id}`;\n        axios.get(URL).then(response => {\n            if (response.data.data.childProductCategoryDtoList.length > 0) {\n                setIsUpdate(true);\n                setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n            } else {\n                setCategoryTypeTree([]);\n            }\n        });  \n    }\n    }\n\n    const getProductCategoryTreeDepth = (data) => {\n        if (data.length === 0) {\n            return 0;\n        } else {\n            let max = 0\n            for (let i = 0; i < data.length; i++) {\n                max = Math.max(max, getProductCategoryTreeDepth(data[i].children));\n            }\n            return 1 + max;\n        }\n    }\n\n    // Get all product by category ids\n    const selectProductCategoryName = (node) => {\n        setSelectedNode(node)\n\n        if (node !== '') {\n            getProductCategoryIds(node);\n        }\n\n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category/get-all-product?ids=${categoryIds}`\n        axios.get(URL).then(response => {\n            if (response.data.data) {\n                setProductProfileList(response.data.data)\n                setProductProfileSearchList(response.data.data)\n                setCategoryIds([]);\n            }\n        });\n    }\n\n    // Get category id recursively\n    const getProductCategoryIds = (node) => {\n        let temp = [...categoryIds]\n        let index = temp.findIndex(id => id === node.id)\n        if (index === - 1) {\n            categoryIds.push(node.id)\n        }\n\n        node.children.map(nodeChild => {\n            getProductCategoryIds(nodeChild)\n        })\n    }\n\n    const getBreadCrumByCategoryId = (id) => {\n        let categoryNode = getCategoryNodeById(categoryTypeTree, id);\n        return getBreadCrum(categoryNode);\n    }\n\n    const getCategoryNodeById = (arr, id) => {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[j].id == id) {\n                return arr[j];\n            } else {\n                let val = getCategoryNodeById(arr[j].children, id)\n                if (val) {\n                    return val;\n                }\n            }\n        };\n    }\n\n    const getBreadCrum = (node) => {\n        setBreadCrum([])\n\n        let level = ''\n        const breadCrumTemp = new Array()\n        const treeLevels = node.treeLevel.split('-')\n        const treeLength = treeLevels.length\n\n        console.log(\"node.children.length\", node.children.length);\n        console.log(\"node.children.treeLength\", treeLength);\n        console.log(\"productCategoryTypes.length\", productCategoryTypes.length);\n        setShowProductCreateBtn(node.children.length == 0 && node.id != null && treeLength == productCategoryTypes.length);\n        if (treeLength > 1) {\n            level = treeLevels[0]\n            let rootNode = categoryTypeTree.find(obj => obj.treeLevel === level)\n            breadCrumTemp.push(rootNode)\n\n            for (let i = 1; i < treeLength - 1; i++) {\n                level += '-' + treeLevels[i]\n                rootNode = rootNode.children.find(obj => obj.treeLevel === level)\n                breadCrumTemp.push(rootNode)\n            }\n        }\n\n        breadCrumTemp.push(node)\n        setBreadCrum(breadCrumTemp)\n\n        return breadCrumTemp\n    }\n\n    const addTreeNode = (node) => { // add category type name\n        let treeLength = node.treeLevel.split('-').length\n        if (productCategoryTypes.length == 0 || (productCategoryTypes.length > 0 && productCategoryTypes[0].id == null)) {\n            showError(\"Please Add Level Setup\");\n            return;\n        } else {\n            if (node.treeLevel != '') {\n                node.nextCategoryType = productCategoryTypes[treeLength].name\n            }\n\n            node.action = 'add';\n            props.history.push({ pathname: '/inventory/configure/product-configure/list/add-category', state: node });\n\n            /* if (node && node.hasOwnProperty(\"action\")) {\n                node.action = 'add';\n                props.history.push({ pathname: '/inventory/configure/product-configure/list/add-category', state: node });\n            } else {\n                props.history.push({ pathname: '/inventory/configure/product-configure/list/add-category', state: node });\n            } */\n\n        }\n    }\n\n\n    const updateTreeNode = (node) => {\n        node.action = 'update';\n        props.history.push({ pathname: '/inventory/configure/product-configure/list/add-category', state: node });\n    }\n\n    const updateNode = (productCategoryTree, treeLevel, productCategoryParams) => {\n        productCategoryTree.map((node) => {  // traverse every node to find match\n            if (node.treeLevel === treeLevel) {\n                node.name = productCategoryParams.categoryTypeName;\n                node.companyId = companyId;\n                setIsUpdate(true)\n                SetEditNode(node)\n                return;\n            } else {\n                updateNode(node.children, treeLevel, productCategoryParams);\n                return;\n            }\n        });\n    }\n\n    const deleteTreeNode = (node) => {\n        deleteNode(node);\n        props.history.push(\"/inventory/configure/product-configure/list\");\n    }\n\n    function deleteCategoryTreeNode(categoryTree, treeLevel) {\n        for (let i = 0; i < categoryTree.length; i++) {\n            if (categoryTree[i].treeLevel === treeLevel) {\n                categoryTree.splice(i, 1); //remove that node\n                return;\n            } else {\n                deleteCategoryTreeNode(categoryTree[i].children, treeLevel);\n            }\n        }\n    }\n\n    const deleteNode = (node) => {\n        if (node.id) {\n            const URL = `${process.env.REACT_APP_API_URL}/api/product-category/${node.id}`;\n            axios.delete(URL).then(response => {\n                if (response.data.success == true) {\n                    showSuccess(response.data.message)\n                    // deleteCategoryTreeNode(categoryTypeTree, node.treeLevel);\n                    setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n                } else {\n                    showError(response.data.message);\n                }\n            }).catch(err => {\n                showError(err);\n            });\n        } else {\n            deleteCategoryTreeNode(categoryTypeTree, node.treeLevel);\n        }\n\n    }\n\n    const saveProductCategory = () => {\n        let obj = {}\n        obj.childProductCategoryDtoList = categoryTypeTree;\n        obj.companyId = companyId;\n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category/create-all`;\n        axios.post(URL, JSON.stringify(obj), { headers: { \"Content-Type\": \"application/json\" } }).then(response => {\n            if (response.data.success == true) {\n                setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n                showSuccess(response.data.message)\n            } else {\n                showError(response.data.message);\n            }\n        }).catch(err => {\n            showError(err);\n        });\n        props.history.push(\"/inventory/configure/product-configure/list\");\n    }\n\n\n    const updateProductCategory = () => {\n        let obj = {}\n        obj.childProductCategoryDtoList = categoryTypeTree;\n        obj.companyId = companyId;\n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category/update-all`;\n        axios.put(URL, JSON.stringify(obj), { headers: { \"Content-Type\": \"application/json\" } }).then(response => {\n            if (response.data.success == true) {\n                setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n                showSuccess(response.data.message)\n            } else {\n                showError(response.data.message);\n            }\n        }).catch(err => {\n            showError(err);\n        });\n        props.history.push(\"/inventory/configure/product-configure/list\");\n    }\n\n    /* const updateProductCategory = () => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category`;\n        axios.put(URL, JSON.stringify(editNode), { headers: { \"Content-Type\": \"application/json\" } }).then(response => {\n            if (response.data.success == true) {\n                setIsUpdate(false)\n                setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n                showSuccess(response.data.message)\n            } else {\n                showError(response.data.message);\n            }\n        }).catch(err => {\n            showError(err);\n        });\n        props.history.push(\"/inventory/configure/product-configure/list\");\n    } */\n\n    const handleCategorySubmit = () => {\n        if (isUpdate) {\n            updateProductCategory();\n        } else {\n            saveProductCategory();\n        }\n    }\n\n    const exportData = (e) => {\n        if (e.target.value === 'excel') {\n            handleExport();\n        }\n    }\n\n    const handleExport = () => {\n        const data = [...singleAll];\n        if (data.length === 0) {\n            showError(\"No row is selected for export data\");\n            return;\n        }\n        let exportData = [];\n        data.map(row => {\n            let obj = {};\n            obj.productSku = row.product_sku;\n            obj.productName = row.name + ' ' + row.item_size + ' ' + row.uom_name + ' * ' + row.pack_size;\n            obj.expiryDays = row.expiry_days;\n            obj.minimumStock = row.minimum_stock;\n            exportData.push(obj);\n            setSingleAll([]);\n        })\n        const workbook = XLSX.utils.book_new();\n        const Heading = [\n            [\"Product SKU\", \"Product Name\", \"Expiry Days\", \"Minimum Stock\"]\n        ];\n        const worksheet = XLSX.utils.json_to_sheet(exportData, { origin: 'A2', skipHeader: true });\n\n        // creating sheet and adding data from 2nd row of column A.\n        // Leaving first row to add Heading\n        XLSX.utils.sheet_add_aoa(worksheet, Heading, { origin: 'A1' });\n\n        /* const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        for (let i = 0; i < Heading.length; i++) {\n            worksheet[letters.charAt(i).concat('1')].s = {\n                font: {\n                    name: 'arial',\n                    sz: 10,\n                    bold: true,\n                    color: \"#F2F2F2\"\n                },\n            }\n        } */\n\n        XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n        XLSX.writeFile(workbook, \"ProductProfileList.xlsx\");\n    }\n    const handleSearchChange = (event) => {\n        let value = event.target.value;\n        getSearchList(value);\n    }\n    console.log(productProfileSearchList)\n    const getSearchList = (searchText) => {\n        let searchTextValue = searchText.toLowerCase();\n        let tp = [];\n        for (let i = 0; i < productProfileSearchList.length; i++) {\n            let productSku = productProfileSearchList[i].product_sku.toLowerCase();\n            let productName = productProfileSearchList[i].name\n            .toLowerCase();\n            if (productSku.includes(searchTextValue)\n                ||productName.includes(searchTextValue)\n                ) {\n                tp.push(productProfileSearchList[i]);\n            }\n        }\n        setProductProfileList(tp);\n    }\n    return (\n        <>\n            <Route path=\"/inventory/configure/product-configure/list/add-category\">\n                {({ history, match }) => (\n\n                    <LevelTreeModal\n                        node={routeProductCategory.state}\n                        show={match != null}\n                        onHide={() => {\n                            history.push(\"/inventory/configure/product-configure/list\");\n                        }}\n                        handleSubmit={(productCategoryParams) => {\n                            let productCategoryTree = categoryTypeTree;\n                            if (typeof routeProductCategory.state !== 'undefined' && routeProductCategory.state.action === 'update') {  // for update existing\n                                updateNode(productCategoryTree, routeProductCategory.state.treeLevel, productCategoryParams);\n                            } else { // for add new// for add new\n                                let treeLevel = ''\n                                let categorTypeNode = {\n                                    id: null,\n                                    name: productCategoryParams.categoryTypeName,\n                                    treeLevel: treeLevel,\n                                    typeName: routeProductCategory.state.nextCategoryType,\n                                    children: []\n                                };\n\n                                if (routeProductCategory.state.treeLevel === '') {  //  top layer node add\n                                    treeLevel = '' + (categoryTypeTree.length + 1);\n                                    categorTypeNode.treeLevel = treeLevel;\n                                    productCategoryTree.push(categorTypeNode);\n                                } else {  // any child node add\n                                    treeLevel = routeProductCategory.state.treeLevel + '-' + (routeProductCategory.state.children.length + 1);\n                                    categorTypeNode.treeLevel = treeLevel;\n                                    addNode(productCategoryTree, routeProductCategory.state.treeLevel, categorTypeNode);\n                                }\n                            }\n\n                            history.push(\"/inventory/configure/product-configure/list\");\n                        }}\n                    />\n                )}\n            </Route>\n            <div style={{ marginTop: \"-30px\", marginLeft: \"-18px\" }}>\n                <nav aria-label=\"breadcrumb\">\n                    <ol class=\"breadCrum-bg-color\">\n                        <li aria-current=\"page\" className='breadCrum-main-title'>{selectedCompany?.name}</li>\n                        <li aria-current=\"page\" className='mt-1 breadCrum-sub-title'>&nbsp;Inventory&nbsp;&nbsp;&nbsp;&nbsp;</li>\n                        <li aria-current=\"page\" className='mt-1 breadCrum-sub-title text-primary'><span className='font-weight-bolder'>.</span>&nbsp; Configure &nbsp;&nbsp;</li>\n                        <li aria-current=\"page\" className='mt-1 breadCrum-sub-title text-primary'><span className='font-weight-bolder'>.</span>&nbsp; Product Configure</li>\n                    </ol>\n                </nav>\n            </div>\n\n            {hasAcess(permissions, 'PRODUCT_CONFIGURE') ?\n                <Card>\n                    <CardBody>\n                        <div className=\"row\">\n                            <div className=\"col-lg-4 border border-left-0 border border-light border-primary border-bottom-0 border-top-0\">\n                                <Tabs\n                                    defaultActiveKey=\"levelTree\" id=\"tab\" className=\"mr-5 pr-5 mb-5 tabs-class\"\n                                    centered\n                                    onClick={handleChange}\n                                >\n                                    <Tab eventKey=\"levelTree\" title=\"Level Tree\">\n                                        <div className='mt-5'>\n                                            <img src={toAbsoluteUrl(\"/images/loc1.png\")}\n                                                style={{ width: \"20px\", height: \"20px\", textAlign: \"center\" }} alt='Company Picture' />\n\n                                            <button\n                                                type=\"button\"\n                                                className=\"btn ml-0 btn-sm\"\n                                                onClick={(event) => {\n                                                    event.preventDefault();\n                                                    addTreeNode({ nextCategoryType: productCategoryTypes.length > 0 ? productCategoryTypes[0].name : '', treeLevel: '', children: [] }); //most top level\n                                                }}\n                                            >\n                                                <i className=\"bi bi-plus-circle-fill text-primary\" style={{ fontSize: \"20px\", marginLeft: \"-4px\" }}></i>\n                                            </button>\n                                        </div>\n                                        <nav className=\"tree-nav\">\n                                            <CategoryTypeTree\n                                                tree={categoryTypeTree}\n                                                addTreeNode={addTreeNode}\n                                                updateTreeNode={updateTreeNode}\n                                                maxDepth={productCategoryTypes.length}\n                                                deleteTreeNode={deleteTreeNode}\n                                                selectProductCategoryName={selectProductCategoryName}\n                                                getBreadCrum={getBreadCrum}\n                                            />\n                                        </nav>\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-primary  btn-sm float-right ml-3 mt-5 \"\n                                            onClick={handleCategorySubmit}\n\n                                        >\n                                            {(categoryTypeTree.length > 0) ? 'Update' : 'Save'}\n                                        </button>\n                                    </Tab>\n                                    <Tab\n                                        eventKey=\"levelSetup\"\n                                        title=\"Level Setup\"\n                                    >\n                                        <LevelSetup\n                                            setProductCategoryTypes={setProductCategoryTypes}\n                                            maxDepth={productCategoryTreeDepth}\n                                            productCategoryTypeDtoList={initialLocationTypes.current}\n                                        />\n                                    </Tab>\n                                </Tabs>\n                            </div>\n                            <div className=\"col-lg-8\">\n                                <Card className=\"cardBackground\">\n                                    <div className=\"product-profile-breadcrum \">\n                                        <nav aria-label=\"breadcrumb\">\n                                            <ol class=\"breadCrum-bg-color\">\n                                                {breadCrum.length > 0 && breadCrum.map((row, index) => {\n                                                    return (\n                                                        <>\n                                                            <li key={index} aria-current=\"page\" className='mt-1 breadCrum-sub-title' style={{ fontSize: \"13px\" }}>\n                                                                <span><i class=\"bi bi-chevron-right\"></i></span>&nbsp;\n                                                                <span>{row.typeName} &nbsp;</span>\n                                                                <span className=\"text-primary\">{row.name}</span>\n                                                            </li>\n                                                        </>\n                                                    )\n                                                })}\n                                            </ol>\n                                        </nav>\n                                    </div>\n                                    <CardBody>\n                                        <div className=\"row\">\n                                            <div className=\"col-xl-5\">\n                                                <span className=\"create-field-title\">Product Profile List</span>\n                                                <p style={{ color: \"#B6B6B6\" }}>Total {productProfileList.length} products </p>\n                                                <div>\n                                                    <form className=\"form form-label-right\">\n                                                        <input type=\"text\" className=\"form-control\" name=\"searchText\"\n                                                        placeholder=\"Search Here\" style={{ paddingLeft: \"28px\" }}\n                                                        onChange={handleSearchChange}\n                                                        />\n                                                    </form>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-xl-7 d-flex justify-content-end\">\n                                                <div className=\"mr-5\">\n                                                    <CardHeaderToolbar\n                                                        title=\"Add Profile\"\n                                                    >\n                                                        {showProductCreateBtn ?\n                                                            <button\n                                                                tree={categoryTypeTree}\n                                                                type=\"button\"\n                                                                className=\"btn btn-primary\"\n                                                                onClick={productProfileUIEvents.newProductProfileButtonClick}\n                                                            >\n                                                                + New Product Profile\n                                                            </button> : ''}\n                                                    </CardHeaderToolbar>\n                                                </div>\n                                                <div style={{ marginRight: \"20px\" }}>\n                                                    <select className=\"form-control\" aria-label=\"Default select example\" onChange={exportData}>\n                                                        <option selected>Export</option>\n                                                        <option value=\"excel\">Excel</option>\n                                                        {/* <option value=\"2\">Two</option> */}\n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <ProductConfigureTable setSingleAll={setSingleAll} singleAll={singleAll}\n                                            productProfileList={productProfileList} setProductProfileList={setProductProfileList}\n                                            getBreadCrum={getBreadCrumByCategoryId} reloadProductList={selectProductCategoryName} />\n                                    </CardBody>\n                                </Card>\n                            </div>\n                        </div>\n                    </CardBody>\n                </Card>\n                : <UnauthorizedPage />}\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}