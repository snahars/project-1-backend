{"ast":null,"code":"import _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport carTableMock from \"./carTableMock\";\nimport MockUtils from \"./mock.utils\";\nexport default function mockProducts(mock) {\n  mock.onPost(\"api/products\").reply(function (_ref) {\n    var data = _ref.data;\n\n    var _JSON$parse = JSON.parse(data),\n        product = _JSON$parse.product;\n\n    var _product$model = product.model,\n        model = _product$model === void 0 ? \"\" : _product$model,\n        _product$manufacture = product.manufacture,\n        manufacture = _product$manufacture === void 0 ? \"\" : _product$manufacture,\n        _product$modelYear = product.modelYear,\n        modelYear = _product$modelYear === void 0 ? 2000 : _product$modelYear,\n        _product$mileage = product.mileage,\n        mileage = _product$mileage === void 0 ? 0 : _product$mileage,\n        _product$description = product.description,\n        description = _product$description === void 0 ? \"\" : _product$description,\n        _product$color = product.color,\n        color = _product$color === void 0 ? \"Black\" : _product$color,\n        _product$price = product.price,\n        price = _product$price === void 0 ? 1000 : _product$price,\n        _product$condition = product.condition,\n        condition = _product$condition === void 0 ? 0 : _product$condition,\n        _product$status = product.status,\n        status = _product$status === void 0 ? 0 : _product$status,\n        _product$VINCode = product.VINCode,\n        VINCode = _product$VINCode === void 0 ? \"\" : _product$VINCode;\n    var id = generateProductId();\n    var newProduct = {\n      id: id,\n      model: model,\n      manufacture: manufacture,\n      modelYear: modelYear,\n      mileage: mileage,\n      description: description,\n      color: color,\n      price: price,\n      condition: condition,\n      status: status,\n      VINCode: VINCode\n    };\n    carTableMock.push(newProduct);\n    return [200, {\n      product: newProduct\n    }];\n  });\n  mock.onPost(\"api/products/find\").reply(function (config) {\n    var mockUtils = new MockUtils();\n\n    var _JSON$parse2 = JSON.parse(config.data),\n        queryParams = _JSON$parse2.queryParams;\n\n    var filteredProducts = mockUtils.baseFilter(carTableMock, queryParams);\n    return [200, filteredProducts];\n  });\n  mock.onPost(\"api/products/deleteProducts\").reply(function (config) {\n    var _JSON$parse3 = JSON.parse(config.data),\n        ids = _JSON$parse3.ids;\n\n    ids.forEach(function (id) {\n      var index = carTableMock.findIndex(function (el) {\n        return el.id === id;\n      });\n\n      if (index > -1) {\n        carTableMock.splice(index, 1);\n      }\n    });\n    return [200];\n  });\n  mock.onPost(\"api/products/updateStatusForProducts\").reply(function (config) {\n    var _JSON$parse4 = JSON.parse(config.data),\n        ids = _JSON$parse4.ids,\n        status = _JSON$parse4.status;\n\n    carTableMock.forEach(function (el) {\n      if (ids.findIndex(function (id) {\n        return id === el.id;\n      }) > -1) {\n        el.status = status;\n      }\n    });\n    return [200];\n  });\n  mock.onGet(/api\\/products\\/\\d+/).reply(function (config) {\n    var id = config.url.match(/api\\/products\\/(\\d+)/)[1];\n    var product = carTableMock.find(function (el) {\n      return el.id === +id;\n    });\n\n    if (!product) {\n      return [400];\n    }\n\n    return [200, product];\n  });\n  mock.onPut(/api\\/products\\/\\d+/).reply(function (config) {\n    var id = config.url.match(/api\\/products\\/(\\d+)/)[1];\n\n    var _JSON$parse5 = JSON.parse(config.data),\n        product = _JSON$parse5.product;\n\n    var index = carTableMock.findIndex(function (el) {\n      return el.id === +id;\n    });\n\n    if (!index) {\n      return [400];\n    }\n\n    carTableMock[index] = _objectSpread({}, product);\n    return [200];\n  });\n  mock.onDelete(/api\\/products\\/\\d+/).reply(function (config) {\n    var id = config.url.match(/api\\/products\\/(\\d+)/)[1];\n    var index = carTableMock.findIndex(function (el) {\n      return el.id === +id;\n    });\n    carTableMock.splice(index, 1);\n\n    if (!index === -1) {\n      return [400];\n    }\n\n    return [200];\n  });\n}\n\nfunction generateProductId() {\n  var ids = carTableMock.map(function (el) {\n    return el.id;\n  });\n  var maxId = Math.max.apply(Math, _toConsumableArray(ids));\n  return maxId + 1;\n}","map":{"version":3,"names":["carTableMock","MockUtils","mockProducts","mock","onPost","reply","data","JSON","parse","product","model","manufacture","modelYear","mileage","description","color","price","condition","status","VINCode","id","generateProductId","newProduct","push","config","mockUtils","queryParams","filteredProducts","baseFilter","ids","forEach","index","findIndex","el","splice","onGet","url","match","find","onPut","onDelete","map","maxId","Math","max"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/ECommerce/__mocks__/mockProduct.js"],"sourcesContent":["import carTableMock from \"./carTableMock\";\r\nimport MockUtils from \"./mock.utils\";\r\n\r\nexport default function mockProducts(mock) {\r\n  mock.onPost(\"api/products\").reply(({ data }) => {\r\n    const { product } = JSON.parse(data);\r\n    const {\r\n      model = \"\",\r\n      manufacture = \"\",\r\n      modelYear = 2000,\r\n      mileage = 0,\r\n      description = \"\",\r\n      color = \"Black\",\r\n      price = 1000,\r\n      condition = 0,\r\n      status = 0,\r\n      VINCode = \"\"\r\n    } = product;\r\n\r\n    const id = generateProductId();\r\n    const newProduct = {\r\n      id,\r\n      model,\r\n      manufacture,\r\n      modelYear,\r\n      mileage,\r\n      description,\r\n      color,\r\n      price,\r\n      condition,\r\n      status,\r\n      VINCode\r\n    };\r\n    carTableMock.push(newProduct);\r\n    return [200, { product: newProduct }];\r\n  });\r\n\r\n  mock.onPost(\"api/products/find\").reply(config => {\r\n    const mockUtils = new MockUtils();\r\n    const { queryParams } = JSON.parse(config.data);\r\n    const filteredProducts = mockUtils.baseFilter(carTableMock, queryParams);\r\n    return [200, filteredProducts];\r\n  });\r\n\r\n  mock.onPost(\"api/products/deleteProducts\").reply(config => {\r\n    const { ids } = JSON.parse(config.data);\r\n    ids.forEach(id => {\r\n      const index = carTableMock.findIndex(el => el.id === id);\r\n      if (index > -1) {\r\n        carTableMock.splice(index, 1);\r\n      }\r\n    });\r\n    return [200];\r\n  });\r\n\r\n  mock.onPost(\"api/products/updateStatusForProducts\").reply(config => {\r\n    const { ids, status } = JSON.parse(config.data);\r\n    carTableMock.forEach(el => {\r\n      if (ids.findIndex(id => id === el.id) > -1) {\r\n        el.status = status;\r\n      }\r\n    });\r\n    return [200];\r\n  });\r\n\r\n  mock.onGet(/api\\/products\\/\\d+/).reply(config => {\r\n    const id = config.url.match(/api\\/products\\/(\\d+)/)[1];\r\n    const product = carTableMock.find(el => el.id === +id);\r\n    if (!product) {\r\n      return [400];\r\n    }\r\n\r\n    return [200, product];\r\n  });\r\n\r\n  mock.onPut(/api\\/products\\/\\d+/).reply(config => {\r\n    const id = config.url.match(/api\\/products\\/(\\d+)/)[1];\r\n    const { product } = JSON.parse(config.data);\r\n    const index = carTableMock.findIndex(el => el.id === +id);\r\n    if (!index) {\r\n      return [400];\r\n    }\r\n\r\n    carTableMock[index] = { ...product };\r\n    return [200];\r\n  });\r\n\r\n  mock.onDelete(/api\\/products\\/\\d+/).reply(config => {\r\n    const id = config.url.match(/api\\/products\\/(\\d+)/)[1];\r\n    const index = carTableMock.findIndex(el => el.id === +id);\r\n    carTableMock.splice(index, 1);\r\n    if (!index === -1) {\r\n      return [400];\r\n    }\r\n\r\n    return [200];\r\n  });\r\n}\r\n\r\nfunction generateProductId() {\r\n  const ids = carTableMock.map(el => el.id);\r\n  const maxId = Math.max(...ids);\r\n  return maxId + 1;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}