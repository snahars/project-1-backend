{"ast":null,"code":"import _defineProperty from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/SalesBudgetReport.js\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\"; // import ReportsSubTabsHeader from \"../../../../../../sub-tabs-header/ReportsSubTabsHeader\";\n// import InventoryStockHeader from \"../../../../../../header/InventoryStockHeader\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport { getDayDiff, getDaysCount } from \"../../../Util\";\nexport default function SalesBudgetReport() {\n  var _this = this;\n\n  var fields = {\n    locationId: \"\",\n    fiscalYearId: \"\",\n    reportFormate: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    salesOfficerId: \"\",\n    distributorId: \"\"\n  };\n\n  var _useState = useState(fields),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var userId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n  var companyId = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var selectedCompany = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var userLoginId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n  var intl = useIntl();\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      locationTree = _useState4[0],\n      setLocationTree = _useState4[1];\n\n  var _useState5 = useState({\n    userLoginId: userId,\n    companyId: companyId\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sessionData = _useState6[0],\n      setSessionData = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      accountingYearId = _useState8[0],\n      setAccountingYearId = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      locationId = _useState10[0],\n      setLocationId = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      locationIds = _useState12[0],\n      setLocationIds = _useState12[1]; //const [childCategoryList, setChildCategoryList] = useState([]);\n\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      productCategoryId = _useState14[0],\n      setProductCategoryId = _useState14[1]; // const [categoryName, setCategoryName] = useState('All');\n\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      salesOfficer = _useState16[0],\n      setSalesOfficer = _useState16[1]; // const [inputs, setInputs] = useState({});\n\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      salesOfficerValue = _useState18[0],\n      setSalesOfficerValue = _useState18[1];\n\n  var _useState19 = useState(null),\n      _useState20 = _slicedToArray(_useState19, 2),\n      distributorValue = _useState20[0],\n      setDistributorValue = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      distributors = _useState22[0],\n      setDistributors = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      showReport = _useState24[0],\n      setShowReport = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      reportData = _useState26[0],\n      setReportData = _useState26[1];\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      allAccountingYear = _useState28[0],\n      setAllAccountingYear = _useState28[1];\n\n  var ddd = null;\n  var searchParams = useMemo(function () {\n    return {\n      userLoginId: userLoginId,\n      companyId: selectedCompany,\n      accountingYearId: accountingYearId,\n      locationId: locationId,\n      productCategoryId: productCategoryId\n    };\n  }, [userLoginId, selectedCompany, accountingYearId, locationId, productCategoryId]);\n\n  var _useState29 = useState({}),\n      _useState30 = _slicedToArray(_useState29, 2),\n      selectedLocation = _useState30[0],\n      setSelectedLocation = _useState30[1];\n\n  var _useState31 = useState({\n    totalQuantity: 0,\n    totlaSalesAmount: 0\n  }),\n      _useState32 = _slicedToArray(_useState31, 2),\n      total = _useState32[0],\n      setTotal = _useState32[1];\n\n  var _useState33 = useState([]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      salesDataList = _useState34[0],\n      setSalesBudgetReportList = _useState34[1];\n\n  var history = useHistory();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      singleAll = _React$useState2[0],\n      setSingleAll = _React$useState2[1];\n\n  useEffect(function () {\n    document.getElementById('reportShowIframe').style.display = \"none\";\n    getLocationTreeList(searchParams);\n    getAccountingYear(selectedCompany);\n  }, [userLoginId, selectedCompany]);\n  useEffect(function () {//console.log(locationIds)\n  }, [locationIds]);\n  useEffect(function () {//datatat()\n  }, []);\n\n  var getLocationTreeList = function getLocationTreeList(params) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/location-tree/locationTree/\").concat(params.userLoginId, \"/\").concat(params.companyId);\n    axios.get(URL).then(function (response) {\n      var locationTree = response.data.data;\n      setLocationTree(locationTree);\n    }).catch(function (err) {\n      showError(\"Cannot get Location Tree data.\");\n    });\n  }; // const selectLocationTreeNode = (node) => {\n  //     setSelectedLocation(node);\n  //     setLocationId(node.id);\n  //     if (node.id)\n  //         getSalesOfficerListByLocation(node.id, selectedCompany)\n  //     getAllDistributorList(userLoginId, node.id, selectedCompany)\n  // }\n\n\n  var selectLocationTreeNode = function selectLocationTreeNode(node) {\n    var id = \"summary-id-\" + node.id;\n    var getId = document.getElementById(id);\n    var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n    for (var i = 0; i < getElements.length; i++) {\n      getElements[i].classList.remove('tree-nav-item');\n    }\n\n    if (getId) {\n      getId.classList.add('tree-nav-item');\n      setSelectedLocation(node);\n      setLocationId(node.id);\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"locationId\": node.id\n      })); //if (node.id)\n      //getSalesOfficerListByLocation(node.id, selectedCompany)\n      //getAllDistributorList(userLoginId, node.id, selectedCompany)\n    }\n  };\n\n  var getSalesOfficerListByLocation = function getSalesOfficerListByLocation(locationId, companyId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/auth/get-sales-officer-location/\").concat(inputs.locationId, \"/\").concat(selectedCompany);\n    axios.get(URL).then(function (response) {\n      if (response.data.data != undefined) {\n        setSalesOfficer(response.data.data);\n      } else {\n        setSalesOfficer([]);\n        setSalesOfficerValue('');\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Company data.\");\n    });\n  };\n\n  var getAllDistributorList = function getAllDistributorList() {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/distributor/distributorList/\").concat(userLoginId, \"/\").concat(inputs.locationId, \"/\").concat(selectedCompany);\n    axios.get(URL).then(function (response) {\n      //get data in response\n      if (response.data.data != undefined && response.data.data.length != 0) {\n        setDistributors(response.data.data);\n      } else {\n        setDistributors([]);\n        setDistributorValue(null);\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Distributor data.\");\n    });\n  };\n\n  var handleChangeDistributor = function handleChangeDistributor(e, dis) {\n    if (dis.distributorId !== null || dis.distributorId !== \"\") {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        distributorId: parseInt(dis.distributorId)\n      }));\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n\n    if (name === \"fiscalYearId\") {\n      setInputs(function (values) {\n        return _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, parseInt(value)));\n      });\n    } else {\n      setInputs(function (values) {\n        return _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, value));\n      });\n    }\n  };\n\n  var validate = function validate() {\n    if (!inputs.fiscalYearId) {\n      showError('Timeline is required.');\n      return false;\n    } else if (!inputs.reportFormate) {\n      showError('Report Formate is required.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var previewValidate = function previewValidate() {\n    if (!inputs.fiscalYearId) {\n      showError('Timeline is required.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var download = function download() {\n    if (!validate()) {\n      return false;\n    }\n\n    var queryParams = '?locationId=' + inputs.locationId;\n    queryParams += '&fiscalYearId=' + inputs.fiscalYearId;\n    queryParams += '&reportFormate=' + inputs.reportFormate;\n    queryParams += '&companyId=' + selectedCompany;\n    queryParams += '&startDate=' + inputs.startDate;\n    queryParams += '&endDate=' + inputs.endDate;\n    queryParams += '&userLoginId=' + userLoginId;\n    queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n    queryParams += '&distributorId=' + inputs.distributorId;\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/report/sales-budget-report\") + queryParams;\n    axios.get(URL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      if (inputs.reportFormate === \"PDF\") {\n        var url = window.URL.createObjectURL(new Blob([response.data]));\n        var link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', \"SalesBudget.pdf\");\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        var _url = window.URL.createObjectURL(new Blob([response.data]));\n\n        var _link = document.createElement('a');\n\n        _link.href = _url;\n\n        _link.setAttribute('download', \"SalesBudget.xlsx\");\n\n        document.body.appendChild(_link);\n\n        _link.click();\n\n        document.body.removeChild(_link);\n      }\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var preview = function preview() {\n    if (!previewValidate()) {\n      return false;\n    }\n\n    var queryParams = '?locationId=' + inputs.locationId;\n    queryParams += '&fiscalYearId=' + inputs.fiscalYearId;\n    queryParams += '&reportFormate=' + \"PDF\";\n    queryParams += '&companyId=' + selectedCompany;\n    queryParams += '&startDate=' + inputs.startDate;\n    queryParams += '&endDate=' + inputs.endDate;\n    queryParams += '&userLoginId=' + userLoginId;\n    queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n    queryParams += '&distributorId=' + inputs.distributorId;\n    var dataURL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/report/sales-budget-report\") + queryParams;\n    axios.get(dataURL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var file = new Blob([response.data], {\n        type: \"application/pdf\"\n      });\n      var fileURL = URL.createObjectURL(file);\n      var iframe = document.querySelector(\"iframe\");\n      if (iframe === null || iframe === void 0 ? void 0 : iframe.src) iframe.src = fileURL;\n      document.getElementById('reportShowIframe').style.display = \"inline-block\";\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var getReportData = function getReportData() {\n    // if (!validate()) {\n    //     return false;\n    // }\n    setShowReport(inputs.reportType); // if(!validate()){\n    //     return false;\n    // }\n    // let queryString = \"?\";\n    // queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n    // queryString += '&startDate=' + inputs.startDate;\n    // queryString += '&endDate=' + inputs.endDate;\n    // const URL = `${process.env.REACT_APP_API_URL}/api/reports/distributor-ledger-view`+queryString;\n    // // axios.get(URL).then((response) => {\n    // //     setReportData(response.data.data);\n    // //     setShowReport(true);\n    // // }).catch();\n    // axios.get(URL, {responseType: 'blob'}).then(response => {\n    //     const file = window.URL.createObjectURL(new Blob([response.data]));\n    //         const iframe = document.querySelector(\"iframe\");\n    //         console.log(iframe)\n    //         //if (iframe?.src) iframe.src = file;\n    // }).catch(err => {\n    //     showError();\n    // });\n  };\n\n  var getAccountingYear = function getAccountingYear(companyId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/accounting-year/companyWise/\").concat(companyId);\n    axios.get(URL).then(function (response) {\n      setAllAccountingYear(response.data.data);\n    }).catch(function (err) {//showError(intl.formatMessage({ id: \"COMMON.ERROR_STATUS\" }));\n    });\n  };\n\n  var setAccountingYearData = function setAccountingYearData(event) {\n    setAccountingYearId(event.target.value);\n  }; // const lists = [\n  //     { zone: 'Dhaka', area: 'Area1', territory: 'Territory1', distributor: 'Dis1', salesOfficer: 'So1'},\n  //     { zone: 'Dhaka', area: 'Area1', territory: 'Territory1', distributor: 'Dis1', salesOfficer: 'So2' },\n  //     { zone: 'Dhaka', area: 'Area2', territory: 'Territory3', distributor: 'Dis2', salesOfficer: 'So3' },\n  //     { zone: 'Barishal', area: 'Area3', territory: 'Territory4', distributor: 'Dis3', salesOfficer: 'So4' },\n  //     { zone: 'Barishal', area: 'Area3', territory: 'Territory4', distributor: 'Dis3', salesOfficer: 'So5' },\n  //     { zone: 'Barishal', area: 'Area4', territory: 'Territory5', distributor: 'Dis4', salesOfficer: 'So6' },\n  //     { zone: 'Rajshahi', area: 'Area5', territory: 'Territory6', distributor: 'Dis5', salesOfficer: 'So7' }\n  // ];\n  // const zoneList = lists.reduce((group, list) => {\n  //     const { zone } = list;\n  //     group[zone] = group[zone] ?? [];\n  //     group[zone].push(list);\n  //     return group;\n  //   }, {});\n  //   console.log(zoneList);\n  //   const areaList = lists.reduce((group, zoneList) => {\n  //     const { area } = zoneList;\n  //     group[area] = group[area] ?? [];\n  //     group[area].push(zoneList);\n  //     return group;\n  //   }, {});\n  //   console.log(areaList);\n  // const [zoneList, setZoneList] = useState([])\n  // const datatat = () => {\n  //     let tempZone = [...zoneList]\n  //     lists.map((objZ) => {\n  //         if (tempZone.length > 0) {\n  //             let indexZone = tempZone.findIndex(objZone => objZone.zone === objZ.zone)\n  //             if (indexZone > -1) {\n  //                 let indexArea = tempZone[indexZone].area.findIndex(objArea => objArea.area === objZ.area)\n  //                 if (indexArea > -1) {\n  //                     let indexTrritory = tempZone[indexZone].area[indexArea].territory.findIndex(objTerritory => objTerritory.territory === objZ.territory)\n  //                         if(indexTrritory > -1){\n  //                              tempZone[indexZone].area[indexArea].territory[indexTrritory].distributor.push({\n  //                                 \"distributor\":objZ.distributor,\n  //                                 \"salesOfficer\":[\n  //                                     {\n  //                                         \"salesOfficer\":objZ.salesOfficer\n  //                                     }\n  //                                 ]\n  //                             })\n  //                         }else{\n  //                             tempZone[indexZone].area[indexArea].territory.push(\n  //                                 {\n  //                                     \"territory\": objZ.territory,\n  //                                     \"distributor\":[\n  //                                         {\n  //                                             \"distributor\":objZ.distributor,\n  //                                             \"salesOfficer\":[\n  //                                                 {\n  //                                                     \"salesOfficer\":objZ.salesOfficer\n  //                                                 }\n  //                                             ]\n  //                                         }\n  //                                     ]\n  //                                 }\n  //                             )\n  //                         }\n  //                 } else {\n  //                     tempZone[indexZone].area.push(\n  //                         {\n  //                             \"area\": objZ.area,\n  //                             \"territory\": [\n  //                                 {\n  //                                     \"territory\": objZ.territory,\n  //                                     \"distributor\":[\n  //                                         {\n  //                                             \"distributor\":objZ.distributor,\n  //                                             \"salesOfficer\":[\n  //                                                 {\n  //                                                     \"salesOfficer\":objZ.salesOfficer\n  //                                                 }\n  //                                             ]\n  //                                         }\n  //                                     ]\n  //                                 }\n  //                             ]\n  //                         }\n  //                     )\n  //                 }\n  //             } else {\n  //                 tempZone.push({\n  //                 \"zone\": objZ.zone,\n  //                 \"area\": [\n  //                     {\n  //                         \"area\": objZ.area,\n  //                         \"territory\": [\n  //                             {\n  //                                 \"territory\": objZ.territory,\n  //                                 \"distributor\":[\n  //                                     {\n  //                                         \"distributor\":objZ.distributor,\n  //                                         \"salesOfficer\":[\n  //                                             {\n  //                                                 \"salesOfficer\":objZ.salesOfficer\n  //                                             }\n  //                                         ]\n  //                                     }\n  //                                 ]\n  //                             }\n  //                         ]\n  //                     }\n  //                 ]\n  //             })\n  //             }\n  //         } else {\n  //             tempZone.push({\n  //                 \"zone\": objZ.zone,\n  //                 \"area\": [\n  //                     {\n  //                         \"area\": objZ.area,\n  //                         \"territory\": [\n  //                             {\n  //                                 \"territory\": objZ.territory,\n  //                                 \"distributor\":[\n  //                                     {\n  //                                         \"distributor\":objZ.distributor,\n  //                                         \"salesOfficer\":[\n  //                                             {\n  //                                                 \"salesOfficer\":objZ.salesOfficer\n  //                                             }\n  //                                         ]\n  //                                     }\n  //                                 ]\n  //                             }\n  //                         ]\n  //                     }\n  //                 ]\n  //             })\n  //         }\n  //     })\n  //     setZoneList(tempZone)\n  // }\n  // console.log(\"final\", zoneList)\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MisReportBreadCrum, {\n    menuTitle: \"Sales Budget Report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-3\",\n    style: {\n      borderRight: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottom: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc3.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginLeft: \"10px\",\n      color: \"#828282\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 41\n    }\n  }, intl.formatMessage({\n    id: \"COMMON.LOCATION_ALL\"\n  })))), /*#__PURE__*/React.createElement(LocationTreeView, {\n    tree: locationTree,\n    selectLocationTreeNode: selectLocationTreeNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 45\n    }\n  }, \"Sales Officer\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 97\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    name: \"salesOfficerId\",\n    options: salesOfficer,\n    onKeyDown: getSalesOfficerListByLocation,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.salesOfficerName;\n    },\n    value: salesOfficerValue,\n    onChange: function onChange(event, newValue) {\n      setSalesOfficerValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          salesOfficerId: newValue.id\n        }));\n      } else {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          salesOfficerId: ''\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Sales Officer*\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 53\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 72\n    }\n  }, \"Distributor\")), /*#__PURE__*/React.createElement(Autocomplete //id=\"distributorId\"\n  , {\n    name: \"distributorId\",\n    options: distributors,\n    onKeyDown: getAllDistributorList,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.distributorName;\n    },\n    value: distributorValue,\n    onChange: function onChange(event, newValue) {\n      setDistributorValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          distributorId: newValue.distributorId\n        }));\n      } else {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          distributorId: ''\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Distributor*\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 49\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 72\n    }\n  }, \"Timeline\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 110\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    name: \"fiscalYearId\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 45\n    }\n  }, \"Select Fiscal Year\"), allAccountingYear.map(function (accYear) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: accYear.fiscalYearName,\n      value: accYear.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 49\n      }\n    }, accYear.fiscalYearName);\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 41\n    }\n  }, \"Start Date\"), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"startDate\",\n    placeholder: \"Jan-2022\",\n    name: \"startDate\",\n    value: inputs.startDate ? moment(inputs.startDate, \"YYYY-MM\").format(\"MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"M-Y\"\n    },\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"startDate\": moment(new Date(value)).format(\"YYYY-MM\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 41\n    }\n  }, \"End Date\"), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"endDate\",\n    placeholder: \"Jun-2022\",\n    name: \"endDate\",\n    value: inputs.endDate ? moment(inputs.endDate, \"YYYY-MM\").format(\"MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"M-Y\"\n    },\n    required: true,\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"endDate\": moment(new Date(value)).format(\"YYYY-MM\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 72\n    }\n  }, \"Report Format\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 115\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"reportFormate\",\n    name: \"reportFormate\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 45\n    }\n  }, \"Select Report Format\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"PDF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 45\n    }\n  }, \"Pdf\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"EXCEL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 45\n    }\n  }, \"Excel\")))), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: download,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 33\n    }\n  }, \"Download\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-5 mr-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 29\n    }\n  }, \"Preview\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    src: \"\",\n    className: \"w-100\",\n    id: \"reportShowIframe\",\n    height: \"500px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 29\n    }\n  }))))));\n}","map":{"version":3,"names":["React","useEffect","useMemo","useState","toAbsoluteUrl","Card","CardBody","useHistory","LocationTreeView","showError","axios","useIntl","shallowEqual","useSelector","Autocomplete","TextField","Button","typeOf","moment","Flatpickr","MisReportBreadCrum","getDayDiff","getDaysCount","SalesBudgetReport","fields","locationId","fiscalYearId","reportFormate","startDate","endDate","salesOfficerId","distributorId","inputs","setInputs","userId","state","auth","user","companyId","company","selectedCompany","userLoginId","intl","locationTree","setLocationTree","sessionData","setSessionData","accountingYearId","setAccountingYearId","setLocationId","locationIds","setLocationIds","productCategoryId","setProductCategoryId","salesOfficer","setSalesOfficer","salesOfficerValue","setSalesOfficerValue","distributorValue","setDistributorValue","distributors","setDistributors","showReport","setShowReport","reportData","setReportData","allAccountingYear","setAllAccountingYear","ddd","searchParams","selectedLocation","setSelectedLocation","totalQuantity","totlaSalesAmount","total","setTotal","salesDataList","setSalesBudgetReportList","history","singleAll","setSingleAll","document","getElementById","style","display","getLocationTreeList","getAccountingYear","params","URL","process","env","REACT_APP_API_URL","get","then","response","data","catch","err","selectLocationTreeNode","node","id","getId","getElements","getElementsByClassName","i","length","classList","remove","add","getSalesOfficerListByLocation","undefined","getAllDistributorList","handleChangeDistributor","e","dis","parseInt","handleChange","event","name","target","value","values","validate","previewValidate","download","queryParams","responseType","url","window","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","removeChild","preview","dataURL","file","type","fileURL","iframe","querySelector","src","getReportData","reportType","setAccountingYearData","borderRight","borderBottom","width","height","textAlign","marginLeft","color","formatMessage","marginTop","option","salesOfficerName","newValue","distributorName","map","accYear","fiscalYearName","format","dateFormat","Date"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/SalesBudgetReport.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\n// import ReportsSubTabsHeader from \"../../../../../../sub-tabs-header/ReportsSubTabsHeader\";\n\n\n// import InventoryStockHeader from \"../../../../../../header/InventoryStockHeader\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport { getDayDiff, getDaysCount } from \"../../../Util\"\n\n\nexport default function SalesBudgetReport() {\n\n    const fields = {\n        locationId: \"\",\n        fiscalYearId: \"\",\n        reportFormate: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        salesOfficerId: \"\",\n        distributorId: \"\"\n    };\n\n    const [inputs, setInputs] = useState(fields);\n    const userId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const companyId = useSelector((state) => state.auth.company, shallowEqual);\n    const selectedCompany = useSelector((state) => state.auth.company, shallowEqual);\n    const userLoginId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const intl = useIntl();\n    const [locationTree, setLocationTree] = useState([]);\n    const [sessionData, setSessionData] = useState({ userLoginId: userId, companyId: companyId });\n    const [accountingYearId, setAccountingYearId] = useState('');\n    const [locationId, setLocationId] = useState('');\n    const [locationIds, setLocationIds] = useState([]);\n    //const [childCategoryList, setChildCategoryList] = useState([]);\n    const [productCategoryId, setProductCategoryId] = useState('');\n    // const [categoryName, setCategoryName] = useState('All');\n    const [salesOfficer, setSalesOfficer] = useState([]);\n    // const [inputs, setInputs] = useState({});\n    const [salesOfficerValue, setSalesOfficerValue] = useState(null);\n    const [distributorValue, setDistributorValue] = useState(null);\n    const [distributors, setDistributors] = useState([]);\n    const [showReport, setShowReport] = useState('');\n    const [reportData, setReportData] = useState([]);\n    const [allAccountingYear, setAllAccountingYear] = useState([]);\n\n    let ddd = null;\n\n    const searchParams = useMemo(() => {\n        return {\n            userLoginId: userLoginId, companyId: selectedCompany, accountingYearId: accountingYearId\n            , locationId: locationId, productCategoryId: productCategoryId\n        }\n    }, [userLoginId, selectedCompany, accountingYearId, locationId, productCategoryId]);\n\n    const [selectedLocation, setSelectedLocation] = useState({});\n    const [total, setTotal] = useState({ totalQuantity: 0, totlaSalesAmount: 0 });\n    const [salesDataList, setSalesBudgetReportList] = useState([]);\n\n    let history = useHistory();\n    let [singleAll, setSingleAll] = React.useState([]);\n\n    useEffect(() => {\n        document.getElementById('reportShowIframe').style.display = \"none\";\n        getLocationTreeList(searchParams);\n        getAccountingYear(selectedCompany)\n    }, [userLoginId, selectedCompany]);\n\n    useEffect(() => {\n        //console.log(locationIds)\n    }, [locationIds]);\n    useEffect(() => {\n        //datatat()\n    }, []);\n\n    const getLocationTreeList = (params) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/location-tree/locationTree/${params.userLoginId}/${params.companyId}`;\n        axios.get(URL).then(response => {\n            const locationTree = response.data.data;\n            setLocationTree(locationTree);\n        }).catch(err => {\n            showError(\"Cannot get Location Tree data.\");\n        });\n    }\n\n\n    // const selectLocationTreeNode = (node) => {\n    //     setSelectedLocation(node);\n    //     setLocationId(node.id);\n    //     if (node.id)\n    //         getSalesOfficerListByLocation(node.id, selectedCompany)\n    //     getAllDistributorList(userLoginId, node.id, selectedCompany)\n    // }\n    const selectLocationTreeNode = (node) => {\n        let id = \"summary-id-\" + node.id;\n        const getId = document.getElementById(id);\n        const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n        for (var i = 0; i < getElements.length; i++) {\n            getElements[i].classList.remove('tree-nav-item');\n        }\n        if (getId) {\n            getId.classList.add('tree-nav-item');\n            setSelectedLocation(node);\n            setLocationId(node.id);\n            setInputs({ ...inputs, \"locationId\": node.id })\n            //if (node.id)\n            //getSalesOfficerListByLocation(node.id, selectedCompany)\n            //getAllDistributorList(userLoginId, node.id, selectedCompany)\n\n        }\n    }\n    const getSalesOfficerListByLocation = (locationId, companyId) => {\n        const URL = `${process.env.REACT_APP_API_URL}/auth/get-sales-officer-location/${inputs.locationId}/${selectedCompany}`;\n        axios.get(URL).then(response => {\n            if (response.data.data != undefined) {\n                setSalesOfficer(response.data.data);\n            }\n            else {\n                setSalesOfficer([]);\n                setSalesOfficerValue('');\n            }\n        }).catch(err => {\n            showError(\"Cannot get Company data.\");\n        });\n    }\n\n    const getAllDistributorList = () => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/distributor/distributorList/${userLoginId}/${inputs.locationId}/${selectedCompany}`;\n        axios.get(URL).then(response => {//get data in response\n            if (response.data.data != undefined && response.data.data.length != 0) {\n                setDistributors(response.data.data);\n            }\n            else {\n                setDistributors([]);\n                setDistributorValue(null);\n            }\n        }).catch(err => {\n            showError(\"Cannot get Distributor data.\");\n        });\n    }\n\n    const handleChangeDistributor = (e, dis) => {\n        if (dis.distributorId !== null || dis.distributorId !== \"\") {\n            setInputs({ ...inputs, distributorId: parseInt(dis.distributorId) });\n        }\n    }\n\n    const handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        if (name === \"fiscalYearId\") {\n            setInputs(values => ({ ...values, [name]: parseInt(value) }))\n        } else {\n            setInputs(values => ({ ...values, [name]: value }))\n        }\n    }\n\n    const validate = () => {\n        if (!inputs.fiscalYearId) {\n            showError('Timeline is required.');\n            return false;\n        }\n        else if (!inputs.reportFormate) {\n            showError('Report Formate is required.');\n            return false;\n        }\n        return true;\n    }\n\n    const previewValidate = () => {\n        if (!inputs.fiscalYearId) {\n            showError('Timeline is required.');\n            return false;\n        }\n        return true;\n    }\n\n    const download = () => {\n        if (!validate()) {\n            return false;\n        }\n        let queryParams = '?locationId=' + inputs.locationId;\n        queryParams += '&fiscalYearId=' + inputs.fiscalYearId;\n        queryParams += '&reportFormate=' + inputs.reportFormate;\n        queryParams += '&companyId=' + selectedCompany;\n        queryParams += '&startDate=' + inputs.startDate;\n        queryParams += '&endDate=' + inputs.endDate;\n        queryParams += '&userLoginId=' + userLoginId;\n        queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n        queryParams += '&distributorId=' + inputs.distributorId;\n        \n        const URL = `${process.env.REACT_APP_API_URL}/api/report/sales-budget-report` + queryParams;\n        axios.get(URL, { responseType: 'blob' }).then(response => {\n            if (inputs.reportFormate === \"PDF\") {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', \"SalesBudget.pdf\");\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            } else {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', \"SalesBudget.xlsx\");\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            }\n        }).catch(err => {\n            showError();\n        });\n    }\n\n    const preview = () => {\n        if (!previewValidate()) {\n            return false;\n        }\n        let queryParams = '?locationId=' + inputs.locationId;\n        queryParams += '&fiscalYearId=' + inputs.fiscalYearId;\n        queryParams += '&reportFormate=' + \"PDF\";\n        queryParams += '&companyId=' + selectedCompany;\n        queryParams += '&startDate=' + inputs.startDate;\n        queryParams += '&endDate=' + inputs.endDate;\n        queryParams += '&userLoginId=' + userLoginId;\n        queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n        queryParams += '&distributorId=' + inputs.distributorId;\n        \n        const dataURL = `${process.env.REACT_APP_API_URL}/api/report/sales-budget-report` + queryParams;\n        axios.get(dataURL, { responseType: 'blob' }).then(response => {\n            const file = new Blob([response.data], { type: \"application/pdf\" });\n            const fileURL = URL.createObjectURL(file);\n            const iframe = document.querySelector(\"iframe\");\n            if (iframe?.src) iframe.src = fileURL;\n            document.getElementById('reportShowIframe').style.display = \"inline-block\";\n        }).catch(err => {\n            showError();\n        });\n    }\n\n    const getReportData = () => {\n        // if (!validate()) {\n        //     return false;\n        // }\n        setShowReport(inputs.reportType);\n        // if(!validate()){\n        //     return false;\n        // }\n        // let queryString = \"?\";\n        // queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n        // queryString += '&startDate=' + inputs.startDate;\n        // queryString += '&endDate=' + inputs.endDate;\n\n        // const URL = `${process.env.REACT_APP_API_URL}/api/reports/distributor-ledger-view`+queryString;\n        // // axios.get(URL).then((response) => {\n        // //     setReportData(response.data.data);\n        // //     setShowReport(true);\n        // // }).catch();\n        // axios.get(URL, {responseType: 'blob'}).then(response => {\n        //     const file = window.URL.createObjectURL(new Blob([response.data]));\n            \n        //         const iframe = document.querySelector(\"iframe\");\n        //         console.log(iframe)\n        //         //if (iframe?.src) iframe.src = file;\n\n        // }).catch(err => {\n        //     showError();\n        // });\n    }\n    const getAccountingYear = (companyId) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/accounting-year/companyWise/${companyId}`;\n        axios.get(URL).then(response => {\n            setAllAccountingYear(response.data.data);\n        }).catch(err => {\n            //showError(intl.formatMessage({ id: \"COMMON.ERROR_STATUS\" }));\n        });\n    }\n    const setAccountingYearData = (event) => {\n        setAccountingYearId(event.target.value)\n    }\n    // const lists = [\n    //     { zone: 'Dhaka', area: 'Area1', territory: 'Territory1', distributor: 'Dis1', salesOfficer: 'So1'},\n    //     { zone: 'Dhaka', area: 'Area1', territory: 'Territory1', distributor: 'Dis1', salesOfficer: 'So2' },\n    //     { zone: 'Dhaka', area: 'Area2', territory: 'Territory3', distributor: 'Dis2', salesOfficer: 'So3' },\n    //     { zone: 'Barishal', area: 'Area3', territory: 'Territory4', distributor: 'Dis3', salesOfficer: 'So4' },\n    //     { zone: 'Barishal', area: 'Area3', territory: 'Territory4', distributor: 'Dis3', salesOfficer: 'So5' },\n    //     { zone: 'Barishal', area: 'Area4', territory: 'Territory5', distributor: 'Dis4', salesOfficer: 'So6' },\n    //     { zone: 'Rajshahi', area: 'Area5', territory: 'Territory6', distributor: 'Dis5', salesOfficer: 'So7' }\n    // ];\n    // const zoneList = lists.reduce((group, list) => {\n    //     const { zone } = list;\n    //     group[zone] = group[zone] ?? [];\n    //     group[zone].push(list);\n    //     return group;\n    //   }, {});\n    //   console.log(zoneList);\n    //   const areaList = lists.reduce((group, zoneList) => {\n    //     const { area } = zoneList;\n    //     group[area] = group[area] ?? [];\n    //     group[area].push(zoneList);\n    //     return group;\n    //   }, {});\n    //   console.log(areaList);\n    // const [zoneList, setZoneList] = useState([])\n\n    // const datatat = () => {\n    //     let tempZone = [...zoneList]\n    //     lists.map((objZ) => {\n    //         if (tempZone.length > 0) {\n    //             let indexZone = tempZone.findIndex(objZone => objZone.zone === objZ.zone)\n    //             if (indexZone > -1) {\n    //                 let indexArea = tempZone[indexZone].area.findIndex(objArea => objArea.area === objZ.area)\n    //                 if (indexArea > -1) {\n    //                     let indexTrritory = tempZone[indexZone].area[indexArea].territory.findIndex(objTerritory => objTerritory.territory === objZ.territory)\n    //                         if(indexTrritory > -1){\n    //                              tempZone[indexZone].area[indexArea].territory[indexTrritory].distributor.push({\n    //                                 \"distributor\":objZ.distributor,\n    //                                 \"salesOfficer\":[\n    //                                     {\n    //                                         \"salesOfficer\":objZ.salesOfficer\n    //                                     }\n    //                                 ]\n    //                             })\n    //                         }else{\n    //                             tempZone[indexZone].area[indexArea].territory.push(\n    //                                 {\n    //                                     \"territory\": objZ.territory,\n    //                                     \"distributor\":[\n    //                                         {\n    //                                             \"distributor\":objZ.distributor,\n    //                                             \"salesOfficer\":[\n    //                                                 {\n    //                                                     \"salesOfficer\":objZ.salesOfficer\n    //                                                 }\n    //                                             ]\n    //                                         }\n    //                                     ]\n    //                                 }\n    //                             )\n    //                         }\n\n    //                 } else {\n    //                     tempZone[indexZone].area.push(\n    //                         {\n    //                             \"area\": objZ.area,\n    //                             \"territory\": [\n    //                                 {\n    //                                     \"territory\": objZ.territory,\n    //                                     \"distributor\":[\n    //                                         {\n    //                                             \"distributor\":objZ.distributor,\n    //                                             \"salesOfficer\":[\n    //                                                 {\n    //                                                     \"salesOfficer\":objZ.salesOfficer\n    //                                                 }\n    //                                             ]\n    //                                         }\n    //                                     ]\n    //                                 }\n    //                             ]\n    //                         }\n    //                     )\n    //                 }\n\n    //             } else {\n    //                 tempZone.push({\n    //                 \"zone\": objZ.zone,\n    //                 \"area\": [\n    //                     {\n    //                         \"area\": objZ.area,\n    //                         \"territory\": [\n    //                             {\n    //                                 \"territory\": objZ.territory,\n    //                                 \"distributor\":[\n    //                                     {\n    //                                         \"distributor\":objZ.distributor,\n    //                                         \"salesOfficer\":[\n    //                                             {\n    //                                                 \"salesOfficer\":objZ.salesOfficer\n    //                                             }\n    //                                         ]\n    //                                     }\n    //                                 ]\n    //                             }\n    //                         ]\n    //                     }\n    //                 ]\n    //             })\n    //             }\n    //         } else {\n    //             tempZone.push({\n    //                 \"zone\": objZ.zone,\n    //                 \"area\": [\n    //                     {\n    //                         \"area\": objZ.area,\n    //                         \"territory\": [\n    //                             {\n    //                                 \"territory\": objZ.territory,\n    //                                 \"distributor\":[\n    //                                     {\n    //                                         \"distributor\":objZ.distributor,\n    //                                         \"salesOfficer\":[\n    //                                             {\n    //                                                 \"salesOfficer\":objZ.salesOfficer\n    //                                             }\n    //                                         ]\n    //                                     }\n    //                                 ]\n    //                             }\n    //                         ]\n    //                     }\n    //                 ]\n    //             })\n    //         }\n\n    //     })\n    //     setZoneList(tempZone)\n    // }\n    // console.log(\"final\", zoneList)\n    return (\n        <>\n            <div>\n                <MisReportBreadCrum menuTitle=\"Sales Budget Report\" />\n            </div>\n            <div>\n                <Card>\n                    <CardBody>\n                        <div className='row'>\n                            {/* LEFT SIDE TREE ROW */}\n                            <div className='col-xl-3' style={{ borderRight: \"1px solid #F2F2F2\" }}>\n                                <div style={{ borderBottom: \"1px solid #F2F2F2\" }}>\n                                    <label>\n                                        <img src={toAbsoluteUrl(\"/images/loc3.png\")}\n                                            style={{ width: \"20px\", height: \"20px\", textAlign: \"center\" }}\n                                            alt='Company Picture' />\n                                        <strong style={{ marginLeft: \"10px\", color: \"#828282\" }}>{intl.formatMessage({ id: \"COMMON.LOCATION_ALL\" })}</strong>\n                                    </label>\n                                </div>\n                                {/* TREE */}\n                                <LocationTreeView tree={locationTree} selectLocationTreeNode={selectLocationTreeNode} />\n                            </div>\n                            {/* RIGHT SIDE LIST ROW */}\n                            <div className='col-xl-9'>\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <div style={{ marginTop: \"5px\" }}>\n                                            <label className='level-title'>Sales Officer</label><br />\n                                            <Autocomplete\n                                                name=\"salesOfficerId\"\n                                                options={salesOfficer}\n                                                onKeyDown={getSalesOfficerListByLocation}\n                                                getOptionLabel={(option) => option.salesOfficerName}\n                                                value={salesOfficerValue}\n                                                onChange={(event, newValue) => {\n                                                    setSalesOfficerValue(newValue)\n                                                    if (newValue !== null) {\n                                                        setInputs({ ...inputs, salesOfficerId: newValue.id });\n                                                    }else {\n                                                        setInputs({ ...inputs, salesOfficerId: '' });\n                                                    }\n                                                }}\n                                                renderInput={(params) => (\n                                                    <TextField {...params} label=\"Select Sales Officer*\" />\n                                                )}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <label className='level-title'><span className=\"mr-1\">Distributor</span></label>\n                                        <Autocomplete\n                                            //id=\"distributorId\"\n                                            name=\"distributorId\"\n                                            options={distributors}\n                                            onKeyDown={getAllDistributorList}\n                                            getOptionLabel={(option) => option.distributorName}\n                                            value={distributorValue}\n                                            onChange={(event, newValue) => {\n                                                setDistributorValue(newValue)\n                                                if (newValue !== null) {\n                                                    setInputs({ ...inputs, distributorId: newValue.distributorId });\n                                                }else {\n                                                    setInputs({ ...inputs, distributorId: '' });\n                                                }\n                                            }}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Select Distributor*\" />\n                                            )}\n                                        />\n                                    </div>\n                                </div>\n                                {/* <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>Start Date<i style={{ color: \"red\" }}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"startDate\" placeholder=\"dd-MM-yy\"\n                                            name='startDate'\n                                            value={inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"d-M-Y\" }}\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                })\n\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>End Date<i style={{ color: \"red\" }}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"endDate\" placeholder=\"dd-MM-yy\"\n                                            name='endDate'\n                                            value={inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"d-M-Y\" }} required\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                })\n                                            }}\n                                        />\n                                    </div>\n                                </div> */}\n                               \n                                {/* <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span className=\"mr-1\">Report  Type</span><span className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportType\" name=\"reportType\"\n                                            onChange={(e)=>handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report Type</option>\n                                                <option value=\"byProduct\">By Product</option>  \n                                                <option value=\"byDistributor\">By Distributor</option>  \n                                                <option value=\"bySalesOfficer\">By SalesOfficer</option>\n                                                 \n                                                <option value=\"byTerritory\">By Territory</option>   \n                                                <option value=\"byArea\">By Area</option>  \n                                                <option value=\"byZone\">By Zone</option>                                        \n                                            </select>\n                                        </div>\n                                    </div>\n                                </div> */}\n                                 {/* <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span className=\"mr-1\">Report  Type</span><span className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportType\" name=\"reportType\"\n                                            onChange={(e)=>handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report Type</option>\n                                                <option value=\"byProduct\">By Product</option>  \n                                                <option value=\"byDistributor\">By Distributor</option>  \n                                                <option value=\"bySalesOfficer\">By SalesOfficer</option>\n                                                 \n                                                <option value=\"byTerritory\">By Territory</option>   \n                                                <option value=\"byArea\">By Area</option>  \n                                                <option value=\"byZone\">By Zone</option>                                        \n                                            </select>\n                                        </div>\n                                    </div>\n                                </div> */}\n\n                                <div className=\"row mt-5\">\n                                    <div className=\"form-group col-lg-8 first-level-top\">\n                                        <label className='level-title'><span className=\"mr-1\">Timeline</span><span className=\"text-danger\">*</span></label>\n                                        <select className=\"form-control\" name=\"fiscalYearId\" onChange={(e) => handleChange(e)}>\n                                            <option value=\"\" selected>Select Fiscal Year</option>\n                                            {allAccountingYear.map((accYear) => (\n                                                <option key={accYear.fiscalYearName} value={accYear.id}>\n                                                    {accYear.fiscalYearName}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>Start Date</label>\n                                        <Flatpickr className=\"form-control\" id=\"startDate\" placeholder=\"Jan-2022\"\n                                            name='startDate'\n                                            value={inputs.startDate ? moment(inputs.startDate, \"YYYY-MM\").format(\"MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"M-Y\" }}\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"startDate\": moment(new Date(value)).format(\"YYYY-MM\")\n                                                })\n\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>End Date</label>\n                                        <Flatpickr className=\"form-control\" id=\"endDate\" placeholder=\"Jun-2022\"\n                                            name='endDate'\n                                            value={inputs.endDate ? moment(inputs.endDate, \"YYYY-MM\").format(\"MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"M-Y\" }} required\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"endDate\": moment(new Date(value)).format(\"YYYY-MM\")\n                                                })\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className=\"form-group col-lg-8 first-level-top\">\n                                        <label className='level-title'><span className=\"mr-1\">Report Format</span><span className=\"text-danger \">*</span></label>\n                                        <select className=\"form-control\" id=\"reportFormate\" name=\"reportFormate\"\n                                            onChange={(e) => handleChange(e)}\n                                        >\n                                            <option value=\"\">Select Report Format</option>\n                                            <option value=\"PDF\">Pdf</option>\n                                            <option value=\"EXCEL\">Excel</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <Button className=\"float-right mt-5\" id=\"gotItBtn\" variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={download}\n                                >\n                                    Download\n                                </Button>\n\n                                <div className=\"float-right\">\n                            <Button className=\"mt-5 mr-5\" id=\"gotItBtn\" variant=\"contained\" color=\"primary\"  onClick={preview}>\n                                Preview\n                            </Button>                      \n                            </div>\n                            </div>\n                        </div>\n\n                        {/* <div>\n                           \n                                {\n                                    zoneList.map((zoneData, index) => (\n                                            <>\n                                            <div className='d-flex'>\n                                                <div className='border border-primary text-center' style={{width:\"150px\"}}>\n                                                    {zoneData.zone}\n                                                </div>\n                                                <div>\n                                                    {\n                                                        zoneData.area.map((areaDta => (\n                                                            <>\n                                                            <div className='d-flex'>\n                                                            <div style={{width:\"150px\"}} className='text-center border border-end border-primary'>{areaDta.area}</div>\n                                                            <div>\n                                                                {\n                                                                    areaDta.territory.map(territoryData=>(\n                                                                 <div className='d-flex'>\n                                                                    <div style={{width:\"150px\"}} className='text-center border border-bottom border-primary'>{territoryData.territory}</div>\n                                                                    <div>\n                                                                        {\n                                                                          territoryData.distributor.map((distributorData)=>(\n                                                                            <div className='d-flex'>\n                                                                                <div style={{width:\"150px\"}} className='text-center border border-bottom border-primary'>\n                                                                                    {distributorData.distributor}\n                                                                                 </div> \n                                                                                 {\n                                                                                    distributorData.salesOfficer.map((salesOfficerData)=>(\n                                                                                        <div style={{width:\"150px\"}} className='text-center border border-bottom border-primary'>\n                                                                                    {salesOfficerData.salesOfficer}\n                                                                                 </div>\n                                                                                    ))\n                                                                                 }   \n                                                                            </div>\n                                                                          ))  \n                                                                        }\n                                                                    </div>\n                                                                 </div>\n                                                                    ))\n                                                                }\n                                                            </div>\n                                                            </div>\n                                                            <div className='border border-primary' style={{width:\"600px\"}}>\n                                                            <span><b>Total Area</b></span>\n                                                            </div>\n                                                            </>\n                                                        )))\n\n                                                    }\n                                                </div>\n                                            </div>\n                                            <div className='border border-primary' style={{width:\"750px\"}}>\n                                                <span><b>Total Zone</b></span>7\n                                            </div>\n                                            </>\n\n                                    ))\n                                }\n                           \n                        </div> */}\n                        <div className='mt-5'>\n                            <iframe src=\"\" className='w-100' id=\"reportShowIframe\" height=\"500px\" />\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        </>\n    );\n}"],"mappings":"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D,GAAG,aAAMC,OAAO,CAACC,GAAR,CAAYC,iBAAlB,8CAAuErD,SAAvE,CAAT;IACA5B,KAAK,CAACkF,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CAAoB,UAAAC,QAAQ,EAAI;MAC5B3B,oBAAoB,CAAC2B,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAApB;IACH,CAFD,EAEGC,KAFH,CAES,UAAAC,GAAG,EAAI,CACZ;IACH,CAJD;EAKH,CAPD;;EAQA,IAAMoD,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAChC,KAAD,EAAW;IACrCrE,mBAAmB,CAACqE,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAnB;EACH,CAFD,CA5QwC,CA+QxC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;;EACA,oBACI,uDACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,kBAAD;IAAoB,SAAS,EAAC,qBAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ,eAI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"},"metadata":{},"sourceType":"module"}