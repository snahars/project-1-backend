{"ast":null,"code":"import _defineProperty from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/PerformanceReport.js\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport MisReportBreadCrum from '../MisReportBreadCrum'; // import ReportsSubTabsHeader from \"../../../../../../sub-tabs-header/ReportsSubTabsHeader\";\n// import InventoryStockHeader from \"../../../../../../header/InventoryStockHeader\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport { getDayDiff, getDaysCount } from \"../../../Util\";\nexport default function PerformanceReport() {\n  var fields = {\n    locationId: \"\",\n    salesOfficerId: \"\",\n    distributorId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    report: \"\",\n    reportType: \"\"\n  };\n\n  var _useState = useState(fields),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var userId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n  var companyId = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var selectedCompany = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var userLoginId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n  var intl = useIntl();\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      locationTree = _useState4[0],\n      setLocationTree = _useState4[1];\n\n  var _useState5 = useState({\n    userLoginId: userId,\n    companyId: companyId\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sessionData = _useState6[0],\n      setSessionData = _useState6[1]; //const [company, setCompany] = useState([]);\n\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      accountingYearId = _useState8[0],\n      setAccountingYearId = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      locationId = _useState10[0],\n      setLocationId = _useState10[1]; //const [childCategoryList, setChildCategoryList] = useState([]);\n\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      productCategoryId = _useState12[0],\n      setProductCategoryId = _useState12[1]; // const [allAccountingYear, setAllAccountingYear] = useState([]);\n  // const [categoryName, setCategoryName] = useState('All');\n\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      salesOfficer = _useState14[0],\n      setSalesOfficer = _useState14[1]; // const [inputs, setInputs] = useState({});\n\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      salesOfficerValue = _useState16[0],\n      setSalesOfficerValue = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      distributorValue = _useState18[0],\n      setDistributorValue = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      distributors = _useState20[0],\n      setDistributors = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      showReport = _useState22[0],\n      setShowReport = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      reportData = _useState24[0],\n      setReportData = _useState24[1];\n\n  var searchParams = useMemo(function () {\n    return {\n      userLoginId: userLoginId,\n      companyId: selectedCompany,\n      accountingYearId: accountingYearId,\n      locationId: locationId,\n      productCategoryId: productCategoryId\n    };\n  }, [userLoginId, selectedCompany, accountingYearId, locationId, productCategoryId]);\n\n  var _useState25 = useState({}),\n      _useState26 = _slicedToArray(_useState25, 2),\n      selectedLocation = _useState26[0],\n      setSelectedLocation = _useState26[1];\n\n  var _useState27 = useState({\n    totalQuantity: 0,\n    totlaSalesAmount: 0\n  }),\n      _useState28 = _slicedToArray(_useState27, 2),\n      total = _useState28[0],\n      setTotal = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      salesDataList = _useState30[0],\n      setOrderToCashCycleList = _useState30[1];\n\n  var history = useHistory();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      singleAll = _React$useState4[0],\n      setSingleAll = _React$useState4[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? 'simple-popper' : undefined; // useEffect(() => {\n  //     // document.getElementById('pills-inventory-stock-report-tab').classList.add('active')\n  //     // document.getElementById('pills-inventory-stock-sales-collection-report-tab').classList.add('active')\n  // }, []);\n\n  useEffect(function () {\n    document.getElementById('reportShowIframe').style.display = \"none\";\n    getLocationTreeList(searchParams);\n  }, [userLoginId, selectedCompany]); // useEffect(() => {\n  // }, [searchParams]);\n\n  var getLocationTreeList = function getLocationTreeList(params) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/location-tree/locationTree/\").concat(params.userLoginId, \"/\").concat(params.companyId);\n    axios.get(URL).then(function (response) {\n      var locationTree = response.data.data;\n      setLocationTree(locationTree);\n    }).catch(function (err) {\n      showError(\"Cannot get Location Tree data.\");\n    });\n  }; // const selectLocationTreeNode = (node) => {\n  //     setSelectedLocation(node);\n  //     setLocationId(node.id);\n  //     if (node.id)\n  //         getSalesOfficerListByLocation(node.id, selectedCompany)\n  //     getAllDistributorList(userLoginId, node.id, selectedCompany)\n  // }\n\n\n  var selectLocationTreeNode = function selectLocationTreeNode(node) {\n    var id = \"summary-id-\" + node.id;\n    var getId = document.getElementById(id);\n    var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n    for (var i = 0; i < getElements.length; i++) {\n      getElements[i].classList.remove('tree-nav-item');\n    }\n\n    if (getId) {\n      getId.classList.add('tree-nav-item');\n      setSelectedLocation(node);\n      setLocationId(node.id);\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"locationId\": node.id\n      }));\n      if (node.id) getSalesOfficerListByLocation(node.id, selectedCompany);\n      getAllDistributorList(userId, node.id, selectedCompany);\n    }\n  };\n\n  var getSalesOfficerListByLocation = function getSalesOfficerListByLocation(locationId, companyId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/auth/get-sales-officer-location/\").concat(locationId, \"/\").concat(companyId);\n    axios.get(URL).then(function (response) {\n      console.log(response.data.data);\n\n      if (response.data.data != undefined) {\n        console.log(response.data.data);\n        setSalesOfficer(response.data.data);\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Company data.\");\n    });\n  };\n\n  var getAllDistributorList = function getAllDistributorList(userLoginId, locationId, companyId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/distributor/distributorList/\").concat(userLoginId, \"/\").concat(locationId, \"/\").concat(companyId); //API call from backend\n\n    axios.get(URL).then(function (response) {\n      //get data in response\n      if (response.data.data != undefined && response.data.data.length != 0) {\n        console.log('hi' + response.data.data);\n        setDistributors(response.data.data);\n      } else {\n        setDistributors([]);\n        setDistributorValue('');\n      }\n    }).catch(function (err) {\n      showError(intl.formatMessage({\n        id: \"COMMON.ERROR_LOCATION_TREE\"\n      }));\n    });\n  };\n\n  var handleChangeDistributor = function handleChangeDistributor(e, dis) {\n    if (dis.distributorId !== null || dis.distributorId !== \"\") {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        distributorId: parseInt(dis.distributorId)\n      }));\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    setInputs(function (values) {\n      return _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var validate = function validate() {\n    console.log(\"inputs=\", inputs);\n\n    if (!inputs.locationId) {\n      showError('Location is required.');\n      return false;\n    } // else if (!inputs.distributorId) {\n    //     showError('Distributor Name is required.');\n    //     return false;\n    // }\n    //  else if (inputs.startDate===undefined || inputs.startDate===\"\") {\n    //     showError(\"Start date  is required\");\n    // } else if (inputs.endDate===undefined || inputs.endDate===\"\") {\n    //     showError(\"End date is required\");\n    // } else if (new Date(inputs.endDate) < new Date(inputs.startDate)) {\n    //     showError(\"End Date should be greater than Start Date.\");\n    //     return false;\n    // } \n    else if (!inputs.reportFormate) {\n      showError('Report Format is required.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var previewValidate = function previewValidate() {\n    if (!inputs.locationId) {\n      showError('Location is required.');\n      return false;\n    } else if (!inputs.startDate) {\n      showError('Start date is required.');\n      return false;\n    } else if (!inputs.endDate) {\n      showError('End date is required.');\n      return false;\n    } else if (inputs.endDate < inputs.startDate) {\n      showError(\"End Date should be greater than Start Date\");\n      return false;\n    }\n\n    return true;\n  };\n\n  var download = function download() {\n    if (!validate()) {\n      return false;\n    }\n\n    var queryParams = '?locationId=' + inputs.locationId;\n    queryParams += '&reportFormate=' + inputs.reportFormate;\n    queryParams += '&companyId=' + companyId;\n    queryParams += '&startDate=' + inputs.startDate;\n    queryParams += '&endDate=' + inputs.endDate;\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/report/performance-report\") + queryParams;\n    axios.get(URL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      if (inputs.reportFormate === \"PDF\") {\n        var url = window.URL.createObjectURL(new Blob([response.data]));\n        var link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', \"PerformanceReport.pdf\");\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        var _url = window.URL.createObjectURL(new Blob([response.data]));\n\n        var _link = document.createElement('a');\n\n        _link.href = _url;\n\n        _link.setAttribute('download', \"PerformanceReport.xlsx\");\n\n        document.body.appendChild(_link);\n\n        _link.click();\n\n        document.body.removeChild(_link);\n      }\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var preview = function preview() {\n    if (!previewValidate()) {\n      return false;\n    }\n\n    var queryParams = '?locationId=' + inputs.locationId;\n    queryParams += '&reportFormate=' + \"PDF\";\n    queryParams += '&companyId=' + companyId;\n    queryParams += '&startDate=' + inputs.startDate;\n    queryParams += '&endDate=' + inputs.endDate;\n    var dataURL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/report/performance-report\") + queryParams;\n    axios.get(dataURL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var file = new Blob([response.data], {\n        type: \"application/pdf\"\n      });\n      var fileURL = URL.createObjectURL(file);\n      var iframe = document.querySelector(\"iframe\");\n      if (iframe === null || iframe === void 0 ? void 0 : iframe.src) iframe.src = fileURL;\n      document.getElementById('reportShowIframe').style.display = \"inline-block\";\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var previewSalesAndCollection = function previewSalesAndCollection() {\n    if (!validate()) {\n      return false;\n    }\n\n    var queryString = '?'; //queryString += 'depotId=' + parseInt(inputs.depotId);\n    //queryString += '&companyId=' + companyId;\n    //queryString += '&storeId=' + parseInt(inputs.storeId);\n\n    queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n    queryString += '&startDate=' + inputs.startDate;\n    queryString += '&endDate=' + inputs.endDate;\n    queryString += '&distributorId=' + parseInt(inputs.distributorId);\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/reports/stock-valuation\") + queryString;\n    axios.get(URL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var url = window.URL.createObjectURL(new Blob([response.data]));\n      var link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', \"salesAndCollection.pdf\");\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var getReportData = function getReportData() {\n    if (!validate()) {\n      return false;\n    }\n\n    setShowReport(inputs.reportType); // if(!validate()){\n    //     return false;\n    // }\n    // let queryString = \"?\";\n    // queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n    // queryString += '&startDate=' + inputs.startDate;\n    // queryString += '&endDate=' + inputs.endDate;\n    //const URL = `${process.env.REACT_APP_API_URL}/api/reports/distributor-ledger-view`+queryString;\n\n    axios.get(URL).then(function (response) {\n      setReportData(response.data.data);\n      setShowReport(true);\n    }).catch();\n  }; // console.log(inputs)\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MisReportBreadCrum, {\n    menuTitle: \"Performance Report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-3\",\n    style: {\n      borderRight: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottom: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc3.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginLeft: \"10px\",\n      color: \"#828282\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 41\n    }\n  }, intl.formatMessage({\n    id: \"COMMON.LOCATION_ALL\"\n  })))), /*#__PURE__*/React.createElement(LocationTreeView, {\n    tree: locationTree,\n    selectLocationTreeNode: selectLocationTreeNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 41\n    }\n  }, \"Start Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 82\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"startDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"startDate\",\n    value: inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 41\n    }\n  }, \"End Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 80\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"endDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"endDate\",\n    value: inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    required: true,\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 76\n    }\n  }, \"Report Format\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 119\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"reportFormate\",\n    name: \"reportFormate\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 49\n    }\n  }, \"Select Report Format\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"PDF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 49\n    }\n  }, \"Pdf\"))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: download,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 33\n    }\n  }, \"Download\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-5 mr-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 37\n    }\n  }, \"Preview\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    src: \"\",\n    className: \"w-100\",\n    id: \"reportShowIframe\",\n    height: \"500px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 29\n    }\n  }))))));\n}","map":{"version":3,"names":["React","useEffect","useMemo","useState","toAbsoluteUrl","Card","CardBody","useHistory","LocationTreeView","showError","axios","useIntl","shallowEqual","useSelector","MisReportBreadCrum","Autocomplete","TextField","Button","typeOf","moment","Flatpickr","getDayDiff","getDaysCount","PerformanceReport","fields","locationId","salesOfficerId","distributorId","startDate","endDate","report","reportType","inputs","setInputs","userId","state","auth","user","companyId","company","selectedCompany","userLoginId","intl","locationTree","setLocationTree","sessionData","setSessionData","accountingYearId","setAccountingYearId","setLocationId","productCategoryId","setProductCategoryId","salesOfficer","setSalesOfficer","salesOfficerValue","setSalesOfficerValue","distributorValue","setDistributorValue","distributors","setDistributors","showReport","setShowReport","reportData","setReportData","searchParams","selectedLocation","setSelectedLocation","totalQuantity","totlaSalesAmount","total","setTotal","salesDataList","setOrderToCashCycleList","history","anchorEl","setAnchorEl","singleAll","setSingleAll","handleClick","event","currentTarget","open","Boolean","id","undefined","document","getElementById","style","display","getLocationTreeList","params","URL","process","env","REACT_APP_API_URL","get","then","response","data","catch","err","selectLocationTreeNode","node","getId","getElements","getElementsByClassName","i","length","classList","remove","add","getSalesOfficerListByLocation","getAllDistributorList","console","log","formatMessage","handleChangeDistributor","e","dis","parseInt","handleChange","name","target","value","values","validate","reportFormate","previewValidate","download","queryParams","responseType","url","window","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","removeChild","preview","dataURL","file","type","fileURL","iframe","querySelector","src","previewSalesAndCollection","queryString","getReportData","borderRight","borderBottom","width","height","textAlign","marginLeft","color","format","dateFormat","Date"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/PerformanceReport.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\n// import ReportsSubTabsHeader from \"../../../../../../sub-tabs-header/ReportsSubTabsHeader\";\n\n\n// import InventoryStockHeader from \"../../../../../../header/InventoryStockHeader\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport { getDayDiff, getDaysCount } from \"../../../Util\"\n\n\nexport default function PerformanceReport() {\n\n    const fields = {\n        locationId:\"\",\n        salesOfficerId: \"\",\n        distributorId: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        report: \"\",\n        reportType:\"\"\n\n\n    };\n\n    const [inputs, setInputs] = useState(fields);\n    const userId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const companyId = useSelector((state) => state.auth.company, shallowEqual);\n    const selectedCompany = useSelector((state) => state.auth.company, shallowEqual);\n    const userLoginId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const intl = useIntl();\n    const [locationTree, setLocationTree] = useState([]);\n    const [sessionData, setSessionData] = useState({ userLoginId: userId, companyId: companyId });\n    //const [company, setCompany] = useState([]);\n    const [accountingYearId, setAccountingYearId] = useState('');\n    const [locationId, setLocationId] = useState('');\n    //const [childCategoryList, setChildCategoryList] = useState([]);\n    const [productCategoryId, setProductCategoryId] = useState('');\n    // const [allAccountingYear, setAllAccountingYear] = useState([]);\n    // const [categoryName, setCategoryName] = useState('All');\n    const [salesOfficer, setSalesOfficer] = useState([]);\n    // const [inputs, setInputs] = useState({});\n    const [salesOfficerValue, setSalesOfficerValue] = useState(null);\n    const [distributorValue, setDistributorValue] = useState(null);\n    const [distributors, setDistributors] = useState([]);\n    const [showReport, setShowReport] = useState('');\n    const [reportData, setReportData] = useState([]);\n\n\n    const searchParams = useMemo(() => {\n        return {\n            userLoginId: userLoginId, companyId: selectedCompany, accountingYearId: accountingYearId\n            , locationId: locationId, productCategoryId: productCategoryId\n        }\n    }, [userLoginId, selectedCompany, accountingYearId, locationId, productCategoryId]);\n\n    const [selectedLocation, setSelectedLocation] = useState({});\n    const [total, setTotal] = useState({ totalQuantity: 0, totlaSalesAmount: 0 });\n    const [salesDataList, setOrderToCashCycleList] = useState([]);\n\n    let history = useHistory();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    let [singleAll, setSingleAll] = React.useState([]);\n\n    const handleClick = (event) => {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popper' : undefined;\n    // useEffect(() => {\n    //     // document.getElementById('pills-inventory-stock-report-tab').classList.add('active')\n    //     // document.getElementById('pills-inventory-stock-sales-collection-report-tab').classList.add('active')\n    // }, []);\n\n    useEffect(() => {\n        document.getElementById('reportShowIframe').style.display = \"none\";\n        getLocationTreeList(searchParams);\n    }, [userLoginId, selectedCompany]);\n\n    // useEffect(() => {\n    // }, [searchParams]);\n\n\n\n\n    const getLocationTreeList = (params) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/location-tree/locationTree/${params.userLoginId}/${params.companyId}`;\n        axios.get(URL).then(response => {\n            const locationTree = response.data.data;\n            setLocationTree(locationTree);\n        }).catch(err => {\n            showError(\"Cannot get Location Tree data.\");\n        });\n    }\n\n\n    // const selectLocationTreeNode = (node) => {\n    //     setSelectedLocation(node);\n    //     setLocationId(node.id);\n    //     if (node.id)\n    //         getSalesOfficerListByLocation(node.id, selectedCompany)\n    //     getAllDistributorList(userLoginId, node.id, selectedCompany)\n    // }\n\n    const selectLocationTreeNode = (node) => {\n        let id = \"summary-id-\"+node.id;\n        const getId = document.getElementById(id);\n        const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n        \n        for (var i = 0; i < getElements.length; i++) {\n            getElements[i].classList.remove('tree-nav-item');\n        }\n        if (getId) {\n            getId.classList.add('tree-nav-item');\n            setSelectedLocation(node);\n        setLocationId(node.id);\n        setInputs({...inputs, \"locationId\":node.id })\n        if(node.id)\n        getSalesOfficerListByLocation(node.id, selectedCompany)\n        getAllDistributorList(userId,node.id, selectedCompany)\n        }\n        \n    }\n\n    const getSalesOfficerListByLocation = (locationId, companyId) => {\n        const URL = `${process.env.REACT_APP_API_URL}/auth/get-sales-officer-location/${locationId}/${companyId}`;\n        axios.get(URL).then(response => {\n            console.log(response.data.data)\n            if (response.data.data != undefined) {\n                console.log(response.data.data)\n                setSalesOfficer(response.data.data);\n            }\n        }).catch(err => {\n            showError(\"Cannot get Company data.\");\n        });\n    }\n\n    const getAllDistributorList = (userLoginId, locationId, companyId) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/distributor/distributorList/${userLoginId}/${locationId}/${companyId}`;//API call from backend\n        axios.get(URL).then(response => {//get data in response\n            if (response.data.data != undefined && response.data.data.length != 0) {\n                console.log('hi' + response.data.data)\n                setDistributors(response.data.data);\n            }\n            else{\n                setDistributors([]);\n                setDistributorValue('');\n            }\n        }).catch(err => {\n            showError(intl.formatMessage({ id: \"COMMON.ERROR_LOCATION_TREE\" }));\n        });\n    }\n\n    const handleChangeDistributor = (e, dis) => {\n        if (dis.distributorId !== null || dis.distributorId !== \"\") {\n            setInputs({ ...inputs, distributorId: parseInt(dis.distributorId) });\n        }\n    }\n\n    const handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setInputs(values => ({ ...values, [name]: value }))\n    }\n\n    const validate = () => {\n        console.log(\"inputs=\",inputs)\n\n        if (!inputs.locationId) {\n            showError('Location is required.');\n            return false;\n        }\n    \n        // else if (!inputs.distributorId) {\n        //     showError('Distributor Name is required.');\n        //     return false;\n        // }\n\n        //  else if (inputs.startDate===undefined || inputs.startDate===\"\") {\n        //     showError(\"Start date  is required\");\n        // } else if (inputs.endDate===undefined || inputs.endDate===\"\") {\n        //     showError(\"End date is required\");\n        // } else if (new Date(inputs.endDate) < new Date(inputs.startDate)) {\n        //     showError(\"End Date should be greater than Start Date.\");\n        //     return false;\n        // } \n        else if (!inputs.reportFormate) {\n            showError('Report Format is required.');\n            return false;\n        }\n        \n        \n        return true;\n    }\n    const previewValidate = () => {\n        if (!inputs.locationId) {\n            showError('Location is required.');\n            return false;\n        }else if (!inputs.startDate) {\n            showError('Start date is required.');\n            return false;\n        }else if (!inputs.endDate) {\n            showError('End date is required.');\n            return false;\n        }else if (inputs.endDate < inputs.startDate) {\n            showError(\"End Date should be greater than Start Date\");\n            return false;\n        }\n        \n        \n        return true;\n    }\n    const download = () => {\n        if (!validate()) {\n            return false;\n        }\n        let queryParams = '?locationId=' + inputs.locationId;\n        queryParams += '&reportFormate=' + inputs.reportFormate;\n        queryParams += '&companyId=' + companyId;\n        queryParams += '&startDate=' + inputs.startDate;\n        queryParams += '&endDate=' + inputs.endDate;\n        const URL = `${process.env.REACT_APP_API_URL}/api/report/performance-report` + queryParams;\n        axios.get(URL, { responseType: 'blob' }).then(response => {\n            if (inputs.reportFormate === \"PDF\") {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', \"PerformanceReport.pdf\");\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            } else {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', \"PerformanceReport.xlsx\");\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            }\n        }).catch(err => {\n            showError();\n        });\n    }\n\n    const preview = () => {\n        if (!previewValidate()) {\n            return false;\n        }\n        let queryParams = '?locationId=' + inputs.locationId;\n        queryParams += '&reportFormate=' + \"PDF\";\n        queryParams += '&companyId=' + companyId;\n        queryParams += '&startDate=' + inputs.startDate;\n        queryParams += '&endDate=' + inputs.endDate;\n        const dataURL = `${process.env.REACT_APP_API_URL}/api/report/performance-report` + queryParams;\n        axios.get(dataURL, { responseType: 'blob' }).then(response => {\n            const file = new Blob([response.data], { type: \"application/pdf\" });\n            const fileURL = URL.createObjectURL(file);\n            const iframe = document.querySelector(\"iframe\");\n            if (iframe?.src) iframe.src = fileURL;\n            document.getElementById('reportShowIframe').style.display = \"inline-block\";\n        }).catch(err => {\n            showError();\n        });\n    }\n\n    const previewSalesAndCollection = () => {\n        if (!validate()) {\n            return false;\n        }\n        let queryString = '?';\n        //queryString += 'depotId=' + parseInt(inputs.depotId);\n        //queryString += '&companyId=' + companyId;\n        //queryString += '&storeId=' + parseInt(inputs.storeId);\n\n        queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n        queryString += '&startDate=' + inputs.startDate;\n        queryString += '&endDate=' + inputs.endDate;\n        queryString += '&distributorId=' + parseInt(inputs.distributorId);\n\n        const URL = `${process.env.REACT_APP_API_URL}/api/reports/stock-valuation` + queryString;\n        axios.get(URL, { responseType: 'blob' }).then(response => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', \"salesAndCollection.pdf\");\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n\n        }).catch(err => {\n            showError();\n        });\n\n    }\n\n    const getReportData = () => {   \n        if(!validate()){\n            return false;\n        }\n        setShowReport(inputs.reportType);\n        // if(!validate()){\n        //     return false;\n        // }\n        // let queryString = \"?\";\n        // queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n        // queryString += '&startDate=' + inputs.startDate;\n        // queryString += '&endDate=' + inputs.endDate;\n\n        //const URL = `${process.env.REACT_APP_API_URL}/api/reports/distributor-ledger-view`+queryString;\n        axios.get(URL).then((response) => {\n            setReportData(response.data.data);\n            setShowReport(true);\n        }).catch();\n    }\n    // console.log(inputs)\n    return (\n        <>\n            <div>\n                <MisReportBreadCrum menuTitle=\"Performance Report\"/>\n            </div>\n            <div>\n                {/* BREAD CRUM ROW */}\n                {/* <InventoryBreadCrum /> */}\n                {/* TODAY SALE ROW */}\n                {/* <InventoryStockHeader showStockData={true} /> */}\n                {/* <ReportsSubTabsHeader /> */}\n            </div>\n            <div>\n                <Card>\n                    <CardBody>\n                        <div className='row'>\n                            {/* LEFT SIDE TREE ROW */}\n                            <div className='col-xl-3' style={{ borderRight: \"1px solid #F2F2F2\" }}>\n                                <div style={{ borderBottom: \"1px solid #F2F2F2\" }}>\n                                    <label>\n                                        <img src={toAbsoluteUrl(\"/images/loc3.png\")}\n                                            style={{ width: \"20px\", height: \"20px\", textAlign: \"center\" }}\n                                            alt='Company Picture' />\n                                        <strong style={{ marginLeft: \"10px\", color: \"#828282\" }}>{intl.formatMessage({ id: \"COMMON.LOCATION_ALL\" })}</strong>\n                                    </label>\n                                </div>\n                                {/* TREE */}\n                                <LocationTreeView tree={locationTree} selectLocationTreeNode={selectLocationTreeNode} />\n                            </div>\n                            {/* RIGHT SIDE LIST ROW */}\n                            <div className='col-xl-9'>\n                                {/* <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <div style={{ marginTop: \"5px\" }}>\n                                            <label className='level-title'>Sales Officer</label><br />\n                                            <Autocomplete\n                                                name=\"salesOfficerId\"\n                                                options={salesOfficer}\n                                                onKeyDown={getSalesOfficerListByLocation}\n                                                getOptionLabel={(option) => option.salesOfficerName}\n                                                value={salesOfficerValue}\n                                                onChange={(event, newValue) => {\n                                                    setSalesOfficerValue(newValue)\n                                                    if (newValue !== null) {\n                                                        setInputs({ ...inputs, salesOfficerId: newValue.id });\n                                                    }else {\n                                                    setInputs({ ...inputs, salesOfficerId: '' });\n                                                }\n                                                }}\n                                                renderInput={(params) => (\n                                                    <TextField {...params} label=\"Select Sales Officer*\" />\n                                                )}\n                                            />\n                                        </div>\n                                    </div>\n                                </div> */}\n                                {/*<div className='mt-5 row'>*/}\n                                {/*    <div className='col-xl-8'>*/}\n                                {/*        <label className='level-title'><span className=\"mr-1\">Distributor</span></label>*/}\n                                {/*        <Autocomplete*/}\n                                {/*            //id=\"distributorId\"*/}\n                                {/*            name=\"distributorId\"*/}\n                                {/*            options={distributors}*/}\n                                {/*            onKeyDown={getAllDistributorList}*/}\n                                {/*            getOptionLabel={(option) => option.distributorName}*/}\n                                {/*            value={distributorValue}*/}\n                                {/*            onChange={(event, newValue) => {*/}\n                                {/*                setDistributorValue(newValue)*/}\n                                {/*                if (newValue !== null) {*/}\n                                {/*                    setInputs({ ...inputs, distributorId: newValue.distributorId });*/}\n                                {/*                }else {*/}\n                                {/*                    setInputs({ ...inputs, distributorId: '' });*/}\n                                {/*                }*/}\n                                {/*            }}*/}\n                                {/*            renderInput={(params) => (*/}\n                                {/*                <TextField {...params} label=\"Select Distributor*\" />*/}\n                                {/*            )}*/}\n                                {/*        />*/}\n                                {/*    </div>*/}\n                                {/*</div>*/}\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>Start Date<i style={{ color: \"red\" }}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"startDate\" placeholder=\"dd-MM-yy\"\n                                            name='startDate'\n                                            value={inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"d-M-Y\" }}\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                })\n\n                                            }}\n                                        />\n                                    </div>\n                            </div>\n\n                            <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>End Date<i style={{ color: \"red\" }}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"endDate\" placeholder=\"dd-MM-yy\"\n                                            name='endDate'\n                                            value={inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"d-M-Y\" }} required\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                })\n                                            }}\n                                        />\n                                    </div>\n                            </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span className=\"mr-1\">Report Format</span><span className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportFormate\" name=\"reportFormate\"\n                                                onChange={(e) => handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report Format</option>\n                                                <option value=\"PDF\">Pdf</option>\n                                                {/*<option value=\"EXCEL\">Excel</option>*/}\n\n                                                {/* {\n                                                allReport.map((report)=>(\n                                                <option key={report.id} value={report.id}>\n                                                    {report.name}\n                                                </option> \n                                                ))\n                                            }    */}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                {/* <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span className=\"mr-1\">Report Type</span><span className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportType\" name=\"reportType\"\n                                            onChange={(e)=>handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report Type</option> \n                                                <option value=\"byInvoice\">By Invoice</option> \n                                                <option value=\"byDistributor\">By Distributor</option> \n                                                <option value=\"bySalesOfficer\">By SalesOfficer</option>                                                                                                                                                                                                                                               \n                                                <option value=\"byArea\">By Area</option>  \n                                                <option value=\"byZone\">By Zone</option>                                        \n                                            </select>\n                                        </div>\n                                    </div>\n                                </div> */}\n\n                                <Button className=\"float-right mt-5\" id=\"gotItBtn\" variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={download}\n                                >\n                                    Download\n                                </Button>\n                                <div className=\"float-right\">\n                                    <Button className=\"mt-5 mr-5\" id=\"gotItBtn\" variant=\"contained\" color=\"primary\"\n                                        onClick={preview}>Preview\n                                    </Button>\n                                </div>\n                            </div> \n                            </div>\n                            <div className='mt-5'>\n                            <iframe src=\"\" className='w-100' id=\"reportShowIframe\" height=\"500px\" />\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}