{"ast":null,"code":"import _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/GoogleMaterialExamples/utils/PopoverExamplesPage.js\";\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Popover, Button, Typography } from \"@material-ui/core\";\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 1\n\nvar useStyles1 = makeStyles(function (theme) {\n  return {\n    typography: {\n      padding: theme.spacing(2)\n    }\n  };\n}); // Example 2\n\nvar useStyles2 = makeStyles(function (theme) {\n  return {\n    popover: {\n      pointerEvents: \"none\"\n    },\n    paper: {\n      padding: theme.spacing(1)\n    }\n  };\n}); // Example 3\n\nvar useStyles3 = makeStyles(function (theme) {\n  return {\n    typography: {\n      margin: theme.spacing(2)\n    }\n  };\n});\nexport default function PopoverExamplesPage() {\n  var _this = this;\n\n  // Example 1\n  var classes1 = useStyles1();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl1 = _React$useState2[0],\n      setAnchorEl1 = _React$useState2[1];\n\n  function handleClick1(event) {\n    setAnchorEl1(event.currentTarget);\n  }\n\n  function handleClose1() {\n    setAnchorEl1(null);\n  }\n\n  var open1 = Boolean(anchorEl1);\n  var id = open1 ? \"simple-popover\" : undefined; // Example 2\n\n  var classes2 = useStyles2();\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      anchorEl2 = _React$useState4[0],\n      setAnchorEl2 = _React$useState4[1];\n\n  function handlePopoverOpen2(event) {\n    setAnchorEl2(event.currentTarget);\n  }\n\n  function handlePopoverClose2() {\n    setAnchorEl2(null);\n  }\n\n  var open2 = Boolean(anchorEl2); // Example 3\n\n  var classes3 = useStyles3();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"A Popover can be used to display some content on top of another\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/popover/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Simple Popover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    \"aria-describedby\": id,\n    variant: \"contained\",\n    onClick: handleClick1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"Open Popover\"), /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: open1,\n    anchorEl: anchorEl1,\n    onClose: handleClose1,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes1.typography,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"The content of the Popover.\")))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Mouse over interaction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"We demonstrate how to use the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 45\n    }\n  }, \"Popover\"), \" component to implement a popover behavior based on the mouse over event.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    \"aria-owns\": open2 ? \"mouse-over-popover\" : undefined,\n    \"aria-haspopup\": \"true\",\n    onMouseEnter: handlePopoverOpen2,\n    onMouseLeave: handlePopoverClose2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Hover with a Popover.\"), /*#__PURE__*/React.createElement(Popover, {\n    id: \"mouse-over-popover\",\n    className: classes2.popover,\n    classes: {\n      paper: classes2.paper\n    },\n    open: open2,\n    anchorEl: anchorEl2,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    onClose: handlePopoverClose2,\n    disableRestoreFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"I use Popover.\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode3,\n    beforeCodeTitle: \"PopupState helper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"There is a 3rd party package \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 44\n    }\n  }, \"material-ui-popup-state\"), \" \", \"that takes care of popover state for you in most cases.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PopupState, {\n    variant: \"popover\",\n    popupId: \"demo-popup-popover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, function (popupState) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, Object.assign({\n      variant: \"contained\"\n    }, bindTrigger(popupState), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }), \"Open Popover\"), /*#__PURE__*/React.createElement(Popover, Object.assign({}, bindPopover(popupState), {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes3.typography,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, \"The content of the Popover.\")));\n  })))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Popover from '@material-ui/core/Popover';\\nimport Typography from '@material-ui/core/Typography';\\nimport Button from '@material-ui/core/Button';\\n\\nconst useStyles = makeStyles(theme => ({\\n  typography: {\\n    padding: theme.spacing(2),\\n  },\\n}));\\n\\nexport default function SimplePopover() {\\n  const classes = useStyles();\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\n\\n  function handleClick(event) {\\n    setAnchorEl(event.currentTarget);\\n  }\\n\\n  function handleClose() {\\n    setAnchorEl(null);\\n  }\\n\\n  const open = Boolean(anchorEl);\\n  const id = open ? 'simple-popover' : undefined;\\n\\n  return (\\n    <div>\\n      <Button aria-describedby={id} variant=\\\"contained\\\" onClick={handleClick}>\\n        Open Popover\\n      </Button>\\n      <Popover\\n        id={id}\\n        open={open}\\n        anchorEl={anchorEl}\\n        onClose={handleClose}\\n        anchorOrigin={{\\n          vertical: 'bottom',\\n          horizontal: 'center',\\n        }}\\n        transformOrigin={{\\n          vertical: 'top',\\n          horizontal: 'center',\\n        }}\\n      >\\n        <Typography className={classes.typography}>The content of the Popover.</Typography>\\n      </Popover>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport Popover from '@material-ui/core/Popover';\\nimport Typography from '@material-ui/core/Typography';\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\nconst useStyles = makeStyles(theme => ({\\n  popover: {\\n    pointerEvents: 'none',\\n  },\\n  paper: {\\n    padding: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function MouseOverPopover() {\\n  const classes = useStyles();\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\n\\n  function handlePopoverOpen(event) {\\n    setAnchorEl(event.currentTarget);\\n  }\\n\\n  function handlePopoverClose() {\\n    setAnchorEl(null);\\n  }\\n\\n  const open = Boolean(anchorEl);\\n\\n  return (\\n    <div>\\n      <Typography\\n        aria-owns={open ? 'mouse-over-popover' : undefined}\\n        aria-haspopup=\\\"true\\\"\\n        onMouseEnter={handlePopoverOpen}\\n        onMouseLeave={handlePopoverClose}\\n      >\\n        Hover with a Popover.\\n      </Typography>\\n      <Popover\\n        id=\\\"mouse-over-popover\\\"\\n        className={classes.popover}\\n        classes={{\\n          paper: classes.paper,\\n        }}\\n        open={open}\\n        anchorEl={anchorEl}\\n        anchorOrigin={{\\n          vertical: 'bottom',\\n          horizontal: 'left',\\n        }}\\n        transformOrigin={{\\n          vertical: 'top',\\n          horizontal: 'left',\\n        }}\\n        onClose={handlePopoverClose}\\n        disableRestoreFocus\\n      >\\n        <Typography>I use Popover.</Typography>\\n      </Popover>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode3 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Typography from '@material-ui/core/Typography';\\nimport Button from '@material-ui/core/Button';\\nimport Popover from '@material-ui/core/Popover';\\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\\n\\nconst useStyles = makeStyles(theme => ({\\n  typography: {\\n    margin: theme.spacing(2),\\n  },\\n}));\\n\\nexport default function PopoverPopupState() {\\n  const classes = useStyles();\\n\\n  return (\\n    <PopupState variant=\\\"popover\\\" popupId=\\\"demo-popup-popover\\\">\\n      {popupState => (\\n        <div>\\n          <Button variant=\\\"contained\\\" {...bindTrigger(popupState)}>\\n            Open Popover\\n          </Button>\\n          <Popover\\n            {...bindPopover(popupState)}\\n            anchorOrigin={{\\n              vertical: 'bottom',\\n              horizontal: 'center',\\n            }}\\n            transformOrigin={{\\n              vertical: 'top',\\n              horizontal: 'center',\\n            }}\\n          >\\n            <Typography className={classes.typography}>The content of the Popover.</Typography>\\n          </Popover>\\n        </div>\\n      )}\\n    </PopupState>\\n  );\\n}\\n\";","map":{"version":3,"names":["React","makeStyles","Popover","Button","Typography","PopupState","bindTrigger","bindPopover","Notice","KTCodeExample","useStyles1","theme","typography","padding","spacing","useStyles2","popover","pointerEvents","paper","useStyles3","margin","PopoverExamplesPage","classes1","useState","anchorEl1","setAnchorEl1","handleClick1","event","currentTarget","handleClose1","open1","Boolean","id","undefined","classes2","anchorEl2","setAnchorEl2","handlePopoverOpen2","handlePopoverClose2","open2","classes3","jsCode1","vertical","horizontal","jsCode2","jsCode3","popupState"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/GoogleMaterialExamples/utils/PopoverExamplesPage.js"],"sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Popover, Button, Typography} from \"@material-ui/core\";\r\nimport PopupState, {bindTrigger, bindPopover} from \"material-ui-popup-state\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  popover: {\r\n    pointerEvents: \"none\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  typography: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function PopoverExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const [anchorEl1, setAnchorEl1] = React.useState(null);\r\n\r\n  function handleClick1(event) {\r\n    setAnchorEl1(event.currentTarget);\r\n  }\r\n\r\n  function handleClose1() {\r\n    setAnchorEl1(null);\r\n  }\r\n\r\n  const open1 = Boolean(anchorEl1);\r\n  const id = open1 ? \"simple-popover\" : undefined;\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\r\n\r\n  function handlePopoverOpen2(event) {\r\n    setAnchorEl2(event.currentTarget);\r\n  }\r\n\r\n  function handlePopoverClose2() {\r\n    setAnchorEl2(null);\r\n  }\r\n\r\n  const open2 = Boolean(anchorEl2);\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          A Popover can be used to display some content on top of another\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/popover/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple Popover\">\r\n            <div>\r\n              <Button\r\n                aria-describedby={id}\r\n                variant=\"contained\"\r\n                onClick={handleClick1}\r\n              >\r\n                Open Popover\r\n              </Button>\r\n              <Popover\r\n                id={id}\r\n                open={open1}\r\n                anchorEl={anchorEl1}\r\n                onClose={handleClose1}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"center\"\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"center\"\r\n                }}\r\n              >\r\n                <Typography className={classes1.typography}>\r\n                  The content of the Popover.\r\n                </Typography>\r\n              </Popover>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Mouse over interaction\"\r\n          >\r\n            <span>\r\n              We demonstrate how to use the <code>Popover</code> component to\r\n              implement a popover behavior based on the mouse over event.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Typography\r\n                aria-owns={open2 ? \"mouse-over-popover\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                onMouseEnter={handlePopoverOpen2}\r\n                onMouseLeave={handlePopoverClose2}\r\n              >\r\n                Hover with a Popover.\r\n              </Typography>\r\n              <Popover\r\n                id=\"mouse-over-popover\"\r\n                className={classes2.popover}\r\n                classes={{\r\n                  paper: classes2.paper\r\n                }}\r\n                open={open2}\r\n                anchorEl={anchorEl2}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\"\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\"\r\n                }}\r\n                onClose={handlePopoverClose2}\r\n                disableRestoreFocus\r\n              >\r\n                <Typography>I use Popover.</Typography>\r\n              </Popover>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"PopupState helper\">\r\n            <span>\r\n              There is a 3rd party package <code>material-ui-popup-state</code>{\" \"}\r\n              that takes care of popover state for you in most cases.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n              {popupState => (\r\n                <div>\r\n                  <Button variant=\"contained\" {...bindTrigger(popupState)}>\r\n                    Open Popover\r\n                  </Button>\r\n                  <Popover\r\n                    {...bindPopover(popupState)}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"center\"\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"center\"\r\n                    }}\r\n                  >\r\n                    <Typography className={classes3.typography}>\r\n                      The content of the Popover.\r\n                    </Typography>\r\n                  </Popover>\r\n                </div>\r\n              )}\r\n            </PopupState>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimplePopover() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\r\n        Open Popover\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>The content of the Popover.</Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function MouseOverPopover() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  function handlePopoverOpen(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handlePopoverClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <div>\r\n      <Typography\r\n        aria-owns={open ? 'mouse-over-popover' : undefined}\r\n        aria-haspopup=\"true\"\r\n        onMouseEnter={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n      >\r\n        Hover with a Popover.\r\n      </Typography>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{\r\n          paper: classes.paper,\r\n        }}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography>I use Popover.</Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function PopoverPopupState() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n      {popupState => (\r\n        <div>\r\n          <Button variant=\"contained\" {...bindTrigger(popupState)}>\r\n            Open Popover\r\n          </Button>\r\n          <Popover\r\n            {...bindPopover(popupState)}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n          >\r\n            <Typography className={classes.typography}>The content of the Popover.</Typography>\r\n          </Popover>\r\n        </div>\r\n      )}\r\n    </PopupState>\r\n  );\r\n}\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}