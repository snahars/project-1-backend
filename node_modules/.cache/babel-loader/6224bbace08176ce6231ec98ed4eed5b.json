{"ast":null,"code":"import _defineProperty from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/DebitCreditNoteReport.js\";\nimport React, { useEffect, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nexport default function DebitCreditNoteReport() {\n  var _this = this;\n\n  var fields = {\n    locationId: \"\",\n    salesOfficerId: \"\",\n    distributorId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    report: \"\",\n    reportType: \"\"\n  };\n  var intl = useIntl();\n\n  var _useState = useState(fields),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var selectedCompany = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var userLoginId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      locationTree = _useState4[0],\n      setLocationTree = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      locationIds = _useState6[0],\n      setLocationIds = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      salesOfficerList = _useState8[0],\n      setSalesOfficerList = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      salesOfficerValue = _useState10[0],\n      setSalesOfficerValue = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      distributorValue = _useState12[0],\n      setDistributorValue = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      distributorList = _useState14[0],\n      setDistributorList = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showReport = _useState16[0],\n      setShowReport = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      reportData = _useState18[0],\n      setReportData = _useState18[1];\n\n  useEffect(function () {\n    document.getElementById('reportShowIframe').style.display = \"none\";\n    getLocationTreeList({\n      userLoginId: userLoginId,\n      companyId: selectedCompany\n    });\n  }, [userLoginId, selectedCompany]);\n\n  var getLocationTreeList = function getLocationTreeList(params) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/location-tree/locationTree/\").concat(params.userLoginId, \"/\").concat(params.companyId);\n    axios.get(URL).then(function (response) {\n      var locationTree = response.data.data;\n      setLocationTree(locationTree);\n    }).catch(function (err) {\n      showError(\"Cannot get Location Tree data.\");\n    });\n  };\n\n  var selectLocationTreeNode = function selectLocationTreeNode(node) {\n    var id = \"summary-id-\" + node.id;\n    var getId = document.getElementById(id);\n    var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n    for (var i = 0; i < getElements.length; i++) {\n      getElements[i].classList.remove('tree-nav-item');\n    }\n\n    if (getId) {\n      getId.classList.add('tree-nav-item');\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"locationId\": node.id\n      }));\n    }\n\n    if (locationIds.length !== 0) {\n      // for clear state\n      locationIds.length = 0;\n    }\n\n    getLocationIds(node);\n  };\n\n  var getLocationIds = function getLocationIds(node) {\n    var temp = _toConsumableArray(locationIds);\n\n    var index = temp.findIndex(function (id) {\n      return id === node.id;\n    });\n\n    if (index === -1) {\n      locationIds.push(node.id);\n    }\n\n    node.children.map(function (nodeChild) {\n      getLocationIds(nodeChild);\n    });\n  };\n\n  var getSalesOfficerListByLocation = function getSalesOfficerListByLocation(locationId, companyId) {\n    if (locationIds.length === 0) {\n      showError('Please Select Location');\n      return false;\n    }\n\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/auth/get-sales-officer-location/\").concat(locationId, \"/\").concat(companyId);\n    axios.get(URL).then(function (response) {\n      if (response.data.data != undefined) {\n        setSalesOfficerList(response.data.data);\n      } else {\n        setSalesOfficerList([]);\n        setSalesOfficerValue('');\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Sales Officer data.\");\n    });\n  };\n\n  var getAllDistributorList = function getAllDistributorList(userLoginId, locationId, companyId) {\n    if (locationIds.length === 0) {\n      showError('Please Select Location');\n      return false;\n    }\n\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/distributor/distributorList/\").concat(userLoginId, \"/\").concat(locationId, \"/\").concat(companyId); //API call from backend\n\n    axios.get(URL).then(function (response) {\n      //get data in response\n      if (response.data.data != undefined && response.data.data.length != 0) {\n        setDistributorList(response.data.data);\n      } else {\n        setDistributorList([]);\n        setDistributorValue('');\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Distributor data.\");\n    });\n  };\n\n  var handleChange = function handleChange(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    setInputs(function (values) {\n      return _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var validate = function validate() {\n    if (locationIds.length === 0) {\n      showError('Location is required');\n      return false;\n    } else if (!inputs.salesOfficerId) {\n      showError('Sales Officer is required');\n      return false;\n    } else if (!inputs.distributorId) {\n      showError('Distributor Name is required.');\n      return false;\n    } else if (!inputs.startDate) {\n      showError(\"Start date  is required\");\n      return false;\n    } else if (!inputs.endDate) {\n      showError(\"End date is required\");\n      return false;\n    } else if (inputs.endDate < inputs.startDate) {\n      showError(\"End Date should be greater than Start Date\");\n      return false;\n    } else if (!inputs.reportFormate) {\n      showError('Report Format is required');\n      return false;\n    }\n\n    return true;\n  };\n\n  var previewValidate = function previewValidate() {\n    if (locationIds.length === 0) {\n      showError('Location is required');\n      return false;\n    } else if (!inputs.salesOfficerId) {\n      showError('Sales Officer is required');\n      return false;\n    } else if (!inputs.distributorId) {\n      showError('Distributor Name is required.');\n      return false;\n    } else if (!inputs.startDate) {\n      showError(\"Start date  is required\");\n      return false;\n    } else if (!inputs.endDate) {\n      showError(\"End date is required\");\n      return false;\n    } else if (inputs.endDate < inputs.startDate) {\n      showError(\"End Date should be greater than Start Date\");\n      return false;\n    }\n\n    return true;\n  };\n\n  var download = function download() {\n    if (!validate()) {\n      return false;\n    }\n\n    var queryParams = '?locationId=' + inputs.locationId;\n    queryParams += '&reportFormate=' + inputs.reportFormate;\n    queryParams += '&companyId=' + selectedCompany;\n    queryParams += '&locationIds=' + locationIds;\n    queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n    queryParams += '&distributorId=' + inputs.distributorId;\n    queryParams += '&startDate=' + inputs.startDate;\n    queryParams += '&endDate=' + inputs.endDate;\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/report/debit-credit-note\") + queryParams;\n    axios.get(URL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      if (inputs.reportFormate === \"PDF\") {\n        var url = window.URL.createObjectURL(new Blob([response.data]));\n        var link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', \"DebitCreditNoteDistributorWiseReport.pdf\");\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        var _url = window.URL.createObjectURL(new Blob([response.data]));\n\n        var _link = document.createElement('a');\n\n        _link.href = _url;\n\n        _link.setAttribute('download', \"Debit_Credit_Note_Report.xlsx\");\n\n        document.body.appendChild(_link);\n\n        _link.click();\n\n        document.body.removeChild(_link);\n      }\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var preview = function preview() {\n    if (!previewValidate()) {\n      return false;\n    }\n\n    var queryParams = '?locationId=' + inputs.locationId;\n    queryParams += '&reportFormate=' + \"PDF\";\n    queryParams += '&companyId=' + selectedCompany;\n    queryParams += '&locationIds=' + locationIds;\n    queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n    queryParams += '&distributorId=' + inputs.distributorId;\n    queryParams += '&startDate=' + inputs.startDate;\n    queryParams += '&endDate=' + inputs.endDate;\n    var dataURL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/report/debit-credit-note\") + queryParams;\n    axios.get(dataURL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var file = new Blob([response.data], {\n        type: \"application/pdf\"\n      });\n      var fileURL = URL.createObjectURL(file);\n      var iframe = document.querySelector(\"iframe\");\n      if (iframe === null || iframe === void 0 ? void 0 : iframe.src) iframe.src = fileURL;\n      document.getElementById('reportShowIframe').style.display = \"inline-block\";\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MisReportBreadCrum, {\n    menuTitle: \"Debit Credit Note Report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-3\",\n    style: {\n      borderRight: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottom: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc3.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginLeft: \"10px\",\n      color: \"#828282\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 41\n    }\n  }, intl.formatMessage({\n    id: \"COMMON.LOCATION_ALL\"\n  })))), /*#__PURE__*/React.createElement(LocationTreeView, {\n    tree: locationTree,\n    selectLocationTreeNode: selectLocationTreeNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 45\n    }\n  }, \"Sales Officer\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 89\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 128\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    name: \"salesOfficerId\",\n    options: salesOfficerList,\n    onKeyDown: function onKeyDown(e) {\n      getSalesOfficerListByLocation(inputs.locationId, selectedCompany);\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.salesOfficerName;\n    },\n    value: salesOfficerValue,\n    onChange: function onChange(event, newValue) {\n      setSalesOfficerValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          salesOfficerId: newValue.id\n        }));\n      } else {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          salesOfficerId: ''\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Sales Officer*\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 53\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 72\n    }\n  }, \"Distributor\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 106\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(Autocomplete, {\n    name: \"distributorId\",\n    options: distributorList,\n    onKeyDown: function onKeyDown(e) {\n      getAllDistributorList(userLoginId, inputs.locationId, selectedCompany);\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.distributorName;\n    },\n    value: distributorValue,\n    onChange: function onChange(event, newValue) {\n      setDistributorValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          distributorId: newValue.distributorId\n        }));\n      } else {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          distributorId: ''\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Distributor*\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 49\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 41\n    }\n  }, \"Start Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 82\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"startDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"startDate\",\n    value: inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 41\n    }\n  }, \"End Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 80\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"endDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"endDate\",\n    value: inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    required: true,\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 76\n    }\n  }, \"Report Format\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 86\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"reportFormate\",\n    name: \"reportFormate\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 49\n    }\n  }, \"Select Report Format\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"PDF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 49\n    }\n  }, \"PDF\"))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: download,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 33\n    }\n  }, \"Download\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-5 mr-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 37\n    }\n  }, \"Preview\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    src: \"\",\n    className: \"w-100\",\n    id: \"reportShowIframe\",\n    height: \"500px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 29\n    }\n  }))))));\n}","map":{"version":3,"names":["React","useEffect","useState","toAbsoluteUrl","Card","CardBody","LocationTreeView","showError","axios","useIntl","shallowEqual","useSelector","Autocomplete","TextField","Button","moment","Flatpickr","MisReportBreadCrum","DebitCreditNoteReport","fields","locationId","salesOfficerId","distributorId","startDate","endDate","report","reportType","intl","inputs","setInputs","selectedCompany","state","auth","company","userLoginId","user","userId","locationTree","setLocationTree","locationIds","setLocationIds","salesOfficerList","setSalesOfficerList","salesOfficerValue","setSalesOfficerValue","distributorValue","setDistributorValue","distributorList","setDistributorList","showReport","setShowReport","reportData","setReportData","document","getElementById","style","display","getLocationTreeList","companyId","params","URL","process","env","REACT_APP_API_URL","get","then","response","data","catch","err","selectLocationTreeNode","node","id","getId","getElements","getElementsByClassName","i","length","classList","remove","add","getLocationIds","temp","index","findIndex","push","children","map","nodeChild","getSalesOfficerListByLocation","undefined","getAllDistributorList","handleChange","event","name","target","value","values","validate","reportFormate","previewValidate","download","queryParams","responseType","url","window","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","removeChild","preview","dataURL","file","type","fileURL","iframe","querySelector","src","borderRight","borderBottom","width","height","textAlign","marginLeft","color","formatMessage","marginTop","e","option","salesOfficerName","newValue","distributorName","format","dateFormat","Date"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/DebitCreditNoteReport.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {toAbsoluteUrl} from \"../../../../../_metronic/_helpers\";\nimport {Card, CardBody} from \"../../../../../_metronic/_partials/controls\";\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport {showError} from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport {useIntl} from \"react-intl\";\nimport {shallowEqual, useSelector} from \"react-redux\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {TextField} from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\n\n\nexport default function DebitCreditNoteReport() {\n\n    const fields = {\n        locationId: \"\",\n        salesOfficerId: \"\",\n        distributorId: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        report: \"\",\n        reportType: \"\"\n    };\n\n    const intl = useIntl();\n    const [inputs, setInputs] = useState(fields);\n    const selectedCompany = useSelector((state) => state.auth.company, shallowEqual);\n    const userLoginId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const [locationTree, setLocationTree] = useState([]);\n    const [locationIds, setLocationIds] = useState([]);\n    const [salesOfficerList, setSalesOfficerList] = useState([]);\n    const [salesOfficerValue, setSalesOfficerValue] = useState(null);\n    const [distributorValue, setDistributorValue] = useState(null);\n    const [distributorList, setDistributorList] = useState([]);\n    const [showReport, setShowReport] = useState('');\n    const [reportData, setReportData] = useState([]);\n\n    useEffect(() => {\n        document.getElementById('reportShowIframe').style.display = \"none\";\n        getLocationTreeList({userLoginId: userLoginId, companyId: selectedCompany});\n    }, [userLoginId, selectedCompany]);\n\n    const getLocationTreeList = (params) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/location-tree/locationTree/${params.userLoginId}/${params.companyId}`;\n        axios.get(URL).then(response => {\n            const locationTree = response.data.data;\n            setLocationTree(locationTree);\n        }).catch(err => {\n            showError(\"Cannot get Location Tree data.\");\n        });\n    }\n\n    const selectLocationTreeNode = (node) => {\n        let id = \"summary-id-\" + node.id;\n        const getId = document.getElementById(id);\n        const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n        for (let i = 0; i < getElements.length; i++) {\n            getElements[i].classList.remove('tree-nav-item');\n        }\n        if (getId) {\n            getId.classList.add('tree-nav-item');\n            setInputs({...inputs, \"locationId\": node.id})\n        }\n        if (locationIds.length !== 0) { // for clear state\n            locationIds.length = 0;\n        }\n        getLocationIds(node);\n    }\n\n    const getLocationIds = (node) => {\n        let temp = [...locationIds]\n        let index = temp.findIndex(id => id === node.id)\n        if (index === -1) {\n            locationIds.push(node.id)\n        }\n        node.children.map(nodeChild => {\n            getLocationIds(nodeChild)\n        })\n    }\n\n    const getSalesOfficerListByLocation = (locationId, companyId) => {\n        if (locationIds.length === 0) {\n            showError('Please Select Location');\n            return false;\n        }\n\n        const URL = `${process.env.REACT_APP_API_URL}/auth/get-sales-officer-location/${locationId}/${companyId}`;\n        axios.get(URL).then(response => {\n            if (response.data.data != undefined) {\n                setSalesOfficerList(response.data.data);\n            } else {\n                setSalesOfficerList([]);\n                setSalesOfficerValue('');\n            }\n        }).catch(err => {\n            showError(\"Cannot get Sales Officer data.\");\n        });\n    }\n\n    const getAllDistributorList = (userLoginId, locationId, companyId) => {\n        if (locationIds.length === 0) {\n            showError('Please Select Location');\n            return false;\n        }\n        const URL = `${process.env.REACT_APP_API_URL}/api/distributor/distributorList/${userLoginId}/${locationId}/${companyId}`;//API call from backend\n        axios.get(URL).then(response => {//get data in response\n            if (response.data.data != undefined && response.data.data.length != 0) {\n                setDistributorList(response.data.data);\n            } else {\n                setDistributorList([]);\n                setDistributorValue('');\n            }\n        }).catch(err => {\n            showError(\"Cannot get Distributor data.\");\n        });\n    }\n\n    const handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setInputs(values => ({...values, [name]: value}))\n    }\n\n    const validate = () => {\n        if (locationIds.length === 0) {\n            showError('Location is required');\n            return false;\n        } else if (!inputs.salesOfficerId) {\n            showError('Sales Officer is required');\n            return false;\n        } else if (!inputs.distributorId) {\n            showError('Distributor Name is required.');\n            return false;\n        } else if (!inputs.startDate) {\n            showError(\"Start date  is required\");\n            return false;\n        } else if (!inputs.endDate) {\n            showError(\"End date is required\");\n            return false;\n        } else if (inputs.endDate < inputs.startDate) {\n            showError(\"End Date should be greater than Start Date\");\n            return false;\n        } else if (!inputs.reportFormate) {\n            showError('Report Format is required');\n            return false;\n        }\n        return true;\n    }\n    const previewValidate = () => {\n        if (locationIds.length === 0) {\n            showError('Location is required');\n            return false;\n        } else if (!inputs.salesOfficerId) {\n            showError('Sales Officer is required');\n            return false;\n        } else if (!inputs.distributorId) {\n            showError('Distributor Name is required.');\n            return false;\n        } else if (!inputs.startDate) {\n            showError(\"Start date  is required\");\n            return false;\n        } else if (!inputs.endDate) {\n            showError(\"End date is required\");\n            return false;\n        } else if (inputs.endDate < inputs.startDate) {\n            showError(\"End Date should be greater than Start Date\");\n            return false;\n        } \n        return true;\n    }\n    const download = () => {\n        if (!validate()) {\n            return false;\n        }\n        let queryParams = '?locationId=' + inputs.locationId;\n        queryParams += '&reportFormate=' + inputs.reportFormate;\n        queryParams += '&companyId=' + selectedCompany;\n        queryParams += '&locationIds=' + locationIds;\n        queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n        queryParams += '&distributorId=' + inputs.distributorId;\n        queryParams += '&startDate=' + inputs.startDate;\n        queryParams += '&endDate=' + inputs.endDate;\n\n        const URL = `${process.env.REACT_APP_API_URL}/api/report/debit-credit-note` + queryParams;\n        axios.get(URL, {responseType: 'blob'}).then(response => {\n            if (inputs.reportFormate === \"PDF\") {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', \"DebitCreditNoteDistributorWiseReport.pdf\");\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            } else {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', \"Debit_Credit_Note_Report.xlsx\");\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            }\n        }).catch(err => {\n            showError();\n        });\n    }\n    const preview = () => {\n        if (!previewValidate()) {\n            return false;\n        }\n        let queryParams = '?locationId=' + inputs.locationId;\n        queryParams += '&reportFormate=' + \"PDF\";\n        queryParams += '&companyId=' + selectedCompany;\n        queryParams += '&locationIds=' + locationIds;\n        queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n        queryParams += '&distributorId=' + inputs.distributorId;\n        queryParams += '&startDate=' + inputs.startDate;\n        queryParams += '&endDate=' + inputs.endDate;\n\n        const dataURL = `${process.env.REACT_APP_API_URL}/api/report/debit-credit-note` + queryParams;\n        axios.get(dataURL, {responseType: 'blob'}).then(response => {\n            const file = new Blob([response.data], { type: \"application/pdf\" });\n            const fileURL = URL.createObjectURL(file);\n            const iframe = document.querySelector(\"iframe\");\n            if (iframe?.src) iframe.src = fileURL;\n            document.getElementById('reportShowIframe').style.display = \"inline-block\";\n        }).catch(err => {\n            showError();\n        });\n    }\n\n    return (\n        <>\n            <div>\n                <MisReportBreadCrum menuTitle=\"Debit Credit Note Report\"/>\n            </div>\n            <div>\n\n            </div>\n            <div>\n                <Card>\n                    <CardBody>\n                        <div className='row'>\n                            {/* LEFT SIDE TREE ROW */}\n                            <div className='col-xl-3' style={{borderRight: \"1px solid #F2F2F2\"}}>\n                                <div style={{borderBottom: \"1px solid #F2F2F2\"}}>\n                                    <label>\n                                        <img src={toAbsoluteUrl(\"/images/loc3.png\")}\n                                             style={{width: \"20px\", height: \"20px\", textAlign: \"center\"}}\n                                             alt='Company Picture'/>\n                                        <strong style={{\n                                            marginLeft: \"10px\",\n                                            color: \"#828282\"\n                                        }}>{intl.formatMessage({id: \"COMMON.LOCATION_ALL\"})}</strong>\n                                    </label>\n                                </div>\n                                {/* TREE */}\n                                <LocationTreeView tree={locationTree} selectLocationTreeNode={selectLocationTreeNode}/>\n                            </div>\n                            {/* RIGHT SIDE LIST ROW */}\n                            <div className='col-xl-9'>\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <div style={{marginTop: \"5px\"}}>\n                                            <label className='level-title'>Sales Officer<i style={{color: \"red\"}}>*</i></label><br/>\n                                            <Autocomplete\n                                                name=\"salesOfficerId\"\n                                                options={salesOfficerList}\n                                                onKeyDown={e => {\n                                                    getSalesOfficerListByLocation(inputs.locationId, selectedCompany)\n                                                }}\n                                                getOptionLabel={(option) => option.salesOfficerName}\n                                                value={salesOfficerValue}\n                                                onChange={(event, newValue) => {\n                                                    setSalesOfficerValue(newValue)\n                                                    if (newValue !== null) {\n                                                        setInputs({...inputs, salesOfficerId: newValue.id});\n                                                    } else {\n                                                        setInputs({...inputs, salesOfficerId: ''});\n                                                    }\n                                                }}\n                                                renderInput={(params) => (\n                                                    <TextField {...params} label=\"Select Sales Officer*\"/>\n                                                )}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <label className='level-title'><span className=\"mr-1\">Distributor<i\n                                            style={{color: \"red\"}}>*</i></span></label>\n                                        <Autocomplete\n                                            name=\"distributorId\"\n                                            options={distributorList}\n                                            onKeyDown={e => {\n                                                getAllDistributorList(userLoginId, inputs.locationId, selectedCompany)\n                                            }}\n                                            getOptionLabel={(option) => option.distributorName}\n                                            value={distributorValue}\n                                            onChange={(event, newValue) => {\n                                                setDistributorValue(newValue)\n                                                if (newValue !== null) {\n                                                    setInputs({...inputs, distributorId: newValue.distributorId});\n                                                } else {\n                                                    setInputs({...inputs, distributorId: ''});\n                                                }\n                                            }}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Select Distributor*\"/>\n                                            )}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>Start Date<i style={{color: \"red\"}}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"startDate\" placeholder=\"dd-MM-yy\"\n                                                   name='startDate'\n                                                   value={inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                                   options={{dateFormat: \"d-M-Y\"}}\n                                                   onChange={(value) => {\n                                                       setInputs({\n                                                           ...inputs,\n                                                           \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                       })\n                                                   }}\n                                        />\n                                    </div>\n                                </div>\n\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>End Date<i style={{color: \"red\"}}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"endDate\" placeholder=\"dd-MM-yy\"\n                                                   name='endDate'\n                                                   value={inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                                   options={{dateFormat: \"d-M-Y\"}} required\n                                                   onChange={(value) => {\n                                                       setInputs({\n                                                           ...inputs,\n                                                           \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                       })\n                                                   }}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span\n                                                className=\"mr-1\">Report Format</span><span\n                                                className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportFormate\" name=\"reportFormate\"\n                                                    onChange={(e) => handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report Format</option>\n                                                <option value=\"PDF\">PDF</option>\n                                                {/*<option value=\"EXCEL\">EXCEL</option>*/}\n\n                                                {/* {\n                                                allReport.map((report)=>(\n                                                <option key={report.id} value={report.id}>\n                                                    {report.name}\n                                                </option> \n                                                ))\n                                            }    */}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <Button className=\"float-right mt-5\" id=\"gotItBtn\" variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={download}\n                                >\n                                    Download\n                                </Button>\n                                <div className=\"float-right\">\n                                    <Button className=\"mt-5 mr-5\" id=\"gotItBtn\" variant=\"contained\" color=\"primary\"\n                                        onClick={preview}>Preview\n                                    </Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='mt-5'>\n                            <iframe src=\"\" className='w-100' id=\"reportShowIframe\" height=\"500px\" />\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}