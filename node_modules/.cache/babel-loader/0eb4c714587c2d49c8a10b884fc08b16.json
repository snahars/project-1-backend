{"ast":null,"code":"import _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/inventory/OrderToCashCycle.js\";\nimport React, { useEffect, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IOSSwitch from '../../../../pages/IOSSwitch'; // IMPORT COMMON COMPONENT FILE\n\nimport ReportLocationTreeView from '../../../Common/ReportLocationTreeView';\nimport SalesOfficeList from \"../../../Common/SalesOfficeList\";\nimport DistributorList from \"../../../Common/DistributorList\";\nimport CommonDateComponent from '../../../Common/CommonDateComponent';\nimport CommonReportType from \"../../../Common/CommonReportType\";\nimport CommonReportFormat from \"../../../Common/CommonReportFormat\";\nexport default function OrderToCashCycle() {\n  var fields = {\n    locationId: \"\",\n    salesOfficerId: \"\",\n    distributorId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    report: \"\",\n    reportType: \"\"\n  };\n  var intl = useIntl();\n  var companyId = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n\n  var _useState = useState(fields),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1]; // NATIONAL BUTTON STATE\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nationalLocationChecked = _useState4[0],\n      setNationalLocationChecked = _useState4[1]; // SALES OFFICER COMPONENT USE STATE\n\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      salesOfficer = _useState6[0],\n      setSalesOfficer = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      salesOfficerList = _useState8[0],\n      setSalesOfficerList = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      salesOfficerIds = _useState10[0],\n      setSalesOfficerIds = _useState10[1]; // DISTRIBUTOR COMPONENT USE STATE\n\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      distributors = _useState12[0],\n      setDistributors = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      distributorList = _useState14[0],\n      setDistributorList = _useState14[1]; // DEPOT COMPONENT USE STATE\n\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      depots = _useState16[0],\n      setDepots = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      depotList = _useState18[0],\n      setDepotList = _useState18[1]; // LOCATION TREE COMPONENT USE STATE\n\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      nodes = _useState20[0],\n      setNodes = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      categoryLevel = _useState22[0],\n      setCategoryLevel = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      locationTree = _useState24[0],\n      setLocationTree = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      locationIds = _useState26[0],\n      setLocationIds = _useState26[1]; // DATE COMPONENT USE STATE\n\n\n  var _useState27 = useState({}),\n      _useState28 = _slicedToArray(_useState27, 2),\n      inputsDate = _useState28[0],\n      setInputsDate = _useState28[1];\n\n  var _useState29 = useState(\"Date\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      dateType = _useState30[0],\n      setDateType = _useState30[1]; // REPORT TYPE COMPONENT USE STATE\n\n\n  var _useState31 = useState(\"\"),\n      _useState32 = _slicedToArray(_useState31, 2),\n      reportType = _useState32[0],\n      setReportType = _useState32[1]; // REPORT FORMATE COMPONENT USE STATE\n\n\n  var _useState33 = useState(\"\"),\n      _useState34 = _slicedToArray(_useState33, 2),\n      reportFormate = _useState34[0],\n      setReportFormate = _useState34[1];\n\n  useEffect(function () {\n    document.getElementById('reportShowIframe').style.display = \"none\";\n    getLocationTreeList(companyId);\n  }, [companyId]);\n  useEffect(function () {\n    getSalesOfficerIds(salesOfficer, salesOfficerList);\n  }, [salesOfficer, salesOfficerList]);\n  useEffect(function () {\n    nodes.map(function (node) {\n      getLocationIds(node); //getLocationIdsWithLevel(node)\n    });\n  }, [nodes]);\n\n  var getSalesOfficerIds = function getSalesOfficerIds(salesOfficer, salesOfficerList) {\n    salesOfficerIds.length = 0;\n\n    if (salesOfficerList.length > 0) {\n      salesOfficerList.map(function (data) {\n        var temp = _toConsumableArray(salesOfficerIds);\n\n        var index = temp.findIndex(function (id) {\n          return id === data.id;\n        });\n\n        if (index === -1) {\n          setSalesOfficerIds(function (current) {\n            return [].concat(_toConsumableArray(current), [data.id]);\n          });\n        }\n      });\n    } else {\n      salesOfficer.map(function (data) {\n        var temp = _toConsumableArray(salesOfficerIds);\n\n        var index = temp.findIndex(function (id) {\n          return id === data.id;\n        });\n\n        if (index === -1) {\n          setSalesOfficerIds(function (current) {\n            return [].concat(_toConsumableArray(current), [data.id]);\n          });\n        }\n      });\n    }\n  };\n\n  var getLocationIds = function getLocationIds(node) {\n    var temp = _toConsumableArray(locationIds);\n\n    var index = temp.findIndex(function (id) {\n      return id === node.id;\n    });\n\n    if (index === -1) {\n      setLocationIds(function (current) {\n        return [].concat(_toConsumableArray(current), [node.id]);\n      });\n    }\n\n    node.children.map(function (nodeChild) {\n      getLocationIds(nodeChild);\n    });\n  };\n\n  var getLocationTreeList = function getLocationTreeList(companyId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/location-tree/report-location-tree-info/\").concat(companyId);\n    axios.get(URL).then(function (response) {\n      var locationTree = response.data.data.locationAsTree;\n      setLocationTree(locationTree);\n    }).catch(function (err) {\n      showError(\"Cannot get Location Tree data.\");\n    });\n  };\n\n  var selectLocationTreeNode = function selectLocationTreeNode(node) {\n    locationIds.length = 0;\n\n    var temp = _toConsumableArray(nodes);\n\n    var index = temp.findIndex(function (data) {\n      return data.treeLevel == node.treeLevel;\n    });\n\n    if (index > -1) {\n      temp.splice(index, 1);\n      setNodes(temp);\n    } else {\n      temp.push(node);\n      setNodes(temp);\n    }\n\n    if (categoryLevel != \"\") {\n      setCategoryLevel(node.treeLevel);\n\n      if (categoryLevel.split('-').length == node.treeLevel.split('-').length) {\n        var id = \"report-location-tree-view-id-\" + node.id;\n        var getId = document.getElementById(id);\n\n        if (getId.className == \"d-flex justify-content-between tree-nav__item_demo tree-nav__item-title report-location-tree-selected\") {\n          getId.classList.remove('report-location-tree-selected');\n          salesOfficer.length = 0;\n          distributors.length = 0;\n          depots.length = 0;\n        } else {\n          getId.classList.add('report-location-tree-selected');\n          setNationalLocationChecked(false);\n        }\n      } else {\n        var _id = \"report-location-tree-view-id-\" + node.id;\n\n        var _getId = document.getElementById(_id);\n\n        var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n        for (var i = 0; i < getElements.length; i++) {\n          getElements[i].classList.remove('report-location-tree-selected');\n          salesOfficer.length = 0;\n          distributors.length = 0;\n          depots.length = 0;\n        }\n\n        if (_getId) {\n          _getId.classList.add('report-location-tree-selected');\n\n          setNationalLocationChecked(false);\n        }\n      }\n    } else {\n      setCategoryLevel(node.treeLevel);\n\n      var _id2 = \"report-location-tree-view-id-\" + node.id;\n\n      var _getId2 = document.getElementById(_id2);\n\n      if (_getId2.className == \"d-flex justify-content-between tree-nav__item_demo tree-nav__item-title report-location-tree-selected\") {\n        _getId2.classList.remove('report-location-tree-selected');\n\n        salesOfficer.length = 0;\n        distributors.length = 0;\n        depots.length = 0;\n      } else {\n        _getId2.classList.add('report-location-tree-selected');\n\n        setNationalLocationChecked(false);\n      }\n    }\n  };\n\n  var handleActive = function handleActive() {\n    salesOfficerList.length = 0;\n    distributorList.length = 0;\n    distributors.length = 0;\n    depots.length = 0;\n    depotList.length = 0;\n    var checked = document.getElementById('nationalId').checked;\n    setNationalLocationChecked(checked);\n\n    if (checked) {\n      nodes.length = 0;\n      locationIds.length = 0;\n      var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n      for (var i = 0; i < getElements.length; i++) {\n        getElements[i].classList.remove('report-location-tree-selected');\n      }\n    }\n  };\n\n  var getParamsDate = function getParamsDate() {\n    var startDate = '';\n    var endDate = '';\n\n    if (dateType === 'Date') {\n      startDate = inputsDate.startDate === undefined || inputsDate.startDate === null || inputsDate.startDate === '' ? '' : inputsDate.startDate; // 2023-03-01  yyyy-mm-dd\n\n      endDate = inputsDate.endDate === undefined || inputsDate.endDate === null || inputsDate.endDate === '' ? '' : inputsDate.endDate; // 2023-03-01  yyyy-mm-dd\n    } else if (dateType === 'Month') {\n      startDate = inputsDate.startMonth === undefined || inputsDate.startMonth === null || inputsDate.startMonth === '' ? '' : inputsDate.startMonth + '-01';\n      endDate = inputsDate.endMonth === undefined || inputsDate.endMonth === null || inputsDate.endMonth === '' ? '' : inputsDate.endMonth + '-' + moment(inputsDate.endMonth, \"YYYY-MM\").daysInMonth();\n    } else if (dateType === 'Year') {\n      startDate = inputsDate.fromYear === undefined || inputsDate.fromYear === null || inputsDate.fromYear === '' ? '' : inputsDate.fromYear + '-01-01';\n      endDate = inputsDate.toYear === undefined || inputsDate.toYear === null || inputsDate.toYear === '' ? '' : inputsDate.toYear + '-12-31';\n    }\n\n    return {\n      startDate: startDate,\n      endDate: endDate\n    };\n  };\n\n  var validate = function validate() {\n    var dates = getParamsDate();\n    var startDate = dates.startDate;\n    var endDate = dates.endDate;\n\n    if (nationalLocationChecked === false) {\n      if (locationIds.length === 0) {\n        showError('Please Select Location.');\n        return false;\n      }\n    } else if (endDate < startDate) {\n      showError(\"End \".concat(dateType, \" should be greater than Start \").concat(dateType, \".\"));\n      return false;\n    } else if (reportType === '') {\n      showError('Please Select Report Type.');\n      return false;\n    } else if (reportFormate === '') {\n      showError('Please Select Report Formate.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var download = function download() {\n    if (!validate()) {\n      return false;\n    }\n\n    var dates = getParamsDate();\n    var startDate = dates.startDate;\n    var endDate = dates.endDate;\n    var soList = [];\n    salesOfficerList.map(function (s) {\n      return soList.push(s.id);\n    });\n    soList.sort(function (a, b) {\n      return a - b;\n    });\n    var distributorIds = [];\n    distributorList.map(function (d) {\n      return distributorIds.push(d.id);\n    });\n    distributorIds.sort(function (a, b) {\n      return a - b;\n    });\n    var queryParams = '?nationalLocationChecked=' + nationalLocationChecked;\n    queryParams += '&locationTypeLevel=' + (nodes.length > 0 ? nodes[0].locationTypeLevel : 0);\n    queryParams += '&reportFormat=' + reportFormate;\n    queryParams += '&companyId=' + companyId;\n    queryParams += '&locationIds=' + locationIds;\n    queryParams += '&soIds=' + soList.join(',');\n    queryParams += '&disIds=' + distributorIds.join(',');\n    queryParams += '&startDate=' + startDate;\n    queryParams += '&endDate=' + endDate;\n    queryParams += '&reportType=' + reportType; // let queryParams = '?locationId=' + inputs.locationId;\n    // queryParams += '&reportFormate=' + inputs.reportFormate;\n    // queryParams += '&companyId=' + companyId;\n    // queryParams += '&locationIds=' + locationIds;\n    // queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n    // queryParams += '&distributorId=' + inputs.distributorId;\n    // queryParams += '&startDate=' + inputs.startDate;\n    // queryParams += '&endDate=' + inputs.endDate;\n    // queryParams += '&reportType=' + inputs.reportType;\n    // const URL = `${process.env.REACT_APP_API_URL}/api/report/order-to-cash-cycle` + queryParams;\n    // axios.get(URL, { responseType: 'blob' }).then(response => {\n    //     if (inputs.reportFormate === \"PDF\") {\n    //         const url = window.URL.createObjectURL(new Blob([response.data]));\n    //         const link = document.createElement('a');\n    //         link.href = url;\n    //         link.setAttribute('download', \"OrderToCashCycleInvoice.pdf\");\n    //         document.body.appendChild(link);\n    //         link.click();\n    //         document.body.removeChild(link);\n    //     } else {\n    //         const url = window.URL.createObjectURL(new Blob([response.data]));\n    //         const link = document.createElement('a');\n    //         link.href = url;\n    //         link.setAttribute('download', \"OrderToCashCycleInvoice.xlsx\");\n    //         document.body.appendChild(link);\n    //         link.click();\n    //         document.body.removeChild(link);\n    //     }\n    // }).catch(err => {\n    //     showError();\n    // });\n  };\n\n  var previewValidate = function previewValidate() {\n    var dates = getParamsDate();\n    var startDate = dates.startDate;\n    var endDate = dates.endDate;\n\n    if (nationalLocationChecked === false) {\n      if (locationIds.length === 0) {\n        showError('Please Select Location.');\n        return false;\n      }\n    } else if (endDate < startDate) {\n      showError(\"End \".concat(dateType, \" should be greater than Start \").concat(dateType, \".\"));\n      return false;\n    } else if (reportType === '') {\n      showError('Please Select Report Type.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var preview = function preview() {\n    if (!previewValidate()) {\n      return false;\n    }\n\n    var dates = getParamsDate();\n    var startDate = dates.startDate;\n    var endDate = dates.endDate;\n    var soList = [];\n    salesOfficerList.map(function (s) {\n      return soList.push(s.id);\n    });\n    soList.sort(function (a, b) {\n      return a - b;\n    });\n    var distributorIds = [];\n    distributorList.map(function (d) {\n      return distributorIds.push(d.id);\n    });\n    distributorIds.sort(function (a, b) {\n      return a - b;\n    });\n    var queryParams = '?nationalLocationChecked=' + nationalLocationChecked;\n    queryParams += '&locationTypeLevel=' + (nodes.length > 0 ? nodes[0].locationTypeLevel : 0);\n    queryParams += '&reportFormat=' + \"PDF\";\n    queryParams += '&companyId=' + companyId;\n    queryParams += '&locationIds=' + locationIds;\n    queryParams += '&soIds=' + soList.join(',');\n    queryParams += '&disIds=' + distributorIds.join(',');\n    queryParams += '&startDate=' + startDate;\n    queryParams += '&endDate=' + endDate;\n    queryParams += '&reportType=' + reportType; // let queryParams = '?locationId=' + inputs.locationId;\n    // queryParams += '&reportFormate=' + \"PDF\";\n    // queryParams += '&companyId=' + companyId;\n    // queryParams += '&locationIds=' + locationIds;\n    // queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n    // queryParams += '&distributorId=' + inputs.distributorId;\n    // queryParams += '&startDate=' + inputs.startDate;\n    // queryParams += '&endDate=' + inputs.endDate;\n    // queryParams += '&reportType=' + inputs.reportType;\n    // const data = `${process.env.REACT_APP_API_URL}/api/report/order-to-cash-cycle` + queryParams;\n    // axios.get(data, { responseType: 'blob' }).then(response => {\n    //     const file = new Blob([response.data], { type: \"application/pdf\" });\n    //     const fileURL = URL.createObjectURL(file);\n    //     const iframe = document.querySelector(\"iframe\");\n    //     if (iframe?.src) iframe.src = fileURL;\n    //     document.getElementById('reportShowIframe').style.display = \"inline-block\";\n    // }).catch(err => {\n    //     showError();\n    // });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MisReportBreadCrum, {\n    menuTitle: \"Order To Cash Cycle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-5\",\n    style: {\n      borderRight: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottom: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc3.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginLeft: \"10px\",\n      color: \"#828282\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 41\n    }\n  }, intl.formatMessage({\n    id: \"COMMON.LOCATION_ALL\"\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(IOSSwitch, {\n      id: \"nationalId\",\n      checked: nationalLocationChecked,\n      onClick: handleActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 50\n      }\n    }),\n    label: \"National\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(ReportLocationTreeView, {\n    tree: locationTree,\n    selectLocationTreeNode: selectLocationTreeNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SalesOfficeList, {\n    companyIdPass: companyId,\n    locationsIdsPass: locationIds,\n    setSalesOfficerListPass: setSalesOfficerList,\n    salesOfficerListPass: salesOfficerList,\n    salesOfficer: salesOfficer,\n    setSalesOfficer: setSalesOfficer,\n    nationalLocationChecked: nationalLocationChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(DistributorList, {\n    companyIdPass: companyId,\n    salesOfficerIdsPass: salesOfficerIds,\n    setDistributorListPass: setDistributorList,\n    distributorListPass: distributorList,\n    distributors: distributors,\n    setDistributors: setDistributors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(CommonDateComponent, {\n    inputs: inputsDate,\n    setInputs: setInputsDate,\n    type: dateType,\n    setType: setDateType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(CommonReportType, {\n    setReportType: setReportType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(CommonReportFormat, {\n    setReportFormate: setReportFormate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: download,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 33\n    }\n  }, \"Download\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-5 mr-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 37\n    }\n  }, \"Preview\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 25\n    }\n  }, \"''\", /*#__PURE__*/React.createElement(\"iframe\", {\n    src: \"\",\n    className: \"w-100\",\n    id: \"reportShowIframe\",\n    height: \"500px\",\n    title: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 29\n    }\n  }))))));\n}","map":{"version":3,"names":["React","useEffect","useState","toAbsoluteUrl","Card","CardBody","LocationTreeView","showError","axios","useIntl","shallowEqual","useSelector","MisReportBreadCrum","Autocomplete","TextField","Button","moment","Flatpickr","FormControlLabel","IOSSwitch","ReportLocationTreeView","SalesOfficeList","DistributorList","CommonDateComponent","CommonReportType","CommonReportFormat","OrderToCashCycle","fields","locationId","salesOfficerId","distributorId","startDate","endDate","report","reportType","intl","companyId","state","auth","company","inputs","setInputs","nationalLocationChecked","setNationalLocationChecked","salesOfficer","setSalesOfficer","salesOfficerList","setSalesOfficerList","salesOfficerIds","setSalesOfficerIds","distributors","setDistributors","distributorList","setDistributorList","depots","setDepots","depotList","setDepotList","nodes","setNodes","categoryLevel","setCategoryLevel","locationTree","setLocationTree","locationIds","setLocationIds","inputsDate","setInputsDate","dateType","setDateType","setReportType","reportFormate","setReportFormate","document","getElementById","style","display","getLocationTreeList","getSalesOfficerIds","map","node","getLocationIds","length","data","temp","index","findIndex","id","current","children","nodeChild","URL","process","env","REACT_APP_API_URL","get","then","response","locationAsTree","catch","err","selectLocationTreeNode","treeLevel","splice","push","split","getId","className","classList","remove","add","getElements","getElementsByClassName","i","handleActive","checked","getParamsDate","undefined","startMonth","endMonth","daysInMonth","fromYear","toYear","validate","dates","download","soList","s","sort","a","b","distributorIds","d","queryParams","locationTypeLevel","join","previewValidate","preview","borderRight","borderBottom","width","height","textAlign","marginLeft","color","formatMessage"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/inventory/OrderToCashCycle.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IOSSwitch from '../../../../pages/IOSSwitch';\n\n// IMPORT COMMON COMPONENT FILE\nimport ReportLocationTreeView from '../../../Common/ReportLocationTreeView';\nimport SalesOfficeList from \"../../../Common/SalesOfficeList\";\nimport DistributorList from \"../../../Common/DistributorList\";\nimport CommonDateComponent from '../../../Common/CommonDateComponent';\nimport CommonReportType from \"../../../Common/CommonReportType\";\nimport CommonReportFormat from \"../../../Common/CommonReportFormat\";\n\nexport default function OrderToCashCycle() {\n    const fields = {\n        locationId: \"\",\n        salesOfficerId: \"\",\n        distributorId: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        report: \"\",\n        reportType: \"\"\n    };\n    const intl = useIntl();\n    const companyId = useSelector((state) => state.auth.company, shallowEqual);\n    const [inputs, setInputs] = useState(fields);\n    \n    // NATIONAL BUTTON STATE\n    const [nationalLocationChecked, setNationalLocationChecked] = useState(false);\n\n    // SALES OFFICER COMPONENT USE STATE\n    const [salesOfficer, setSalesOfficer] = useState([]);\n    const [salesOfficerList, setSalesOfficerList] = useState([]);\n    const [salesOfficerIds, setSalesOfficerIds] = useState([]);\n\n    // DISTRIBUTOR COMPONENT USE STATE\n    const [distributors, setDistributors] = useState([]);\n    const [distributorList, setDistributorList] = useState([]);\n\n    // DEPOT COMPONENT USE STATE\n    const [depots, setDepots] = useState([]);\n    const [depotList, setDepotList] = useState([]);\n\n    // LOCATION TREE COMPONENT USE STATE\n    const [nodes, setNodes] = useState([]);\n    const [categoryLevel, setCategoryLevel] = useState(\"\");\n    const [locationTree, setLocationTree] = useState([]);\n    const [locationIds, setLocationIds] = useState([]);\n\n    // DATE COMPONENT USE STATE\n    const [inputsDate, setInputsDate] = useState({});\n    const [dateType, setDateType] = useState(\"Date\");\n\n    // REPORT TYPE COMPONENT USE STATE\n    const [reportType, setReportType] = useState(\"\");\n\n    // REPORT FORMATE COMPONENT USE STATE\n    const [reportFormate, setReportFormate] = useState(\"\");\n\n    useEffect(() => {\n        document.getElementById('reportShowIframe').style.display = \"none\";\n        getLocationTreeList(companyId)\n    }, [companyId]);\n\n    useEffect(() => {\n        getSalesOfficerIds(salesOfficer, salesOfficerList)\n    }, [salesOfficer, salesOfficerList]);\n\n    useEffect(() => {\n        nodes.map(node => {\n            getLocationIds(node)\n            //getLocationIdsWithLevel(node)\n        })\n    }, [nodes]);\n\n    const getSalesOfficerIds = (salesOfficer, salesOfficerList) => {\n        salesOfficerIds.length = 0;\n\n        if (salesOfficerList.length > 0) {\n            salesOfficerList.map((data) => {\n                let temp = [...salesOfficerIds]\n                let index = temp.findIndex(id => id === data.id)\n                if (index === -1) {\n                    setSalesOfficerIds(current => [...current, data.id]);\n                }\n            })\n        } else {\n            salesOfficer.map((data) => {\n                let temp = [...salesOfficerIds]\n                let index = temp.findIndex(id => id === data.id)\n                if (index === -1) {\n                    setSalesOfficerIds(current => [...current, data.id]);\n                }\n            })\n        }\n\n    }\n\n    const getLocationIds = (node) => {\n        let temp = [...locationIds]\n        let index = temp.findIndex(id => id === node.id)\n        if (index === -1) {\n            setLocationIds(current => [...current, node.id]);\n        }\n        node.children.map(nodeChild => {\n            getLocationIds(nodeChild)\n        })\n    }\n\n    const getLocationTreeList = (companyId) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/location-tree/report-location-tree-info/${companyId}`;\n        axios.get(URL).then(response => {\n            const locationTree = response.data.data.locationAsTree;\n            setLocationTree(locationTree);\n        }).catch(err => {\n            showError(\"Cannot get Location Tree data.\");\n        });\n    }\n\n    const selectLocationTreeNode = (node) => {\n        locationIds.length = 0;\n        let temp = [...nodes]\n        let index = temp.findIndex(data => data.treeLevel == node.treeLevel)\n        if (index > -1) {\n            temp.splice(index, 1);\n            setNodes(temp)\n        } else {\n            temp.push(node)\n            setNodes(temp)\n        }\n        if (categoryLevel != \"\") {\n            setCategoryLevel(node.treeLevel)\n            if (categoryLevel.split('-').length == node.treeLevel.split('-').length) {\n                let id = \"report-location-tree-view-id-\" + node.id;\n                const getId = document.getElementById(id);\n                if (getId.className == \"d-flex justify-content-between tree-nav__item_demo tree-nav__item-title report-location-tree-selected\") {\n                    getId.classList.remove('report-location-tree-selected');\n                    salesOfficer.length = 0;\n                    distributors.length = 0;\n                    depots.length = 0;\n                } else {\n                    getId.classList.add('report-location-tree-selected');\n                    setNationalLocationChecked(false)\n                }\n            } else {\n                let id = \"report-location-tree-view-id-\" + node.id;\n                const getId = document.getElementById(id);\n                const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n                for (var i = 0; i < getElements.length; i++) {\n                    getElements[i].classList.remove('report-location-tree-selected');\n                    salesOfficer.length = 0;\n                    distributors.length = 0;\n                    depots.length = 0;\n                }\n                if (getId) {\n                    getId.classList.add('report-location-tree-selected');\n                    setNationalLocationChecked(false)\n                }\n            }\n\n        } else {\n            setCategoryLevel(node.treeLevel)\n            let id = \"report-location-tree-view-id-\" + node.id;\n            const getId = document.getElementById(id);\n            if (getId.className == \"d-flex justify-content-between tree-nav__item_demo tree-nav__item-title report-location-tree-selected\") {\n                getId.classList.remove('report-location-tree-selected');\n                salesOfficer.length = 0;\n                distributors.length = 0;\n                depots.length = 0;\n            } else {\n                getId.classList.add('report-location-tree-selected');\n                setNationalLocationChecked(false)\n            }\n        }\n    }\n\n    const handleActive = () => {\n        salesOfficerList.length = 0;\n        distributorList.length = 0;\n        distributors.length = 0;\n        depots.length = 0;\n        depotList.length = 0;\n        let checked = document.getElementById('nationalId').checked;\n        setNationalLocationChecked(checked)\n        if (checked) {\n            nodes.length = 0;\n            locationIds.length = 0;\n            const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n            for (let i = 0; i < getElements.length; i++) {\n                getElements[i].classList.remove('report-location-tree-selected');\n            }\n        }\n    }\n\n    const getParamsDate = () => {\n        let startDate = '';\n        let endDate = '';\n        if (dateType === 'Date') {\n            startDate = inputsDate.startDate === undefined || inputsDate.startDate === null || inputsDate.startDate === '' ? '' : inputsDate.startDate;   // 2023-03-01  yyyy-mm-dd\n            endDate = inputsDate.endDate === undefined || inputsDate.endDate === null || inputsDate.endDate === '' ? '' : inputsDate.endDate;   // 2023-03-01  yyyy-mm-dd\n        } else if (dateType === 'Month') {\n            startDate = inputsDate.startMonth === undefined || inputsDate.startMonth === null || inputsDate.startMonth === '' ? '' : (inputsDate.startMonth + '-01');\n            endDate = inputsDate.endMonth === undefined || inputsDate.endMonth === null || inputsDate.endMonth === '' ? '' : (inputsDate.endMonth + '-' + moment(inputsDate.endMonth, \"YYYY-MM\").daysInMonth());\n        } else if (dateType === 'Year') {\n            startDate = inputsDate.fromYear === undefined || inputsDate.fromYear === null || inputsDate.fromYear === '' ? '' : (inputsDate.fromYear + '-01-01');\n            endDate = inputsDate.toYear === undefined || inputsDate.toYear === null || inputsDate.toYear === '' ? '' : (inputsDate.toYear + '-12-31');\n        }\n        return {startDate: startDate, endDate: endDate};\n    }\n\n    const validate = () => {\n        let dates = getParamsDate();\n        let startDate = dates.startDate;\n        let endDate = dates.endDate;\n        \n        if (nationalLocationChecked === false) {\n            if (locationIds.length === 0) {\n                showError('Please Select Location.');\n                return false;\n            }\n        }else if (endDate < startDate) {\n            showError(`End ${dateType} should be greater than Start ${dateType}.`);\n            return false;\n        }else if (reportType === '') {\n            showError('Please Select Report Type.');\n            return false;\n        }else if (reportFormate === '') {\n            showError('Please Select Report Formate.');\n            return false;\n        }\n        return true;\n    }\n\n    const download = () => {\n        if (!validate()) {\n            return false;\n        }\n\n        let dates = getParamsDate();\n        let startDate = dates.startDate;\n        let endDate = dates.endDate;\n\n        let soList = [];\n        salesOfficerList.map(s => soList.push(s.id));\n        soList.sort(function (a, b) {\n            return a - b\n        });\n\n        let distributorIds = [];\n        distributorList.map(d => distributorIds.push(d.id));\n        distributorIds.sort(function (a, b) {\n            return a - b\n        });\n        let queryParams = '?nationalLocationChecked=' + nationalLocationChecked;\n        queryParams += '&locationTypeLevel=' + (nodes.length > 0 ? nodes[0].locationTypeLevel : 0);\n        queryParams += '&reportFormat=' + reportFormate;\n        queryParams += '&companyId=' + companyId;\n        queryParams += '&locationIds=' + locationIds;\n        queryParams += '&soIds=' + soList.join(',');\n        queryParams += '&disIds=' + distributorIds.join(',');\n        queryParams += '&startDate=' + startDate;\n        queryParams += '&endDate=' + endDate;\n        queryParams += '&reportType=' + reportType;\n        // let queryParams = '?locationId=' + inputs.locationId;\n        // queryParams += '&reportFormate=' + inputs.reportFormate;\n        // queryParams += '&companyId=' + companyId;\n        // queryParams += '&locationIds=' + locationIds;\n        // queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n        // queryParams += '&distributorId=' + inputs.distributorId;\n        // queryParams += '&startDate=' + inputs.startDate;\n        // queryParams += '&endDate=' + inputs.endDate;\n        // queryParams += '&reportType=' + inputs.reportType;\n        // const URL = `${process.env.REACT_APP_API_URL}/api/report/order-to-cash-cycle` + queryParams;\n        // axios.get(URL, { responseType: 'blob' }).then(response => {\n        //     if (inputs.reportFormate === \"PDF\") {\n        //         const url = window.URL.createObjectURL(new Blob([response.data]));\n        //         const link = document.createElement('a');\n        //         link.href = url;\n        //         link.setAttribute('download', \"OrderToCashCycleInvoice.pdf\");\n        //         document.body.appendChild(link);\n        //         link.click();\n        //         document.body.removeChild(link);\n        //     } else {\n        //         const url = window.URL.createObjectURL(new Blob([response.data]));\n        //         const link = document.createElement('a');\n        //         link.href = url;\n        //         link.setAttribute('download', \"OrderToCashCycleInvoice.xlsx\");\n        //         document.body.appendChild(link);\n        //         link.click();\n        //         document.body.removeChild(link);\n        //     }\n        // }).catch(err => {\n        //     showError();\n        // });\n    }\n\n    const previewValidate = () => {\n        let dates = getParamsDate();\n        let startDate = dates.startDate;\n        let endDate = dates.endDate;\n        if (nationalLocationChecked === false) {\n            if (locationIds.length === 0) {\n                showError('Please Select Location.');\n                return false;\n            }\n        }else if (endDate < startDate) {\n            showError(`End ${dateType} should be greater than Start ${dateType}.`);\n            return false;\n        }else if (reportType === '') {\n            showError('Please Select Report Type.');\n            return false;\n        }\n        return true;\n    }\n\n    const preview = () => {\n        if (!previewValidate()) {\n            return false;\n        }\n\n        let dates = getParamsDate();\n        let startDate = dates.startDate;\n        let endDate = dates.endDate;\n\n\n        let soList = [];\n        salesOfficerList.map(s => soList.push(s.id));\n        soList.sort(function (a, b) {\n            return a - b\n        });\n\n        let distributorIds = [];\n        distributorList.map(d => distributorIds.push(d.id));\n        distributorIds.sort(function (a, b) {\n            return a - b\n        });\n        let queryParams = '?nationalLocationChecked=' + nationalLocationChecked;\n        queryParams += '&locationTypeLevel=' + (nodes.length > 0 ? nodes[0].locationTypeLevel : 0);\n        queryParams += '&reportFormat=' + \"PDF\";\n        queryParams += '&companyId=' + companyId;\n        queryParams += '&locationIds=' + locationIds;\n        queryParams += '&soIds=' + soList.join(',');\n        queryParams += '&disIds=' + distributorIds.join(',');\n        queryParams += '&startDate=' + startDate;\n        queryParams += '&endDate=' + endDate;\n        queryParams += '&reportType=' + reportType;\n        // let queryParams = '?locationId=' + inputs.locationId;\n        // queryParams += '&reportFormate=' + \"PDF\";\n        // queryParams += '&companyId=' + companyId;\n        // queryParams += '&locationIds=' + locationIds;\n        // queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n        // queryParams += '&distributorId=' + inputs.distributorId;\n        // queryParams += '&startDate=' + inputs.startDate;\n        // queryParams += '&endDate=' + inputs.endDate;\n        // queryParams += '&reportType=' + inputs.reportType;\n        // const data = `${process.env.REACT_APP_API_URL}/api/report/order-to-cash-cycle` + queryParams;\n        // axios.get(data, { responseType: 'blob' }).then(response => {\n        //     const file = new Blob([response.data], { type: \"application/pdf\" });\n        //     const fileURL = URL.createObjectURL(file);\n        //     const iframe = document.querySelector(\"iframe\");\n        //     if (iframe?.src) iframe.src = fileURL;\n        //     document.getElementById('reportShowIframe').style.display = \"inline-block\";\n        // }).catch(err => {\n        //     showError();\n        // });\n    }\n\n    return (\n        <>\n            <div>\n                <MisReportBreadCrum menuTitle=\"Order To Cash Cycle\" />\n            </div>\n            <div>\n                {/* BREAD CRUM ROW */}\n                {/* <InventoryBreadCrum /> */}\n                {/* TODAY SALE ROW */}\n                {/* <InventoryStockHeader showStockData={true} /> */}\n                {/* <ReportsSubTabsHeader /> */}\n            </div>\n            <div>\n                <Card>\n                    <CardBody>\n                        <div className='row'>\n                            {/* LEFT SIDE TREE ROW */}\n                            <div className='col-xl-5' style={{ borderRight: \"1px solid #F2F2F2\" }}>\n                                <div style={{ borderBottom: \"1px solid #F2F2F2\" }}>\n                                    <label>\n                                        <img src={toAbsoluteUrl(\"/images/loc3.png\")}\n                                            style={{ width: \"20px\", height: \"20px\", textAlign: \"center\" }}\n                                            alt='Company Picture' />\n                                        <strong style={{\n                                            marginLeft: \"10px\",\n                                            color: \"#828282\"\n                                        }}>{intl.formatMessage({ id: \"COMMON.LOCATION_ALL\" })}</strong>\n                                    </label>\n                                </div>\n                                {/* NATIONAL BUTTON */}\n                                <div>\n                                    <FormControlLabel\n                                        control={<IOSSwitch id=\"nationalId\"\n                                            checked={nationalLocationChecked}\n                                            onClick={handleActive}\n                                        />}\n                                        label=\"National\"\n                                    />\n                                </div>\n                                {/* LOCATION TREE */}\n                                <ReportLocationTreeView tree={locationTree} selectLocationTreeNode={selectLocationTreeNode} />\n                            </div>\n                            {/* RIGHT SIDE LIST ROW */}\n                            <div className='col-xl-7'>\n                                {/* SALES OFFICER COMPONENT */}\n                                <SalesOfficeList\n                                    companyIdPass={companyId}\n                                    locationsIdsPass={locationIds}\n                                    setSalesOfficerListPass={setSalesOfficerList}\n                                    salesOfficerListPass={salesOfficerList}\n                                    salesOfficer={salesOfficer}\n                                    setSalesOfficer={setSalesOfficer}\n                                    nationalLocationChecked={nationalLocationChecked}\n                                />\n\n                                {/* DISTRIBUTOR COMPONENT */}\n                                <DistributorList\n                                    companyIdPass={companyId}\n                                    salesOfficerIdsPass={salesOfficerIds}\n                                    setDistributorListPass={setDistributorList}\n                                    distributorListPass={distributorList}\n                                    distributors={distributors} setDistributors={setDistributors}\n                                />\n\n                                {/* DATE COMPONENT */}\n                                <CommonDateComponent\n                                    inputs={inputsDate}\n                                    setInputs={setInputsDate}\n                                    type={dateType}\n                                    setType={setDateType}\n                                />\n\n                                {/* REPORT TYPE COMPONENT */}\n                                <CommonReportType\n                                    setReportType={setReportType}\n                                />\n\n                                {/* REPORT FORMATE COMPONENT */}\n                                <CommonReportFormat\n                                    setReportFormate={setReportFormate}\n                                />\n\n                                <Button className=\"float-right mt-5\" id=\"gotItBtn\" variant=\"contained\"\n                                    color=\"primary\" onClick={download}>Download</Button>\n                                <div className=\"float-right\">\n                                    <Button className=\"mt-5 mr-5\" id=\"gotItBtn\" variant=\"contained\" color=\"primary\"\n                                        onClick={preview}>Preview</Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='mt-5'>''\n                            <iframe src=\"\" className='w-100' id=\"reportShowIframe\" height=\"500px\" title=\"\" />\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}