{"ast":null,"code":"import _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/_metronic/_partials/controls/code-examples-kt/KTCodeExample.js\";\n\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport { KTCodeBlock } from \"./KTCodeBlock\";\nimport { Card, CardBody, CardHeader } from \"../Card\";\nimport { CodeBlockToolbar } from \"../code-examples/CodeBlockToolbar\";\nexport function KTCodeExample(_ref) {\n  var jsCode = _ref.jsCode,\n      children = _ref.children,\n      beforeCodeTitle = _ref.beforeCodeTitle,\n      languages = _ref.languages,\n      codeBlockHeight = _ref.codeBlockHeight;\n  var defaultLanguages = !languages ? [{\n    code: jsCode,\n    language: \"javascript\",\n    shortCode: \"JS\"\n  }] : languages;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCodeBlockShown = _useState2[0],\n      setIsCodeBlockShown = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tabId = _useState4[0],\n      setTabId = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      customStyle = _useState6[0],\n      setCustomStyle = _useState6[1];\n\n  useEffect(function () {\n    var styles = {};\n\n    if (codeBlockHeight) {\n      styles.height = codeBlockHeight;\n      styles.overflowX = \"auto\";\n    }\n\n    if (defaultLanguages.length > 1) {\n      styles.background = \"none transparent !important\";\n    }\n\n    setCustomStyle(styles);\n  }, [codeBlockHeight, defaultLanguages.length]);\n  var toolbar = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"example-tools\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CodeBlockToolbar, {\n    showViewCode: true,\n    code: defaultLanguages[tabId].code,\n    isCodeBlockShown: isCodeBlockShown,\n    setIsCodeBlockShown: setIsCodeBlockShown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"example example-compact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: beforeCodeTitle,\n    toolbar: toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, children), /*#__PURE__*/React.createElement(KTCodeBlock, {\n    languages: defaultLanguages,\n    tabs: {\n      tabId: tabId,\n      setTabId: setTabId\n    },\n    codeShown: {\n      isCodeBlockShown: isCodeBlockShown,\n      setIsCodeBlockShown: setIsCodeBlockShown\n    },\n    customStyle: customStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","useState","useEffect","KTCodeBlock","Card","CardBody","CardHeader","CodeBlockToolbar","KTCodeExample","jsCode","children","beforeCodeTitle","languages","codeBlockHeight","defaultLanguages","code","language","shortCode","isCodeBlockShown","setIsCodeBlockShown","tabId","setTabId","customStyle","setCustomStyle","styles","height","overflowX","length","background","toolbar"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/_metronic/_partials/controls/code-examples-kt/KTCodeExample.js"],"sourcesContent":["/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {KTCodeBlock} from \"./KTCodeBlock\";\r\nimport {Card, CardBody, CardHeader} from \"../Card\";\r\nimport {CodeBlockToolbar} from \"../code-examples/CodeBlockToolbar\";\r\n\r\nexport function KTCodeExample({\r\n  jsCode,\r\n  children,\r\n  beforeCodeTitle,\r\n  languages,\r\n  codeBlockHeight\r\n}) {\r\n  const defaultLanguages = !languages\r\n    ? [\r\n        {\r\n          code: jsCode,\r\n          language: \"javascript\",\r\n          shortCode: \"JS\"\r\n        }\r\n      ]\r\n    : languages;\r\n  const [isCodeBlockShown, setIsCodeBlockShown] = useState(false);\r\n  const [tabId, setTabId] = useState(0);\r\n  const [customStyle, setCustomStyle] = useState({});\r\n  useEffect(() => {\r\n    const styles = {};\r\n\r\n    if (codeBlockHeight) {\r\n      styles.height = codeBlockHeight;\r\n      styles.overflowX = \"auto\";\r\n    }\r\n\r\n    if (defaultLanguages.length > 1) {\r\n      styles.background = `none transparent !important`;\r\n    }\r\n\r\n    setCustomStyle(styles);\r\n  }, [codeBlockHeight, defaultLanguages.length]);\r\n\r\n  const toolbar = (\r\n    <div className=\"card-toolbar\">\r\n      <div className=\"example-tools\">\r\n        <CodeBlockToolbar\r\n          showViewCode={true}\r\n          code={defaultLanguages[tabId].code}\r\n          isCodeBlockShown={isCodeBlockShown}\r\n          setIsCodeBlockShown={setIsCodeBlockShown}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Card className=\"example example-compact\">\r\n      <CardHeader title={beforeCodeTitle} toolbar={toolbar} />\r\n      <CardBody>\r\n        <>{children}</>\r\n        <KTCodeBlock\r\n          languages={defaultLanguages}\r\n          tabs={{ tabId, setTabId }}\r\n          codeShown={{ isCodeBlockShown, setIsCodeBlockShown }}\r\n          customStyle={customStyle}\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAAQC,IAAR,EAAcC,QAAd,EAAwBC,UAAxB,QAAyC,SAAzC;AACA,SAAQC,gBAAR,QAA+B,mCAA/B;AAEA,OAAO,SAASC,aAAT,OAMJ;EAAA,IALDC,MAKC,QALDA,MAKC;EAAA,IAJDC,QAIC,QAJDA,QAIC;EAAA,IAHDC,eAGC,QAHDA,eAGC;EAAA,IAFDC,SAEC,QAFDA,SAEC;EAAA,IADDC,eACC,QADDA,eACC;EACD,IAAMC,gBAAgB,GAAG,CAACF,SAAD,GACrB,CACE;IACEG,IAAI,EAAEN,MADR;IAEEO,QAAQ,EAAE,YAFZ;IAGEC,SAAS,EAAE;EAHb,CADF,CADqB,GAQrBL,SARJ;;EASA,gBAAgDX,QAAQ,CAAC,KAAD,CAAxD;EAAA;EAAA,IAAOiB,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,iBAA0BlB,QAAQ,CAAC,CAAD,CAAlC;EAAA;EAAA,IAAOmB,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAsCpB,QAAQ,CAAC,EAAD,CAA9C;EAAA;EAAA,IAAOqB,WAAP;EAAA,IAAoBC,cAApB;;EACArB,SAAS,CAAC,YAAM;IACd,IAAMsB,MAAM,GAAG,EAAf;;IAEA,IAAIX,eAAJ,EAAqB;MACnBW,MAAM,CAACC,MAAP,GAAgBZ,eAAhB;MACAW,MAAM,CAACE,SAAP,GAAmB,MAAnB;IACD;;IAED,IAAIZ,gBAAgB,CAACa,MAAjB,GAA0B,CAA9B,EAAiC;MAC/BH,MAAM,CAACI,UAAP;IACD;;IAEDL,cAAc,CAACC,MAAD,CAAd;EACD,CAbQ,EAaN,CAACX,eAAD,EAAkBC,gBAAgB,CAACa,MAAnC,CAbM,CAAT;EAeA,IAAME,OAAO,gBACX;IAAK,SAAS,EAAC,cAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,eAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,gBAAD;IACE,YAAY,EAAE,IADhB;IAEE,IAAI,EAAEf,gBAAgB,CAACM,KAAD,CAAhB,CAAwBL,IAFhC;IAGE,gBAAgB,EAAEG,gBAHpB;IAIE,mBAAmB,EAAEC,mBAJvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF,CADF;EAaA,oBACE,oBAAC,IAAD;IAAM,SAAS,EAAC,yBAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,UAAD;IAAY,KAAK,EAAER,eAAnB;IAAoC,OAAO,EAAEkB,OAA7C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,0CAAGnB,QAAH,CADF,eAEE,oBAAC,WAAD;IACE,SAAS,EAAEI,gBADb;IAEE,IAAI,EAAE;MAAEM,KAAK,EAALA,KAAF;MAASC,QAAQ,EAARA;IAAT,CAFR;IAGE,SAAS,EAAE;MAAEH,gBAAgB,EAAhBA,gBAAF;MAAoBC,mBAAmB,EAAnBA;IAApB,CAHb;IAIE,WAAW,EAAEG,WAJf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,CAFF,CADF;AAcD"},"metadata":{},"sourceType":"module"}