{"ast":null,"code":"import _classCallCheck from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/ReactBootstrapExamples/DropdownsExamplesPage.js\";\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { Button, Dropdown, FormControl, ButtonGroup, DropdownButton, SplitButton, ButtonToolbar } from \"react-bootstrap\";\nimport { Notice, KTCodeExample } from \"../../../_metronic/_partials/controls\";\nvar CustomToggle = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    ref: ref,\n    onClick: function onClick(e) {\n      e.preventDefault();\n\n      _this.props.handleClick(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, props.children);\n});\n\nvar CustomMenu = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomMenu, _React$Component);\n\n  var _super = _createSuper(CustomMenu);\n\n  function CustomMenu(props, context) {\n    var _this2;\n\n    _classCallCheck(this, CustomMenu);\n\n    _this2 = _super.call(this, props, context);\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_this2));\n    _this2.state = {\n      value: \"\"\n    };\n    return _this2;\n  }\n\n  _createClass(CustomMenu, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        value: e.target.value.toLowerCase().trim()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          style = _this$props.style,\n          className = _this$props.className,\n          labeledBy = _this$props[\"aria-labelledby\"];\n      var value = this.state.value;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: style,\n        className: className,\n        \"aria-labelledby\": labeledBy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        autoFocus: true,\n        className: \"mx-3 my-2 w-auto\",\n        placeholder: \"Type to filter...\",\n        onChange: this.handleChange,\n        value: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-unstyled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, React.Children.toArray(children).filter(function (child) {\n        return !value || child.props.children.toLowerCase().startsWith(value);\n      })));\n    }\n  }]);\n\n  return CustomMenu;\n}(React.Component);\n\nvar DropdownsExamplesPage = /*#__PURE__*/function (_React$Component2) {\n  _inherits(DropdownsExamplesPage, _React$Component2);\n\n  var _super2 = _createSuper(DropdownsExamplesPage);\n\n  function DropdownsExamplesPage() {\n    _classCallCheck(this, DropdownsExamplesPage);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(DropdownsExamplesPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n        icon: \"flaticon-warning font-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, \"Toggle contextual overlays for displaying lists of links and more with the Bootstrap dropdown plugin.\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        className: \"font-weight-bold\",\n        rel: \"noopener noreferrer\",\n        href: \"https://react-bootstrap.github.io/components/dropdowns/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode1,\n        beforeCodeTitle: \"Single button dropdowns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }, \"The basic Dropdown is composed of a wrapping Dropdown and inner\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, \"<DropdownMenu>\"), \", and\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, \"<DropdownToggle>\"), \". By default the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, \"<DropdownToggle>\"), \" will render a Button component and accepts all the same props.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, \"Dropdown Button\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        href: \"#/action-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        href: \"#/action-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        href: \"#/action-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }\n      }, \"Something else\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode2,\n        beforeCodeTitle: \"Split button dropdowns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, \"Similarly, You create a split dropdown by combining the Dropdown components with another Button and a ButtonGroup.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown, {\n        as: ButtonGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, \"Split Button\"), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        split: true,\n        variant: \"success\",\n        id: \"dropdown-split-basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        href: \"#/action-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 19\n        }\n      }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        href: \"#/action-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        href: \"#/action-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 19\n        }\n      }, \"Something else\")))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode3,\n        beforeCodeTitle: \"Sizing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      }, \"Dropdowns work with buttons of all sizes.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }, [DropdownButton, SplitButton].map(function (DropdownType, idx) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: idx,\n          className: \"pr-1\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(DropdownType, {\n          size: \"lg\",\n          title: \"Drop small\",\n          id: \"dropdown-button-drop-\".concat(idx),\n          key: idx,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }\n        }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }\n        }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }\n        }, \"Something else here\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"4\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }\n        }, \"Separated link\")));\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, [DropdownButton, SplitButton].map(function (DropdownType, idx) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: idx,\n          className: \"pr-1\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(DropdownType, {\n          size: \"sm\",\n          variant: \"secondary\",\n          title: \"Drop small\",\n          id: \"dropdown-button-drop-\".concat(idx),\n          key: idx,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }\n        }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }\n        }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }\n        }, \"Something else here\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"4\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }\n        }, \"Separated link\")));\n      })))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode5,\n        beforeCodeTitle: \"Dropdown items\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }\n      }, \"Historically dropdown menu contents had to be links, but that\\u2019s no longer the case with v4. Now you can optionally use\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }\n      }, \"<button>\"), \" elements in your dropdowns instead of just \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }\n      }, \"<a>\"), \"s.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(DropdownButton, {\n        id: \"dropdown-item-button\",\n        title: \"Dropdown button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        as: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        as: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        as: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, \"Something else\"))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode9,\n        beforeCodeTitle: \"Customization\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }\n      }, \"If the default handling of the dropdown menu and toggle components aren't to your liking, you can customize them, by using the more basic \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 38\n        }\n      }, \"<Dropdown>\"), \" Component to explicitly specify the Toggle and Menu components\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        id: \"dropdown-custom-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }\n      }, \"Pow! Zoom!\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        className: \"super-colors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 23\n        }\n      }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 23\n        }\n      }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 23\n        }\n      }, \"Active Item\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 23\n        }\n      }, \"Separated link\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        as: ButtonGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }\n      }, \"mix it up style-wise\"), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        split: true,\n        variant: \"success\",\n        id: \"dropdown-custom-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        className: \"super-colors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 23\n        }\n      }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 23\n        }\n      }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 23\n        }\n      }, \"Active Item\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 23\n        }\n      }, \"Separated link\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode4,\n        beforeCodeTitle: \"Drop directions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }\n      }, \"Trigger dropdown menus above, below, left, or to the right of their toggle elements, with the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 49\n        }\n      }, \"drop\"), \" prop.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }\n      }, [\"up\", \"down\", \"left\", \"right\"].map(function (direction) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pr-1 pb-1\",\n          key: direction,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(DropdownButton, {\n          drop: direction,\n          variant: \"secondary\",\n          title: \" Drop \".concat(direction, \" \"),\n          id: \"dropdown-button-drop-\".concat(direction),\n          key: direction,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }\n        }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }\n        }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }\n        }, \"Something else here\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"4\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }\n        }, \"Separated link\")));\n      })), /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 17\n        }\n      }, [\"up\", \"down\", \"left\", \"right\"].map(function (direction) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pr-1\",\n          key: direction,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(SplitButton, {\n          drop: direction,\n          variant: \"secondary\",\n          title: \"Drop \".concat(direction),\n          id: \"dropdown-button-drop-\".concat(direction),\n          key: direction,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }\n        }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }\n        }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }\n        }, \"Something else here\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"4\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }\n        }, \"Separated link\")));\n      })))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode6,\n        beforeCodeTitle: \"Menu alignment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }\n      }, \"By default, a dropdown menu is aligned to the left, but you can switch it by passing the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 42\n        }\n      }, \"alignRight\"), \" prop.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(DropdownButton, {\n        alignRight: true,\n        title: \"Dropdown right\",\n        id: \"dropdown-menu-align-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 17\n        }\n      }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 17\n        }\n      }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 17\n        }\n      }, \"Something else here\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 17\n        }\n      }, \"Separated link\"))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode10,\n        beforeCodeTitle: \"Custom Dropdown Components\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }\n      }, \"For those that want to customize everything, you can forgo the included Toggle and Menu components, and create your own. By providing custom components to the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 52\n        }\n      }, \"as\"), \" prop, you can control how each component behaves. Custom toggle and menu components must be able to accept refs.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        as: CustomToggle,\n        id: \"dropdown-custom-components\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 17\n        }\n      }, \"Custom toggle\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        as: CustomMenu,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 19\n        }\n      }, \"Red\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 19\n        }\n      }, \"Blue\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 19\n        }\n      }, \"Orange\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 19\n        }\n      }, \"Red-Orange\")))))));\n    }\n  }]);\n\n  return DropdownsExamplesPage;\n}(React.Component);\n\nexport { DropdownsExamplesPage as default };\nvar jsCode1 = \"\\n<Dropdown>\\n  <Dropdown.Toggle variant=\\\"success\\\" id=\\\"dropdown-basic\\\">\\n    Dropdown Button\\n  </Dropdown.Toggle>\\n\\n  <Dropdown.Menu>\\n    <Dropdown.Item href=\\\"#/action-1\\\">Action</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-2\\\">Another action</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-3\\\">Something else</Dropdown.Item>\\n  </Dropdown.Menu>\\n</Dropdown>\\n\";\nvar jsCode2 = \"\\n<Dropdown as={ButtonGroup}>\\n  <Button variant=\\\"success\\\">Split Button</Button>\\n\\n  <Dropdown.Toggle split variant=\\\"success\\\" id=\\\"dropdown-split-basic\\\" />\\n\\n  <Dropdown.Menu>\\n    <Dropdown.Item href=\\\"#/action-1\\\">Action</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-2\\\">Another action</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-3\\\">Something else</Dropdown.Item>\\n  </Dropdown.Menu>\\n</Dropdown>\\n\";\nvar jsCode3 = \"\\n<>\\n  <ButtonToolbar>\\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\\n      <DropdownType\\n        size=\\\"lg\\\"\\n        title=\\\"Drop small\\\"\\n        id={`dropdown-button-drop-${idx}`}\\n        key={idx}\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n        <Dropdown.Divider />\\n        <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n      </DropdownType>\\n    ))}\\n  </ButtonToolbar>\\n  <ButtonToolbar>\\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\\n      <DropdownType\\n        size=\\\"sm\\\"\\n        variant=\\\"secondary\\\"\\n        title=\\\"Drop small\\\"\\n        id={`dropdown-button-drop-${idx}`}\\n        key={idx}\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n        <Dropdown.Divider />\\n        <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n      </DropdownType>\\n    ))}\\n  </ButtonToolbar>\\n</>\\n\";\nvar jsCode4 = \"\\n<>\\n  <ButtonToolbar>\\n    {['up', 'down', 'left', 'right'].map(direction => (\\n      <DropdownButton\\n        drop={direction}\\n        variant=\\\"secondary\\\"\\n        title={` Drop ${direction} `}\\n        id={`dropdown-button-drop-${direction}`}\\n        key={direction}\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n        <Dropdown.Divider />\\n        <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n      </DropdownButton>\\n    ))}\\n  </ButtonToolbar>\\n\\n  <ButtonToolbar>\\n    {['up', 'down', 'left', 'right'].map(direction => (\\n      <SplitButton\\n        drop={direction}\\n        variant=\\\"secondary\\\"\\n        title={`Drop ${direction}`}\\n        id={`dropdown-button-drop-${direction}`}\\n        key={direction}\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n        <Dropdown.Divider />\\n        <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n      </SplitButton>\\n    ))}\\n  </ButtonToolbar>\\n</>\\n\";\nvar jsCode5 = \"\\n<DropdownButton id=\\\"dropdown-item-button\\\" title=\\\"Dropdown button\\\">\\n  <Dropdown.Item as=\\\"button\\\">Action</Dropdown.Item>\\n  <Dropdown.Item as=\\\"button\\\">Another action</Dropdown.Item>\\n  <Dropdown.Item as=\\\"button\\\">Something else</Dropdown.Item>\\n</DropdownButton>\\n\";\nvar jsCode6 = \"\\n<DropdownButton\\n  alignRight\\n  title=\\\"Dropdown right\\\"\\n  id=\\\"dropdown-menu-align-right\\\"\\n>\\n  <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n  <Dropdown.Divider />\\n  <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n</DropdownButton>\\n\";\nvar jsCode7 = \"\\n<Dropdown.Menu show>\\n  <Dropdown.Header>Dropdown header</Dropdown.Header>\\n  <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n</Dropdown.Menu>\\n\";\nvar jsCode8 = \"\\n<Dropdown.Menu show>\\n  <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n  <Dropdown.Divider />\\n  <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n</Dropdown.Menu>\\n\";\nvar jsCode9 = \"\\n<ButtonToolbar>\\n  <Dropdown>\\n    <Dropdown.Toggle id=\\\"dropdown-custom-1\\\">Pow! Zoom!</Dropdown.Toggle>\\n    <Dropdown.Menu className=\\\"super-colors\\\">\\n      <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"3\\\" active>\\n        Active Item\\n      </Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown as={ButtonGroup}>\\n    <Button variant=\\\"info\\\">mix it up style-wise</Button>\\n    <Dropdown.Toggle split variant=\\\"success\\\" id=\\\"dropdown-custom-2\\\" />\\n    <Dropdown.Menu className=\\\"super-colors\\\">\\n      <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"3\\\" active>\\n        Active Item\\n      </Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n</ButtonToolbar>\\n\";\nvar jsCode10 = \"\\nclass CustomToggle extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.handleClick = this.handleClick.bind(this);\\n  }\\n\\n  handleClick(e) {\\n    e.preventDefault();\\n\\n    this.props.onClick(e);\\n  }\\n\\n  render() {\\n    return (\\n      <a href=\\\"\\\" onClick={this.handleClick}>\\n        {this.props.children}\\n      </a>\\n    );\\n  }\\n}\\n\\nclass CustomMenu extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.handleChange = this.handleChange.bind(this);\\n\\n    this.state = { value: '' };\\n  }\\n\\n  handleChange(e) {\\n    this.setState({ value: e.target.value.toLowerCase().trim() });\\n  }\\n\\n  render() {\\n    const {\\n      children,\\n      style,\\n      className,\\n      'aria-labelledby': labeledBy,\\n    } = this.props;\\n\\n    const { value } = this.state;\\n\\n    return (\\n      <div style={style} className={className} aria-labelledby={labeledBy}>\\n        <FormControl\\n          autoFocus\\n          className=\\\"mx-3 my-2 w-auto\\\"\\n          placeholder=\\\"Type to filter...\\\"\\n          onChange={this.handleChange}\\n          value={value}\\n        />\\n        <ul className=\\\"list-unstyled\\\">\\n          {React.Children.toArray(children).filter(\\n            child =>\\n              !value || child.props.children.toLowerCase().startsWith(value),\\n          )}\\n        </ul>\\n      </div>\\n    );\\n  }\\n}\\n\\nrender(\\n  <Dropdown>\\n    <Dropdown.Toggle as={CustomToggle} id=\\\"dropdown-custom-components\\\">\\n      Custom toggle\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu as={CustomMenu}>\\n      <Dropdown.Item eventKey=\\\"1\\\">Red</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"2\\\">Blue</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"3\\\" active>\\n        Orange\\n      </Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"1\\\">Red-Orange</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>,\\n);\\n\";","map":{"version":3,"names":["React","Button","Dropdown","FormControl","ButtonGroup","DropdownButton","SplitButton","ButtonToolbar","Notice","KTCodeExample","CustomToggle","forwardRef","props","ref","e","preventDefault","handleClick","children","CustomMenu","context","handleChange","bind","state","value","setState","target","toLowerCase","trim","style","className","labeledBy","Children","toArray","filter","child","startsWith","Component","DropdownsExamplesPage","jsCode1","jsCode2","jsCode3","map","DropdownType","idx","jsCode5","jsCode9","jsCode4","direction","jsCode6","jsCode10","jsCode7","jsCode8"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/ReactBootstrapExamples/DropdownsExamplesPage.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  FormControl,\r\n  ButtonGroup,\r\n  DropdownButton,\r\n  SplitButton,\r\n  ButtonToolbar\r\n} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nconst CustomToggle = React.forwardRef((props, ref) => {\r\n  return (\r\n    <a\r\n      href=\"\"\r\n      ref={ref}\r\n      onClick={e => {\r\n        e.preventDefault();\r\n        this.props.handleClick(e);\r\n      }}\r\n    >\r\n      {props.children}\r\n    </a>\r\n  );\r\n});\r\n\r\nclass CustomMenu extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = { value: \"\" };\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value.toLowerCase().trim() });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      style,\r\n      className,\r\n      \"aria-labelledby\": labeledBy\r\n    } = this.props;\r\n\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div style={style} className={className} aria-labelledby={labeledBy}>\r\n        <FormControl\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Type to filter...\"\r\n          onChange={this.handleChange}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            child =>\r\n              !value || child.props.children.toLowerCase().startsWith(value)\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class DropdownsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Toggle contextual overlays for displaying lists of links and more\r\n            with the Bootstrap dropdown plugin.\r\n          </span>\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/dropdowns/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode1}\r\n              beforeCodeTitle=\"Single button dropdowns\"\r\n            >\r\n              <span>\r\n                The basic Dropdown is composed of a wrapping Dropdown and inner{\" \"}\r\n                <code>&lt;DropdownMenu&gt;</code>, and{\" \"}\r\n                <code>&lt;DropdownToggle&gt;</code>. By default the{\" \"}\r\n                <code>&lt;DropdownToggle&gt;</code> will render a Button\r\n                component and accepts all the same props.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                  Dropdown Button\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-2\">\r\n                    Another action\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-3\">\r\n                    Something else\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode2}\r\n              beforeCodeTitle=\"Split button dropdowns\"\r\n            >\r\n              <span>\r\n                Similarly, You create a split dropdown by combining the Dropdown\r\n                components with another Button and a ButtonGroup.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <Dropdown as={ButtonGroup}>\r\n                <Button variant=\"success\">Split Button</Button>\r\n\r\n                <Dropdown.Toggle\r\n                  split\r\n                  variant=\"success\"\r\n                  id=\"dropdown-split-basic\"\r\n                />\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-2\">\r\n                    Another action\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item href=\"#/action-3\">\r\n                    Something else\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Sizing\">\r\n              <span>Dropdowns work with buttons of all sizes.</span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <>\r\n                <ButtonToolbar>\r\n                  {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n                    <div key={idx} className=\"pr-1\">\r\n                      <DropdownType\r\n                        size=\"lg\"\r\n                        title=\"Drop small\"\r\n                        id={`dropdown-button-drop-${idx}`}\r\n                        key={idx}\r\n                      >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">\r\n                          Another action\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">\r\n                          Something else here\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\">\r\n                          Separated link\r\n                        </Dropdown.Item>\r\n                      </DropdownType>\r\n                    </div>\r\n                  ))}\r\n                </ButtonToolbar>\r\n                <br />\r\n                <ButtonToolbar>\r\n                  {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n                    <div key={idx} className=\"pr-1\">\r\n                      <DropdownType\r\n                        size=\"sm\"\r\n                        variant=\"secondary\"\r\n                        title=\"Drop small\"\r\n                        id={`dropdown-button-drop-${idx}`}\r\n                        key={idx}\r\n                      >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">\r\n                          Another action\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">\r\n                          Something else here\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\">\r\n                          Separated link\r\n                        </Dropdown.Item>\r\n                      </DropdownType>\r\n                    </div>\r\n                  ))}\r\n                </ButtonToolbar>\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Dropdown items\">\r\n              <span>\r\n                Historically dropdown menu contents had to be links, but that’s\r\n                no longer the case with v4. Now you can optionally use{\" \"}\r\n                <code>&lt;button&gt;</code> elements in your dropdowns instead\r\n                of just <code>&lt;a&gt;</code>s.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\r\n                <Dropdown.Item as=\"button\">Action</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\r\n              </DropdownButton>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode9} beforeCodeTitle=\"Customization\">\r\n              <span>\r\n                If the default handling of the dropdown menu and toggle\r\n                components aren't to your liking, you can customize them, by\r\n                using the more basic <code>&lt;Dropdown&gt;</code> Component to\r\n                explicitly specify the Toggle and Menu components\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <ButtonToolbar>\r\n                <div className=\"pr-1\">\r\n                  <Dropdown>\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\">\r\n                      Pow! Zoom!\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                      <Dropdown.Item eventKey=\"3\" active>\r\n                        Active Item\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </div>\r\n                <div className=\"pr-1\">\r\n                  <Dropdown as={ButtonGroup}>\r\n                    <Button variant=\"info\">mix it up style-wise</Button>\r\n                    <Dropdown.Toggle\r\n                      split\r\n                      variant=\"success\"\r\n                      id=\"dropdown-custom-2\"\r\n                    />\r\n                    <Dropdown.Menu className=\"super-colors\">\r\n                      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                      <Dropdown.Item eventKey=\"3\" active>\r\n                        Active Item\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </div>\r\n              </ButtonToolbar>\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Drop directions\">\r\n              <span>\r\n                Trigger dropdown menus above, below, left, or to the right of\r\n                their toggle elements, with the <code>drop</code> prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <>\r\n                <ButtonToolbar>\r\n                  {[\"up\", \"down\", \"left\", \"right\"].map(direction => (\r\n                    <div className=\"pr-1 pb-1\" key={direction}>\r\n                      <DropdownButton\r\n                        drop={direction}\r\n                        variant=\"secondary\"\r\n                        title={` Drop ${direction} `}\r\n                        id={`dropdown-button-drop-${direction}`}\r\n                        key={direction}\r\n                      >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">\r\n                          Another action\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">\r\n                          Something else here\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\">\r\n                          Separated link\r\n                        </Dropdown.Item>\r\n                      </DropdownButton>\r\n                    </div>\r\n                  ))}\r\n                </ButtonToolbar>\r\n\r\n                <ButtonToolbar>\r\n                  {[\"up\", \"down\", \"left\", \"right\"].map(direction => (\r\n                    <div className=\"pr-1\" key={direction}>\r\n                      <SplitButton\r\n                        drop={direction}\r\n                        variant=\"secondary\"\r\n                        title={`Drop ${direction}`}\r\n                        id={`dropdown-button-drop-${direction}`}\r\n                        key={direction}\r\n                      >\r\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"2\">\r\n                          Another action\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"3\">\r\n                          Something else here\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"4\">\r\n                          Separated link\r\n                        </Dropdown.Item>\r\n                      </SplitButton>\r\n                    </div>\r\n                  ))}\r\n                </ButtonToolbar>\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Menu alignment\">\r\n              <span>\r\n                By default, a dropdown menu is aligned to the left, but you can\r\n                switch it by passing the <code>alignRight</code> prop.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <DropdownButton\r\n                alignRight\r\n                title=\"Dropdown right\"\r\n                id=\"dropdown-menu-align-right\"\r\n              >\r\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n              </DropdownButton>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode10}\r\n              beforeCodeTitle=\"Custom Dropdown Components\"\r\n            >\r\n              <span>\r\n                For those that want to customize everything, you can forgo the\r\n                included Toggle and Menu components, and create your own. By\r\n                providing custom components to the <code>as</code> prop, you can\r\n                control how each component behaves. Custom toggle and menu\r\n                components must be able to accept refs.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\" />\r\n              <Dropdown>\r\n                <Dropdown.Toggle\r\n                  as={CustomToggle}\r\n                  id=\"dropdown-custom-components\"\r\n                >\r\n                  Custom toggle\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"3\" active>\r\n                    Orange\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Dropdown>\r\n  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n    Dropdown Button\r\n  </Dropdown.Toggle>\r\n\r\n  <Dropdown.Menu>\r\n    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n  </Dropdown.Menu>\r\n</Dropdown>\r\n`;\r\nconst jsCode2 = `\r\n<Dropdown as={ButtonGroup}>\r\n  <Button variant=\"success\">Split Button</Button>\r\n\r\n  <Dropdown.Toggle split variant=\"success\" id=\"dropdown-split-basic\" />\r\n\r\n  <Dropdown.Menu>\r\n    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n  </Dropdown.Menu>\r\n</Dropdown>\r\n`;\r\nconst jsCode3 = `\r\n<>\r\n  <ButtonToolbar>\r\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n      <DropdownType\r\n        size=\"lg\"\r\n        title=\"Drop small\"\r\n        id={\\`dropdown-button-drop-\\${idx}\\`}\r\n        key={idx}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </DropdownType>\r\n    ))}\r\n  </ButtonToolbar>\r\n  <ButtonToolbar>\r\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n      <DropdownType\r\n        size=\"sm\"\r\n        variant=\"secondary\"\r\n        title=\"Drop small\"\r\n        id={\\`dropdown-button-drop-\\${idx}\\`}\r\n        key={idx}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </DropdownType>\r\n    ))}\r\n  </ButtonToolbar>\r\n</>\r\n`;\r\nconst jsCode4 = `\r\n<>\r\n  <ButtonToolbar>\r\n    {['up', 'down', 'left', 'right'].map(direction => (\r\n      <DropdownButton\r\n        drop={direction}\r\n        variant=\"secondary\"\r\n        title={\\` Drop \\${direction} \\`}\r\n        id={\\`dropdown-button-drop-\\${direction}\\`}\r\n        key={direction}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </DropdownButton>\r\n    ))}\r\n  </ButtonToolbar>\r\n\r\n  <ButtonToolbar>\r\n    {['up', 'down', 'left', 'right'].map(direction => (\r\n      <SplitButton\r\n        drop={direction}\r\n        variant=\"secondary\"\r\n        title={\\`Drop \\${direction}\\`}\r\n        id={\\`dropdown-button-drop-\\${direction}\\`}\r\n        key={direction}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </SplitButton>\r\n    ))}\r\n  </ButtonToolbar>\r\n</>\r\n`;\r\nconst jsCode5 = `\r\n<DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\r\n  <Dropdown.Item as=\"button\">Action</Dropdown.Item>\r\n  <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\r\n  <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\r\n</DropdownButton>\r\n`;\r\nconst jsCode6 = `\r\n<DropdownButton\r\n  alignRight\r\n  title=\"Dropdown right\"\r\n  id=\"dropdown-menu-align-right\"\r\n>\r\n  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n  <Dropdown.Divider />\r\n  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n</DropdownButton>\r\n`;\r\nconst jsCode7 = `\r\n<Dropdown.Menu show>\r\n  <Dropdown.Header>Dropdown header</Dropdown.Header>\r\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n</Dropdown.Menu>\r\n`;\r\nconst jsCode8 = `\r\n<Dropdown.Menu show>\r\n  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n  <Dropdown.Divider />\r\n  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n</Dropdown.Menu>\r\n`;\r\nconst jsCode9 = `\r\n<ButtonToolbar>\r\n  <Dropdown>\r\n    <Dropdown.Toggle id=\"dropdown-custom-1\">Pow! Zoom!</Dropdown.Toggle>\r\n    <Dropdown.Menu className=\"super-colors\">\r\n      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Active Item\r\n      </Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n\r\n  <Dropdown as={ButtonGroup}>\r\n    <Button variant=\"info\">mix it up style-wise</Button>\r\n    <Dropdown.Toggle split variant=\"success\" id=\"dropdown-custom-2\" />\r\n    <Dropdown.Menu className=\"super-colors\">\r\n      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Active Item\r\n      </Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n</ButtonToolbar>\r\n`;\r\nconst jsCode10 = `\r\nclass CustomToggle extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n\r\n    this.props.onClick(e);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a href=\"\" onClick={this.handleClick}>\r\n        {this.props.children}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nclass CustomMenu extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = { value: '' };\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value.toLowerCase().trim() });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      style,\r\n      className,\r\n      'aria-labelledby': labeledBy,\r\n    } = this.props;\r\n\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div style={style} className={className} aria-labelledby={labeledBy}>\r\n        <FormControl\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Type to filter...\"\r\n          onChange={this.handleChange}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            child =>\r\n              !value || child.props.children.toLowerCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nrender(\r\n  <Dropdown>\r\n    <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n      Custom toggle\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu as={CustomMenu}>\r\n      <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"3\" active>\r\n        Orange\r\n      </Dropdown.Item>\r\n      <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>,\r\n);\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}