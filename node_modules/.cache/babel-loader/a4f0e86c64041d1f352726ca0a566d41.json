{"ast":null,"code":"import _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Inventory/configure/product-configure/ProductConfigurePage.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Card, CardBody, CardHeaderToolbar } from \"../../../../../_metronic/_partials/controls\";\nimport { ProductConfigureTable } from \"./product-configure-table/ProductConfigureTable\";\nimport axios from \"axios\";\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport LevelTreeModal from './LevelTreeModal';\nimport LevelSetup from './LevelSetup';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { CategoryTypeTree } from \"./CategoryTypeTree\";\nimport { showSuccess, showError } from '../../../../pages/Alert';\nimport { useLocation } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { set } from \"lodash\";\nimport * as XLSX from \"xlsx\";\nimport UnauthorizedPage from \"../../../Common/UnauthorizedPage\";\nimport { hasAcess } from \"../../../Util\"; // this part is need to understand tree node\n\nvar categorTypeNode = {\n  id: null,\n  name: '',\n  level: '',\n  children: []\n};\nvar tree = [];\n\nvar addNode = function addNode(productCategoryTree, treeLevel, locationNode) {\n  productCategoryTree.map(function (node) {\n    // traverse every node to find match\n    if (node.treeLevel === treeLevel) {\n      node.children.push(locationNode);\n      return;\n    } else {\n      addNode(node.children, treeLevel, locationNode);\n      return;\n    }\n  });\n};\n\nexport default function ProductConfigurePage(props) {\n  var _this = this;\n\n  var permissions = useSelector(function (state) {\n    return state.auth.user.permissions;\n  }, shallowEqual);\n  var companyId = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual); // const routeLocation = useLocation();\n\n  var initialCategoryType = [{\n    name: '',\n    level: 0,\n    companyId: companyId\n  }];\n  var routeProductCategory = useLocation();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      productCategoryTreeDepth = _useState2[0],\n      setProductCategoryTreeDepth = _useState2[1];\n\n  var initialLocationTypes = useRef(initialCategoryType);\n\n  var _useState3 = useState(tree),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categoryTypeTree = _useState4[0],\n      setCategoryTypeTree = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isUpdate = _useState6[0],\n      setIsUpdate = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      productCategoryTypes = _useState8[0],\n      setProductCategoryTypes = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      editNode = _useState10[0],\n      SetEditNode = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      singleAll = _useState12[0],\n      setSingleAll = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      categoryIds = _useState14[0],\n      setCategoryIds = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      reloadCategoryIds = _useState16[0],\n      setReloadCategoryIds = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      productProfileList = _useState18[0],\n      setProductProfileList = _useState18[1]; // const [breadCrumParentProductCategoryTypeName, setBreadCrumParentProductCategoryTypeName] = useState(\"sadfasf\");\n  // const [breadCrumParentProductCategoryName, setBreadCrumParentProductCategoryName] = useState(\"asfas\");\n\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      breadCrum = _useState20[0],\n      setBreadCrum = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      showProductCreateBtn = _useState22[0],\n      setShowProductCreateBtn = _useState22[1];\n\n  useEffect(function () {\n    setProductCategoryTreeDepth(getProductCategoryTreeDepth(categoryTypeTree));\n  });\n  useEffect(function () {\n    getAllProductCategoryTypeByCompanyWise(companyId);\n    getAllProductCategoryTreeByCompanyWise(companyId);\n    setCategoryTypeTree(tree);\n  }, []);\n  useEffect(function () {\n    getAllProductCategoryTypeByCompanyWise(companyId);\n    getAllProductCategoryTreeByCompanyWise(companyId);\n    setCategoryTypeTree(tree);\n    setProductProfileList([]);\n  }, [companyId]);\n  var productProfileUIEvents = {\n    newCategoryAddButtonClick: function newCategoryAddButtonClick() {\n      props.history.push(\"/inventory/configure/product-configure/list/add-category\");\n    },\n    newProductProfileButtonClick: function newProductProfileButtonClick() {\n      props.history.push({\n        pathname: \"/inventory/configure/product-configure/new\",\n        state: {\n          breadCrum: breadCrum\n        }\n      });\n    }\n  };\n\n  var getAllProductCategoryTypeByCompanyWise = function getAllProductCategoryTypeByCompanyWise(id) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category-type/list-info/\").concat(id);\n    axios.get(URL).then(function (response) {\n      if (response.data.data.length > 0) {\n        var productCategoryTypeList = response.data.data;\n        initialLocationTypes.current = productCategoryTypeList;\n        setProductCategoryTypes(productCategoryTypeList);\n        setIsUpdate(true);\n      } else {\n        initialLocationTypes.current = initialCategoryType;\n        setProductCategoryTypes([]);\n      }\n    });\n  };\n\n  var getAllProductCategoryTreeByCompanyWise = function getAllProductCategoryTreeByCompanyWise(id) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category/list-info/\").concat(id);\n    axios.get(URL).then(function (response) {\n      if (response.data.data.childProductCategoryDtoList.length > 0) {\n        setIsUpdate(true);\n        setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n      } else {\n        setCategoryTypeTree([]);\n      }\n    });\n  };\n\n  var getProductCategoryTreeDepth = function getProductCategoryTreeDepth(data) {\n    if (data.length === 0) {\n      return 0;\n    } else {\n      var max = 0;\n\n      for (var i = 0; i < data.length; i++) {\n        max = Math.max(max, getProductCategoryTreeDepth(data[i].children));\n      }\n\n      return 1 + max;\n    }\n  }; // Get all product by category ids\n\n\n  var selectProductCategoryName = function selectProductCategoryName(node) {\n    if (node !== '') {\n      getProductCategoryIds(node);\n    }\n\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category/get-all-product?ids=\").concat(categoryIds);\n    axios.get(URL).then(function (response) {\n      if (response.data.data) {\n        setProductProfileList(response.data.data);\n        setCategoryIds([]);\n      }\n    });\n  }; // Get category id recursively\n\n\n  var getProductCategoryIds = function getProductCategoryIds(node) {\n    var temp = _toConsumableArray(categoryIds);\n\n    var index = temp.findIndex(function (id) {\n      return id === node.id;\n    });\n\n    if (index === -1) {\n      categoryIds.push(node.id);\n    }\n\n    node.children.map(function (nodeChild) {\n      getProductCategoryIds(nodeChild);\n    });\n  };\n\n  var getBreadCrumByCategoryId = function getBreadCrumByCategoryId(id) {\n    var categoryNode = getCategoryNodeById(categoryTypeTree, id);\n    return getBreadCrum(categoryNode);\n  };\n\n  var getCategoryNodeById = function getCategoryNodeById(arr, id) {\n    for (var j = 0; j < arr.length; j++) {\n      if (arr[j].id == id) {\n        return arr[j];\n      } else {\n        var val = getCategoryNodeById(arr[j].children, id);\n\n        if (val) {\n          return val;\n        }\n      }\n    }\n\n    ;\n  };\n\n  var getBreadCrum = function getBreadCrum(node) {\n    setBreadCrum([]);\n    var level = '';\n    var breadCrumTemp = new Array();\n    var treeLevels = node.treeLevel.split('-');\n    var treeLength = treeLevels.length;\n    setShowProductCreateBtn(node.children.length == 0 && treeLength == productCategoryTypes.length);\n\n    if (treeLength > 1) {\n      level = treeLevels[0];\n      var rootNode = categoryTypeTree.find(function (obj) {\n        return obj.treeLevel === level;\n      });\n      breadCrumTemp.push(rootNode);\n\n      for (var i = 1; i < treeLength - 1; i++) {\n        level += '-' + treeLevels[i];\n        rootNode = rootNode.children.find(function (obj) {\n          return obj.treeLevel === level;\n        });\n        breadCrumTemp.push(rootNode);\n      }\n    }\n\n    breadCrumTemp.push(node);\n    setBreadCrum(breadCrumTemp);\n    return breadCrumTemp;\n  };\n\n  var addTreeNode = function addTreeNode(node) {\n    // add category type name\n    var treeLength = node.treeLevel.split('-').length;\n\n    if (productCategoryTypes.length == 0) {\n      showError(\"Please Add Level Setup\");\n      return;\n    } else {\n      if (node.treeLevel != '') {\n        node.nextCategoryType = productCategoryTypes[treeLength].name;\n      }\n\n      node.action = 'add';\n      props.history.push({\n        pathname: '/inventory/configure/product-configure/list/add-category',\n        state: node\n      });\n      /* if (node && node.hasOwnProperty(\"action\")) {\n          node.action = 'add';\n          props.history.push({ pathname: '/inventory/configure/product-configure/list/add-category', state: node });\n      } else {\n          props.history.push({ pathname: '/inventory/configure/product-configure/list/add-category', state: node });\n      } */\n    }\n  };\n\n  var updateTreeNode = function updateTreeNode(node) {\n    node.action = 'update';\n    props.history.push({\n      pathname: '/inventory/configure/product-configure/list/add-category',\n      state: node\n    });\n  };\n\n  var updateNode = function updateNode(productCategoryTree, treeLevel, productCategoryParams) {\n    productCategoryTree.map(function (node) {\n      // traverse every node to find match\n      if (node.treeLevel === treeLevel) {\n        node.name = productCategoryParams.categoryTypeName;\n        node.companyId = companyId;\n        setIsUpdate(true);\n        SetEditNode(node);\n        return;\n      } else {\n        updateNode(node.children, treeLevel, productCategoryParams);\n        return;\n      }\n    });\n  };\n\n  var deleteTreeNode = function deleteTreeNode(node) {\n    deleteNode(node);\n    props.history.push(\"/inventory/configure/product-configure/list\");\n  };\n\n  function deleteCategoryTreeNode(categoryTree, treeLevel) {\n    for (var i = 0; i < categoryTree.length; i++) {\n      if (categoryTree[i].treeLevel === treeLevel) {\n        categoryTree.splice(i, 1); //remove that node\n\n        return;\n      } else {\n        deleteCategoryTreeNode(categoryTree[i].children, treeLevel);\n      }\n    }\n  }\n\n  var deleteNode = function deleteNode(node) {\n    if (node.id) {\n      var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category/\").concat(node.id);\n      axios.delete(URL).then(function (response) {\n        if (response.data.success == true) {\n          showSuccess(response.data.message); // deleteCategoryTreeNode(categoryTypeTree, node.treeLevel);\n\n          setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n        } else {\n          showError(response.data.message);\n        }\n      }).catch(function (err) {\n        showError(err);\n      });\n    } else {\n      deleteCategoryTreeNode(categoryTypeTree, node.treeLevel);\n    }\n  };\n\n  var saveProductCategory = function saveProductCategory() {\n    var obj = {};\n    obj.childProductCategoryDtoList = categoryTypeTree;\n    obj.companyId = companyId;\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category/create-all\");\n    axios.post(URL, JSON.stringify(obj), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      if (response.data.success == true) {\n        setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n        showSuccess(response.data.message);\n      } else {\n        showError(response.data.message);\n      }\n    }).catch(function (err) {\n      showError(err);\n    });\n    props.history.push(\"/inventory/configure/product-configure/list\");\n  };\n\n  var updateProductCategory = function updateProductCategory() {\n    var obj = {};\n    obj.childProductCategoryDtoList = categoryTypeTree;\n    obj.companyId = companyId;\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category/update-all\");\n    axios.put(URL, JSON.stringify(obj), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      if (response.data.success == true) {\n        setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n        showSuccess(response.data.message);\n      } else {\n        showError(response.data.message);\n      }\n    }).catch(function (err) {\n      showError(err);\n    });\n    props.history.push(\"/inventory/configure/product-configure/list\");\n  };\n  /* const updateProductCategory = () => {\n      const URL = `${process.env.REACT_APP_API_URL}/api/product-category`;\n      axios.put(URL, JSON.stringify(editNode), { headers: { \"Content-Type\": \"application/json\" } }).then(response => {\n          if (response.data.success == true) {\n              setIsUpdate(false)\n              setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n              showSuccess(response.data.message)\n          } else {\n              showError(response.data.message);\n          }\n      }).catch(err => {\n          showError(err);\n      });\n      props.history.push(\"/inventory/configure/product-configure/list\");\n  } */\n\n\n  var handleCategorySubmit = function handleCategorySubmit() {\n    if (isUpdate) {\n      updateProductCategory();\n    } else {\n      saveProductCategory();\n    }\n  };\n\n  var exportData = function exportData(e) {\n    if (e.target.value === 'excel') {\n      console.log(singleAll);\n      handleExport();\n    }\n  };\n\n  var handleExport = function handleExport() {\n    var data = _toConsumableArray(singleAll);\n\n    if (data.length === 0) {\n      showError(\"No row is selected for export data\");\n      return;\n    }\n\n    var exportData = [];\n    data.map(function (row) {\n      var obj = {};\n      obj.productSku = row.product_sku;\n      obj.productName = row.name + ' ' + row.item_size + ' ' + row.uom_name + ' * ' + row.pack_size;\n      obj.expiryDays = row.expiry_days;\n      obj.minimumStock = row.minimum_stock;\n      exportData.push(obj);\n      setSingleAll([]);\n    });\n    var workbook = XLSX.utils.book_new();\n    var Heading = [[\"Product SKU\", \"Product Name\", \"Expiry Days\", \"Minimum Stock\"]];\n    var worksheet = XLSX.utils.json_to_sheet(exportData, {\n      origin: 'A2',\n      skipHeader: true\n    }); // creating sheet and adding data from 2nd row of column A.\n    // Leaving first row to add Heading\n\n    XLSX.utils.sheet_add_aoa(worksheet, Heading, {\n      origin: 'A1'\n    });\n    /* const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    for (let i = 0; i < Heading.length; i++) {\n        worksheet[letters.charAt(i).concat('1')].s = {\n            font: {\n                name: 'arial',\n                sz: 10,\n                bold: true,\n                color: \"#F2F2F2\"\n            },\n        }\n    } */\n\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n    XLSX.writeFile(workbook, \"ProductProfileList.xlsx\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    path: \"/inventory/configure/product-configure/list/add-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  }, function (_ref) {\n    var history = _ref.history,\n        match = _ref.match;\n    return /*#__PURE__*/React.createElement(LevelTreeModal, {\n      node: routeProductCategory.state,\n      show: match != null,\n      onHide: function onHide() {\n        history.push(\"/inventory/configure/product-configure/list\");\n      },\n      handleSubmit: function handleSubmit(productCategoryParams) {\n        var productCategoryTree = categoryTypeTree;\n\n        if (typeof routeProductCategory.state !== 'undefined' && routeProductCategory.state.action === 'update') {\n          // for update existing\n          updateNode(productCategoryTree, routeProductCategory.state.treeLevel, productCategoryParams);\n        } else {\n          // for add new// for add new\n          var treeLevel = '';\n          var _categorTypeNode = {\n            id: null,\n            name: productCategoryParams.categoryTypeName,\n            treeLevel: treeLevel,\n            typeName: routeProductCategory.state.nextCategoryType,\n            children: []\n          };\n\n          if (routeProductCategory.state.treeLevel === '') {\n            //  top layer node add\n            treeLevel = '' + (categoryTypeTree.length + 1);\n            _categorTypeNode.treeLevel = treeLevel;\n            productCategoryTree.push(_categorTypeNode);\n          } else {\n            // any child node add\n            treeLevel = routeProductCategory.state.treeLevel + '-' + (routeProductCategory.state.children.length + 1);\n            _categorTypeNode.treeLevel = treeLevel;\n            addNode(productCategoryTree, routeProductCategory.state.treeLevel, _categorTypeNode);\n          }\n        }\n\n        history.push(\"/inventory/configure/product-configure/list\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 21\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"-30px\",\n      marginLeft: \"-18px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    class: \"breadCrum-bg-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    \"aria-current\": \"page\",\n    className: \"breadCrum-main-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 25\n    }\n  }, \"Google\"), /*#__PURE__*/React.createElement(\"li\", {\n    \"aria-current\": \"page\",\n    className: \"mt-1 breadCrum-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 25\n    }\n  }, \"\\xA0Inventory\\xA0\\xA0\\xA0\\xA0\"), /*#__PURE__*/React.createElement(\"li\", {\n    \"aria-current\": \"page\",\n    className: \"mt-1 breadCrum-sub-title text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-weight-bolder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 99\n    }\n  }, \".\"), \"\\xA0 Configure \\xA0\\xA0\"), /*#__PURE__*/React.createElement(\"li\", {\n    \"aria-current\": \"page\",\n    className: \"mt-1 breadCrum-sub-title text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-weight-bolder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 99\n    }\n  }, \".\"), \"\\xA0 Product Configure\")))), hasAcess(permissions, 'PRODUCT_CONFIGURE') ? /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4 border border-left-0 border border-light border-primary border-bottom-0 border-top-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: \"levelTree\",\n    id: \"tab\",\n    className: \"mr-5 pr-5 mb-5 tabs-class\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"levelTree\",\n    title: \"Level Tree\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc1.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn ml-0 btn-sm\",\n    onClick: function onClick(event) {\n      event.preventDefault();\n      addTreeNode({\n        nextCategoryType: productCategoryTypes.length > 0 ? productCategoryTypes[0].name : '',\n        treeLevel: '',\n        children: []\n      }); //most top level\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-plus-circle-fill text-primary\",\n    style: {\n      fontSize: \"20px\",\n      marginLeft: \"-4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"tree-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CategoryTypeTree, {\n    tree: categoryTypeTree,\n    addTreeNode: addTreeNode,\n    updateTreeNode: updateTreeNode,\n    maxDepth: productCategoryTypes.length,\n    deleteTreeNode: deleteTreeNode,\n    selectProductCategoryName: selectProductCategoryName,\n    getBreadCrum: getBreadCrum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary btn-elevate float-right\",\n    onClick: handleCategorySubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 37\n    }\n  }, categoryTypeTree.length > 0 ? 'Update' : 'Save')), /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"levelSetup\",\n    title: \"Level Setup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(LevelSetup, {\n    setProductCategoryTypes: setProductCategoryTypes,\n    maxDepth: productCategoryTreeDepth,\n    productCategoryTypeDtoList: initialLocationTypes.current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"cardBackground\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-profile-breadcrum \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    class: \"breadCrum-bg-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 41\n    }\n  }, breadCrum.length > 0 && breadCrum.map(function (row, index) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      \"aria-current\": \"page\",\n      className: \"mt-1 breadCrum-sub-title\",\n      style: {\n        fontSize: \"13px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"bi bi-chevron-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 63\n      }\n    })), \"\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 57\n      }\n    }, row.typeName, \" \\xA0\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 57\n      }\n    }, row.name)));\n  })))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"create-field-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 45\n    }\n  }, \"Product Profile List\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"#B6B6B6\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 45\n    }\n  }, \"Total \", productProfileList.length, \" products \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8 d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardHeaderToolbar, {\n    title: \"Add Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 49\n    }\n  }, showProductCreateBtn ? /*#__PURE__*/React.createElement(\"button\", {\n    tree: categoryTypeTree,\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: productProfileUIEvents.newProductProfileButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 53\n    }\n  }, \"+ New Product Profile\") : '')), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginRight: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    \"aria-label\": \"Default select example\",\n    onChange: exportData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 53\n    }\n  }, \"Export\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"excel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 53\n    }\n  }, \"Excel\"))))), /*#__PURE__*/React.createElement(ProductConfigureTable, {\n    setSingleAll: setSingleAll,\n    singleAll: singleAll,\n    productProfileList: productProfileList,\n    setProductProfileList: setProductProfileList,\n    getBreadCrum: getBreadCrumByCategoryId,\n    reloadProductList: selectProductCategoryName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 37\n    }\n  }))))))) : /*#__PURE__*/React.createElement(UnauthorizedPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 15\n    }\n  }));\n}","map":{"version":3,"names":["React","useRef","useState","useEffect","Route","Card","CardBody","CardHeaderToolbar","ProductConfigureTable","axios","Tabs","Tab","LevelTreeModal","LevelSetup","toAbsoluteUrl","CategoryTypeTree","showSuccess","showError","useLocation","shallowEqual","useSelector","set","XLSX","UnauthorizedPage","hasAcess","categorTypeNode","id","name","level","children","tree","addNode","productCategoryTree","treeLevel","locationNode","map","node","push","ProductConfigurePage","props","permissions","state","auth","user","companyId","company","initialCategoryType","routeProductCategory","productCategoryTreeDepth","setProductCategoryTreeDepth","initialLocationTypes","categoryTypeTree","setCategoryTypeTree","isUpdate","setIsUpdate","productCategoryTypes","setProductCategoryTypes","editNode","SetEditNode","singleAll","setSingleAll","categoryIds","setCategoryIds","reloadCategoryIds","setReloadCategoryIds","productProfileList","setProductProfileList","breadCrum","setBreadCrum","showProductCreateBtn","setShowProductCreateBtn","getProductCategoryTreeDepth","getAllProductCategoryTypeByCompanyWise","getAllProductCategoryTreeByCompanyWise","productProfileUIEvents","newCategoryAddButtonClick","history","newProductProfileButtonClick","pathname","URL","process","env","REACT_APP_API_URL","get","then","response","data","length","productCategoryTypeList","current","childProductCategoryDtoList","max","i","Math","selectProductCategoryName","getProductCategoryIds","temp","index","findIndex","nodeChild","getBreadCrumByCategoryId","categoryNode","getCategoryNodeById","getBreadCrum","arr","j","val","breadCrumTemp","Array","treeLevels","split","treeLength","rootNode","find","obj","addTreeNode","nextCategoryType","action","updateTreeNode","updateNode","productCategoryParams","categoryTypeName","deleteTreeNode","deleteNode","deleteCategoryTreeNode","categoryTree","splice","delete","success","message","catch","err","saveProductCategory","post","JSON","stringify","headers","updateProductCategory","put","handleCategorySubmit","exportData","e","target","value","console","log","handleExport","row","productSku","product_sku","productName","item_size","uom_name","pack_size","expiryDays","expiry_days","minimumStock","minimum_stock","workbook","utils","book_new","Heading","worksheet","json_to_sheet","origin","skipHeader","sheet_add_aoa","book_append_sheet","writeFile","match","typeName","marginTop","marginLeft","width","height","textAlign","event","preventDefault","fontSize","color","marginRight"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Inventory/configure/product-configure/ProductConfigurePage.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport {\n    Card,\n    CardBody,\n    CardHeaderToolbar,\n} from \"../../../../../_metronic/_partials/controls\";\nimport { ProductConfigureTable } from \"./product-configure-table/ProductConfigureTable\";\nimport axios from \"axios\";\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport LevelTreeModal from './LevelTreeModal'\nimport LevelSetup from './LevelSetup'\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { CategoryTypeTree } from \"./CategoryTypeTree\"\nimport { showSuccess, showError } from '../../../../pages/Alert';\nimport { useLocation } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { set } from \"lodash\";\nimport * as XLSX from \"xlsx\";\nimport UnauthorizedPage from \"../../../Common/UnauthorizedPage\";\nimport { hasAcess } from \"../../../Util\";\n\n// this part is need to understand tree node\nvar categorTypeNode = {\n    id: null,\n    name: '',\n    level: '',\n    children: []\n};\n\nlet tree = [];\n\nconst addNode = (productCategoryTree, treeLevel, locationNode) => {\n    productCategoryTree.map((node) => {  // traverse every node to find match\n        if (node.treeLevel === treeLevel) {\n            node.children.push(locationNode);\n            return;\n        } else {\n            addNode(node.children, treeLevel, locationNode);\n            return;\n        }\n    });\n}\n\nexport default function ProductConfigurePage(props) {\n    const permissions = useSelector((state) => state.auth.user.permissions, shallowEqual);\n    const companyId = useSelector((state) => state.auth.company, shallowEqual);\n    // const routeLocation = useLocation();\n    const initialCategoryType = [{ name: '', level: 0, companyId: companyId, }];\n    const routeProductCategory = useLocation();\n    const [productCategoryTreeDepth, setProductCategoryTreeDepth] = useState();\n    const initialLocationTypes = useRef(initialCategoryType);\n    const [categoryTypeTree, setCategoryTypeTree] = useState(tree);\n    const [isUpdate, setIsUpdate] = useState(false);\n    const [productCategoryTypes, setProductCategoryTypes] = useState([]);\n    const [editNode, SetEditNode] = useState({});\n    const [singleAll, setSingleAll] = useState([]);\n    const [categoryIds, setCategoryIds] = useState([]);\n    const [reloadCategoryIds, setReloadCategoryIds] = useState([]);\n    const [productProfileList, setProductProfileList] = useState([]);\n    // const [breadCrumParentProductCategoryTypeName, setBreadCrumParentProductCategoryTypeName] = useState(\"sadfasf\");\n    // const [breadCrumParentProductCategoryName, setBreadCrumParentProductCategoryName] = useState(\"asfas\");\n    const [breadCrum, setBreadCrum] = useState([]);\n    const [showProductCreateBtn, setShowProductCreateBtn] = useState(false);\n\n\n    useEffect(() => {\n        setProductCategoryTreeDepth(getProductCategoryTreeDepth(categoryTypeTree));\n    });\n\n    useEffect(() => {\n        getAllProductCategoryTypeByCompanyWise(companyId);\n        getAllProductCategoryTreeByCompanyWise(companyId)\n        setCategoryTypeTree(tree);\n\n    }, []);\n\n    useEffect(() => {\n        getAllProductCategoryTypeByCompanyWise(companyId);\n        getAllProductCategoryTreeByCompanyWise(companyId)\n        setCategoryTypeTree(tree);\n        setProductProfileList([]);\n    }, [companyId]);\n\n    const productProfileUIEvents = {\n        newCategoryAddButtonClick: () => {\n            props.history.push(\"/inventory/configure/product-configure/list/add-category\");\n        },\n        newProductProfileButtonClick: () => {\n            props.history.push({pathname: \"/inventory/configure/product-configure/new\", state: { breadCrum }});\n        },\n    };\n\n    const getAllProductCategoryTypeByCompanyWise = (id) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category-type/list-info/${id}`;\n        axios.get(URL).then(response => {\n            if (response.data.data.length>0) {\n                const productCategoryTypeList = response.data.data;\n                initialLocationTypes.current = productCategoryTypeList;\n                setProductCategoryTypes(productCategoryTypeList);\n                setIsUpdate(true);\n            }else{\n                initialLocationTypes.current = initialCategoryType;\n                setProductCategoryTypes([]);\n            }\n        });\n    }\n\n    const getAllProductCategoryTreeByCompanyWise = (id) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category/list-info/${id}`;\n        axios.get(URL).then(response => {\n            if (response.data.data.childProductCategoryDtoList.length>0) {\n                setIsUpdate(true);\n                setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n            }else{\n                setCategoryTypeTree([]);\n            }\n        });\n    }\n\n    const getProductCategoryTreeDepth = (data) => {\n        if (data.length === 0) {\n            return 0;\n        } else {\n            let max = 0\n            for (let i = 0; i < data.length; i++) {\n                max = Math.max(max, getProductCategoryTreeDepth(data[i].children));\n            }\n            return 1 + max;\n        }\n    }\n\n    // Get all product by category ids\n    const selectProductCategoryName = (node) => {\n\n        if(node !== ''){\n            getProductCategoryIds(node);\n        }        \n\n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category/get-all-product?ids=${categoryIds}`\n        axios.get(URL).then(response => {\n            if (response.data.data) {\n                setProductProfileList(response.data.data)\n                setCategoryIds([]);\n            }\n        });\n    }\n\n    // Get category id recursively\n    const getProductCategoryIds = (node) => {\n        let temp = [...categoryIds]\n        let index = temp.findIndex(id => id === node.id)\n        if (index === - 1) {\n            categoryIds.push(node.id)\n        }\n        \n        node.children.map(nodeChild => {\n            getProductCategoryIds(nodeChild)\n        })    \n    }\n\n    const getBreadCrumByCategoryId = (id) => {\n        let categoryNode = getCategoryNodeById(categoryTypeTree,id);\n        return getBreadCrum(categoryNode);\n    }\n\n    const getCategoryNodeById = (arr, id) => {  \n        for(let j=0; j<arr.length; j++){         \n            if(arr[j].id == id){\n                return arr[j];\n            }else{\n                let val = getCategoryNodeById(arr[j].children, id)  \n                if(val){\n                    return val;\n                }            \n            }\n        };\n    }\n    \n    const getBreadCrum = (node) => {\n        setBreadCrum([])\n        \n        let level = ''        \n        const breadCrumTemp = new Array()\n        const treeLevels = node.treeLevel.split('-')\n        const treeLength = treeLevels.length\n\n        setShowProductCreateBtn(node.children.length == 0 && treeLength == productCategoryTypes.length);\n\n        if(treeLength > 1){\n            level = treeLevels[0]\n            let rootNode = categoryTypeTree.find(obj => obj.treeLevel === level)\n            breadCrumTemp.push(rootNode)\n            \n            for(let i=1; i<treeLength-1; i++){\n                level += '-' + treeLevels[i]\n                rootNode = rootNode.children.find(obj => obj.treeLevel === level)\n                breadCrumTemp.push(rootNode)\n            }\n        }\n        \n        breadCrumTemp.push(node)\n        setBreadCrum(breadCrumTemp)\n\n        return breadCrumTemp\n    }\n\n    const addTreeNode = (node) => { // add category type name\n        let treeLength = node.treeLevel.split('-').length\n        if (productCategoryTypes.length == 0) {\n            showError(\"Please Add Level Setup\");\n            return;\n        } else {\n            if(node.treeLevel != ''){\n                node.nextCategoryType = productCategoryTypes[treeLength].name\n            }\n        \n            node.action = 'add';\n            props.history.push({ pathname: '/inventory/configure/product-configure/list/add-category', state: node });\n\n            /* if (node && node.hasOwnProperty(\"action\")) {\n                node.action = 'add';\n                props.history.push({ pathname: '/inventory/configure/product-configure/list/add-category', state: node });\n            } else {\n                props.history.push({ pathname: '/inventory/configure/product-configure/list/add-category', state: node });\n            } */\n\n        }\n    }\n\n    const updateTreeNode = (node) => {\n        node.action = 'update';\n        props.history.push({ pathname: '/inventory/configure/product-configure/list/add-category', state: node });\n    }\n\n    const updateNode = (productCategoryTree, treeLevel, productCategoryParams) => {\n        productCategoryTree.map((node) => {  // traverse every node to find match\n            if (node.treeLevel === treeLevel) {\n                node.name = productCategoryParams.categoryTypeName;\n                node.companyId = companyId;\n                setIsUpdate(true)\n                SetEditNode(node)\n                return;\n            } else {\n                updateNode(node.children, treeLevel, productCategoryParams);\n                return;\n            }\n        });\n    }\n    \n    const deleteTreeNode = (node) => {\n        deleteNode(node);\n        props.history.push(\"/inventory/configure/product-configure/list\");\n    }\n\n    function deleteCategoryTreeNode(categoryTree, treeLevel) {\n        for (let i = 0; i < categoryTree.length; i++) {\n            if (categoryTree[i].treeLevel === treeLevel) {\n                categoryTree.splice(i, 1); //remove that node\n                return;\n            } else {\n                deleteCategoryTreeNode(categoryTree[i].children, treeLevel);\n            }\n        }\n    }\n\n    const deleteNode = (node) => {\n        if(node.id){\n            const URL = `${process.env.REACT_APP_API_URL}/api/product-category/${node.id}`;\n            axios.delete(URL).then(response => {\n                if (response.data.success == true) {\n                    showSuccess(response.data.message)\n                    // deleteCategoryTreeNode(categoryTypeTree, node.treeLevel);\n                    setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n                } else {\n                    showError(response.data.message);\n                }\n            }).catch(err => {\n                showError(err);\n            });\n        }else{\n            deleteCategoryTreeNode(categoryTypeTree, node.treeLevel);\n        }\n        \n    }\n\n    const saveProductCategory = () => {\n        let obj = {}\n        obj.childProductCategoryDtoList = categoryTypeTree;\n        obj.companyId = companyId;\n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category/create-all`;\n        axios.post(URL, JSON.stringify(obj), { headers: { \"Content-Type\": \"application/json\" } }).then(response => {\n            if (response.data.success == true) {\n                setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n                showSuccess(response.data.message)\n            } else {\n                showError(response.data.message);\n            }\n        }).catch(err => {\n            showError(err);\n        });\n        props.history.push(\"/inventory/configure/product-configure/list\");\n    }\n    \n    const updateProductCategory = () => {\n        let obj = {}\n        obj.childProductCategoryDtoList = categoryTypeTree;\n        obj.companyId = companyId;\n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category/update-all`;\n        axios.put(URL, JSON.stringify(obj), { headers: { \"Content-Type\": \"application/json\" } }).then(response => {\n            if (response.data.success == true) {\n                setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n                showSuccess(response.data.message)\n            } else {\n                showError(response.data.message);\n            }\n        }).catch(err => {\n            showError(err);\n        });\n        props.history.push(\"/inventory/configure/product-configure/list\");\n    }\n\n    /* const updateProductCategory = () => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category`;\n        axios.put(URL, JSON.stringify(editNode), { headers: { \"Content-Type\": \"application/json\" } }).then(response => {\n            if (response.data.success == true) {\n                setIsUpdate(false)\n                setCategoryTypeTree(response.data.data.childProductCategoryDtoList);\n                showSuccess(response.data.message)\n            } else {\n                showError(response.data.message);\n            }\n        }).catch(err => {\n            showError(err);\n        });\n        props.history.push(\"/inventory/configure/product-configure/list\");\n    } */\n\n    const handleCategorySubmit = () => {\n        if (isUpdate) {\n            updateProductCategory();\n        } else {\n            saveProductCategory();\n        }\n    }\n\n    const exportData = (e) => {\n        if(e.target.value === 'excel'){\n            console.log(singleAll)\n            handleExport();\n        }\n    }\n\n    const handleExport = () => {\n        const data = [...singleAll];\n        if (data.length === 0) {\n            showError(\"No row is selected for export data\");\n            return;\n        }\n        let exportData = [];\n        data.map(row => {\n            let obj = {};\n            obj.productSku = row.product_sku;\n            obj.productName = row.name + ' ' + row.item_size + ' ' + row.uom_name + ' * ' + row.pack_size;\n            obj.expiryDays = row.expiry_days;\n            obj.minimumStock = row.minimum_stock;\n            exportData.push(obj);\n            setSingleAll([]);\n        })\n        const workbook = XLSX.utils.book_new();\n        const Heading = [\n            [\"Product SKU\", \"Product Name\", \"Expiry Days\", \"Minimum Stock\"]\n        ];\n        const worksheet = XLSX.utils.json_to_sheet(exportData, {origin: 'A2', skipHeader: true});\n\n        // creating sheet and adding data from 2nd row of column A.\n        // Leaving first row to add Heading\n        XLSX.utils.sheet_add_aoa(worksheet, Heading, {origin: 'A1'});\n\n        /* const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        for (let i = 0; i < Heading.length; i++) {\n            worksheet[letters.charAt(i).concat('1')].s = {\n                font: {\n                    name: 'arial',\n                    sz: 10,\n                    bold: true,\n                    color: \"#F2F2F2\"\n                },\n            }\n        } */\n\n        XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n        XLSX.writeFile(workbook, \"ProductProfileList.xlsx\");\n    }\n\n    return (\n        <>\n            <Route path=\"/inventory/configure/product-configure/list/add-category\">\n                {({ history, match }) => (\n\n                    <LevelTreeModal\n                        node={routeProductCategory.state}\n                        show={match != null}\n                        onHide={() => {\n                            history.push(\"/inventory/configure/product-configure/list\");\n                        }}\n                        handleSubmit={(productCategoryParams) => {\n                            let productCategoryTree = categoryTypeTree;\n                            if (typeof routeProductCategory.state !== 'undefined' && routeProductCategory.state.action === 'update') {  // for update existing\n                                updateNode(productCategoryTree, routeProductCategory.state.treeLevel, productCategoryParams);\n                            } else { // for add new// for add new\n                                let treeLevel = ''\n                                let categorTypeNode = {\n                                    id: null,\n                                    name: productCategoryParams.categoryTypeName,\n                                    treeLevel: treeLevel,\n                                    typeName: routeProductCategory.state.nextCategoryType,\n                                    children: []\n                                };\n                                \n                                if (routeProductCategory.state.treeLevel === '') {  //  top layer node add\n                                    treeLevel = '' + (categoryTypeTree.length + 1);\n                                    categorTypeNode.treeLevel = treeLevel;\n                                    productCategoryTree.push(categorTypeNode);\n                                } else {  // any child node add\n                                    treeLevel = routeProductCategory.state.treeLevel + '-' + (routeProductCategory.state.children.length + 1);\n                                    categorTypeNode.treeLevel = treeLevel;\n                                    addNode(productCategoryTree, routeProductCategory.state.treeLevel, categorTypeNode);\n                                }\n                            }\n\n                            history.push(\"/inventory/configure/product-configure/list\");\n                        }}\n                    />\n                )}\n            </Route>\n            <div style={{ marginTop: \"-30px\", marginLeft: \"-18px\" }}>\n                <nav aria-label=\"breadcrumb\">\n                    <ol class=\"breadCrum-bg-color\">\n                        <li aria-current=\"page\" className='breadCrum-main-title'>Google</li>\n                        <li aria-current=\"page\" className='mt-1 breadCrum-sub-title'>&nbsp;Inventory&nbsp;&nbsp;&nbsp;&nbsp;</li>\n                        <li aria-current=\"page\" className='mt-1 breadCrum-sub-title text-primary'><span className='font-weight-bolder'>.</span>&nbsp; Configure &nbsp;&nbsp;</li>\n                        <li aria-current=\"page\" className='mt-1 breadCrum-sub-title text-primary'><span className='font-weight-bolder'>.</span>&nbsp; Product Configure</li>\n                    </ol>\n                </nav>\n            </div>\n\n            {hasAcess(permissions, 'PRODUCT_CONFIGURE') ? \n            <Card>\n                <CardBody>\n                    <div className=\"row\">\n                        <div className=\"col-lg-4 border border-left-0 border border-light border-primary border-bottom-0 border-top-0\">\n                            <Tabs\n                                defaultActiveKey=\"levelTree\" id=\"tab\" className=\"mr-5 pr-5 mb-5 tabs-class\"\n                                centered\n                            >\n                                <Tab eventKey=\"levelTree\" title=\"Level Tree\">\n                                    <div className='mt-5'>\n                                        <img src={toAbsoluteUrl(\"/images/loc1.png\")}\n                                            style={{ width: \"20px\", height: \"20px\", textAlign: \"center\" }} alt='Company Picture' />\n\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn ml-0 btn-sm\"\n                                            onClick={(event) => {\n                                                event.preventDefault();\n                                                addTreeNode({nextCategoryType: productCategoryTypes.length>0 ? productCategoryTypes[0].name : '', treeLevel: '', children: []}); //most top level\n                                            }}\n                                        >\n                                            <i className=\"bi bi-plus-circle-fill text-primary\" style={{ fontSize: \"20px\", marginLeft: \"-4px\" }}></i>\n                                        </button>\n                                    </div>\n                                    <nav className=\"tree-nav\">\n                                        <CategoryTypeTree\n                                            tree={categoryTypeTree}\n                                            addTreeNode={addTreeNode}\n                                            updateTreeNode={updateTreeNode}\n                                            maxDepth={productCategoryTypes.length}\n                                            deleteTreeNode={deleteTreeNode}\n                                            selectProductCategoryName={selectProductCategoryName}\n                                            getBreadCrum={getBreadCrum}\n                                        />\n                                    </nav>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-primary btn-elevate float-right\"\n                                        onClick={handleCategorySubmit}\n\n                                    >                                        \n                                        {(categoryTypeTree.length>0) ? 'Update' : 'Save'}\n                                    </button>\n                                </Tab>\n                                <Tab\n                                    eventKey=\"levelSetup\"\n                                    title=\"Level Setup\"\n                                >\n                                    <LevelSetup\n                                        setProductCategoryTypes={setProductCategoryTypes}\n                                        maxDepth={productCategoryTreeDepth}\n                                        productCategoryTypeDtoList={initialLocationTypes.current}\n                                    />\n                                </Tab>\n                            </Tabs>\n                        </div>\n                        <div className=\"col-lg-8\">\n                            <Card className=\"cardBackground\">\n                                <div className=\"product-profile-breadcrum \">\n                                    <nav aria-label=\"breadcrumb\">\n                                        <ol class=\"breadCrum-bg-color\">\n                                            {breadCrum.length>0 && breadCrum.map((row, index) => {\n                                                return (\n                                                    <>\n                                                    <li key={index} aria-current=\"page\" className='mt-1 breadCrum-sub-title' style={{ fontSize: \"13px\" }}>\n                                                        <span><i class=\"bi bi-chevron-right\"></i></span>&nbsp;\n                                                        <span>{row.typeName} &nbsp;</span>\n                                                        <span className=\"text-primary\">{row.name}</span>\n                                                    </li>\n                                                    </>\n                                                )                                                \n                                            })}                                            \n                                        </ol>\n                                    </nav>\n                                </div>\n                                <CardBody>\n                                    <div className=\"row\">\n                                        <div className=\"col-xl-4\">\n                                            <span className=\"create-field-title\">Product Profile List</span>\n                                            <p style={{ color: \"#B6B6B6\" }}>Total {productProfileList.length} products </p>\n                                        </div>\n                                        <div className=\"col-xl-8 d-flex justify-content-end\">\n                                            <div className=\"mr-5\">\n                                                <CardHeaderToolbar\n                                                    title=\"Add Profile\"\n                                                >\n                                                    {showProductCreateBtn ? \n                                                    <button\n                                                        tree={categoryTypeTree}\n                                                        type=\"button\"\n                                                        className=\"btn btn-primary\"\n                                                        onClick={productProfileUIEvents.newProductProfileButtonClick}\n                                                    >\n                                                        + New Product Profile\n                                                    </button> : ''}\n                                                </CardHeaderToolbar>\n                                            </div>\n                                            <div style={{ marginRight: \"20px\" }}>\n                                                <select className=\"form-control\" aria-label=\"Default select example\" onChange={exportData}>\n                                                    <option selected>Export</option>\n                                                    <option value=\"excel\">Excel</option>\n                                                    {/* <option value=\"2\">Two</option> */}\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <ProductConfigureTable setSingleAll={setSingleAll} singleAll={singleAll} \n                                        productProfileList={productProfileList} setProductProfileList={setProductProfileList}\n                                        getBreadCrum={getBreadCrumByCategoryId} reloadProductList={selectProductCategoryName}/>\n                                </CardBody>\n                            </Card>\n                        </div>\n                    </div>\n                </CardBody>\n            </Card>\n            : <UnauthorizedPage />}\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}