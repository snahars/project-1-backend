{"ast":null,"code":"import _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/GoogleMaterialExamples/inputs/TransferListExamplesPage.js\";\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, List, ListItem, Checkbox, Grid, Button, ListItemText, ListItemIcon, Card, CardHeader, Divider } from \"@material-ui/core\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      margin: \"auto\"\n    },\n    paper: {\n      width: 200,\n      height: 230,\n      overflow: \"auto\"\n    },\n    button: {\n      margin: theme.spacing(0.5, 0)\n    }\n  };\n});\n\nfunction not(a, b) {\n  return a.filter(function (value) {\n    return b.indexOf(value) === -1;\n  });\n}\n\nfunction intersection(a, b) {\n  return a.filter(function (value) {\n    return b.indexOf(value) !== -1;\n  });\n} // Example 2\n\n\nvar useStyles2 = makeStyles(function (theme) {\n  return {\n    root: {\n      margin: \"auto\"\n    },\n    cardHeader: {\n      padding: theme.spacing(1, 2)\n    },\n    list: {\n      width: 200,\n      height: 230,\n      backgroundColor: theme.palette.background.paper,\n      overflow: \"auto\"\n    },\n    button: {\n      margin: theme.spacing(0.5, 0)\n    }\n  };\n});\n\nfunction not2(a, b) {\n  return a.filter(function (value) {\n    return b.indexOf(value) === -1;\n  });\n}\n\nfunction intersection2(a, b) {\n  return a.filter(function (value) {\n    return b.indexOf(value) !== -1;\n  });\n}\n\nfunction union2(a, b) {\n  return [].concat(_toConsumableArray(a), _toConsumableArray(not2(b, a)));\n}\n\nexport default function TransferListExamplesPage() {\n  var _this = this;\n\n  // Example 1\n  var classes = useStyles();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var _React$useState3 = React.useState([0, 1, 2, 3]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      left = _React$useState4[0],\n      setLeft = _React$useState4[1];\n\n  var _React$useState5 = React.useState([4, 5, 6, 7]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      right = _React$useState6[0],\n      setRight = _React$useState6[1];\n\n  var leftChecked = intersection(checked, left);\n  var rightChecked = intersection(checked, right);\n\n  var handleToggle = function handleToggle(value) {\n    return function () {\n      var currentIndex = checked.indexOf(value);\n\n      var newChecked = _toConsumableArray(checked);\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setChecked(newChecked);\n    };\n  };\n\n  var handleAllRight = function handleAllRight() {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  var handleCheckedRight = function handleCheckedRight() {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  var handleCheckedLeft = function handleCheckedLeft() {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  var handleAllLeft = function handleAllLeft() {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  var customList = function customList(items) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dense: true,\n      component: \"div\",\n      role: \"list\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, items.map(function (value) {\n      var labelId = \"transfer-list-item-\".concat(value, \"-label\");\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: value,\n        role: \"listitem\",\n        button: true,\n        onClick: handleToggle(value),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: checked.indexOf(value) !== -1,\n        tabIndex: -1,\n        disableRipple: true,\n        inputProps: {\n          \"aria-labelledby\": labelId\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        id: labelId,\n        primary: \"List item \".concat(value + 1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    })));\n  }; // Example 2\n\n\n  var classes2 = useStyles2();\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      checked2 = _React$useState8[0],\n      setChecked2 = _React$useState8[1];\n\n  var _React$useState9 = React.useState([0, 1, 2, 3]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      left2 = _React$useState10[0],\n      setLeft2 = _React$useState10[1];\n\n  var _React$useState11 = React.useState([4, 5, 6, 7]),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      right2 = _React$useState12[0],\n      setRight2 = _React$useState12[1];\n\n  var leftChecked2 = intersection2(checked2, left2);\n  var rightChecked2 = intersection2(checked2, right2);\n\n  var handleToggle2 = function handleToggle2(value) {\n    return function () {\n      var currentIndex2 = checked2.indexOf(value);\n\n      var newChecked2 = _toConsumableArray(checked2);\n\n      if (currentIndex2 === -1) {\n        newChecked2.push(value);\n      } else {\n        newChecked2.splice(currentIndex2, 1);\n      }\n\n      setChecked2(newChecked2);\n    };\n  };\n\n  var numberOfChecked2 = function numberOfChecked2(items) {\n    return intersection2(checked2, items).length;\n  };\n\n  var handleToggleAll2 = function handleToggleAll2(items) {\n    return function () {\n      if (numberOfChecked2(items) === items.length) {\n        setChecked2(not2(checked2, items));\n      } else {\n        setChecked2(union2(checked2, items));\n      }\n    };\n  };\n\n  var handleCheckedRight2 = function handleCheckedRight2() {\n    setRight2(right2.concat(leftChecked2));\n    setLeft2(not2(left2, leftChecked2));\n    setChecked2(not2(checked2, leftChecked2));\n  };\n\n  var handleCheckedLeft2 = function handleCheckedLeft2() {\n    setLeft2(left2.concat(rightChecked2));\n    setRight2(not2(right2, rightChecked2));\n    setChecked2(not2(checked2, rightChecked2));\n  };\n\n  var customList2 = function customList2(title, items) {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      className: classes2.cardHeader,\n      avatar: /*#__PURE__*/React.createElement(Checkbox, {\n        onClick: handleToggleAll2(items),\n        checked: numberOfChecked2(items) === items.length && items.length !== 0,\n        indeterminate: numberOfChecked2(items) !== items.length && numberOfChecked2(items) !== 0,\n        disabled: items.length === 0,\n        inputProps: {\n          \"aria-label\": \"all items selected\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }),\n      title: title,\n      subheader: \"\".concat(numberOfChecked2(items), \"/\").concat(items.length, \" selected\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      className: classes2.list,\n      dense: true,\n      component: \"div\",\n      role: \"list\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    }, items.map(function (value) {\n      var labelId = \"transfer-list-all-item-\".concat(value, \"-label\");\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: value,\n        role: \"listitem\",\n        button: true,\n        onClick: handleToggle2(value),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: checked2.indexOf(value) !== -1,\n        tabIndex: -1,\n        disableRipple: true,\n        inputProps: {\n          \"aria-labelledby\": labelId\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        id: labelId,\n        primary: \"List item \".concat(value + 1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, \"A transfer list (or \\\"shuttle\\\") enables the user to move one or more list items between lists.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/transfer-list/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Simple Transfer List\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, \"For completeness, this example includes buttons for \\\"move all\\\", but not every transfer list needs these.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, customList(left)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleAllRight,\n    disabled: left.length === 0,\n    \"aria-label\": \"move all right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"flaticon2-fast-next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleCheckedRight,\n    disabled: leftChecked.length === 0,\n    \"aria-label\": \"move selected right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"flaticon2-next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: \"\".concat(classes.button),\n    onClick: handleCheckedLeft,\n    disabled: rightChecked.length === 0,\n    \"aria-label\": \"move selected left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"flaticon2-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleAllLeft,\n    disabled: right.length === 0,\n    \"aria-label\": \"move all left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"flaticon2-fast-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, customList(right))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Enhanced Transfer List\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, \"This example exchanges the \\\"move all\\\" buttons for a \\\"select all / select none\\\" checkbox, and adds a counter.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes2.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, customList2(\"Choices\", left2)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes2.button,\n    onClick: handleCheckedRight2,\n    disabled: leftChecked2.length === 0,\n    \"aria-label\": \"move selected right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"flaticon2-next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes2.button,\n    onClick: handleCheckedLeft2,\n    disabled: rightChecked2.length === 0,\n    \"aria-label\": \"move selected left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"flaticon2-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }, customList2(\"Chosen\", right2)))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Grid from '@material-ui/core/Grid';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport Button from '@material-ui/core/Button';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    margin: 'auto',\\n  },\\n  paper: {\\n    width: 200,\\n    height: 230,\\n    overflow: 'auto',\\n  },\\n  button: {\\n    margin: theme.spacing(0.5, 0),\\n  },\\n}));\\n\\nfunction not(a, b) {\\n  return a.filter(value => b.indexOf(value) === -1);\\n}\\n\\nfunction intersection(a, b) {\\n  return a.filter(value => b.indexOf(value) !== -1);\\n}\\n\\nexport default function TransferList() {\\n  const classes = useStyles();\\n  const [checked, setChecked] = React.useState([]);\\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\\n\\n  const leftChecked = intersection(checked, left);\\n  const rightChecked = intersection(checked, right);\\n\\n  const handleToggle = value => () => {\\n    const currentIndex = checked.indexOf(value);\\n    const newChecked = [...checked];\\n\\n    if (currentIndex === -1) {\\n      newChecked.push(value);\\n    } else {\\n      newChecked.splice(currentIndex, 1);\\n    }\\n\\n    setChecked(newChecked);\\n  };\\n\\n  const handleAllRight = () => {\\n    setRight(right.concat(left));\\n    setLeft([]);\\n  };\\n\\n  const handleCheckedRight = () => {\\n    setRight(right.concat(leftChecked));\\n    setLeft(not(left, leftChecked));\\n    setChecked(not(checked, leftChecked));\\n  };\\n\\n  const handleCheckedLeft = () => {\\n    setLeft(left.concat(rightChecked));\\n    setRight(not(right, rightChecked));\\n    setChecked(not(checked, rightChecked));\\n  };\\n\\n  const handleAllLeft = () => {\\n    setLeft(left.concat(right));\\n    setRight([]);\\n  };\\n\\n  const customList = items => (\\n    <Paper className={classes.paper}>\\n      <List dense component=\\\"div\\\" role=\\\"list\\\">\\n        {items.map(value => {\\n          const labelId = `transfer-list-item-${value}-label`;\\n\\n          return (\\n            <ListItem key={value} role=\\\"listitem\\\" button onClick={handleToggle(value)}>\\n              <ListItemIcon>\\n                <Checkbox\\n                  checked={checked.indexOf(value) !== -1}\\n                  tabIndex={-1}\\n                  disableRipple\\n                  inputProps={{ 'aria-labelledby': labelId }}\\n                />\\n              </ListItemIcon>\\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\\n            </ListItem>\\n          );\\n        })}\\n        <ListItem />\\n      </List>\\n    </Paper>\\n  );\\n\\n  return (\\n    <Grid container spacing={2} justify=\\\"center\\\" alignItems=\\\"center\\\" className={classes.root}>\\n      <Grid item>{customList(left)}</Grid>\\n      <Grid item>\\n        <Grid container direction=\\\"column\\\" alignItems=\\\"center\\\">\\n          <Button\\n            variant=\\\"outlined\\\"\\n            size=\\\"small\\\"\\n            className={classes.button}\\n            onClick={handleAllRight}\\n            disabled={left.length === 0}\\n            aria-label=\\\"move all right\\\"\\n          >\\n            \\u226B\\n          </Button>\\n          <Button\\n            variant=\\\"outlined\\\"\\n            size=\\\"small\\\"\\n            className={classes.button}\\n            onClick={handleCheckedRight}\\n            disabled={leftChecked.length === 0}\\n            aria-label=\\\"move selected right\\\"\\n          >\\n            &gt;\\n          </Button>\\n          <Button\\n            variant=\\\"outlined\\\"\\n            size=\\\"small\\\"\\n            className={classes.button}\\n            onClick={handleCheckedLeft}\\n            disabled={rightChecked.length === 0}\\n            aria-label=\\\"move selected left\\\"\\n          >\\n            &lt;\\n          </Button>\\n          <Button\\n            variant=\\\"outlined\\\"\\n            size=\\\"small\\\"\\n            className={classes.button}\\n            onClick={handleAllLeft}\\n            disabled={right.length === 0}\\n            aria-label=\\\"move all left\\\"\\n          >\\n            \\u226A\\n          </Button>\\n        </Grid>\\n      </Grid>\\n      <Grid item>{customList(right)}</Grid>\\n    </Grid>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Grid from '@material-ui/core/Grid';\\nimport List from '@material-ui/core/List';\\nimport Card from '@material-ui/core/Card';\\nimport CardHeader from '@material-ui/core/CardHeader';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport Button from '@material-ui/core/Button';\\nimport Divider from '@material-ui/core/Divider';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    margin: 'auto',\\n  },\\n  cardHeader: {\\n    padding: theme.spacing(1, 2),\\n  },\\n  list: {\\n    width: 200,\\n    height: 230,\\n    backgroundColor: theme.palette.background.paper,\\n    overflow: 'auto',\\n  },\\n  button: {\\n    margin: theme.spacing(0.5, 0),\\n  },\\n}));\\n\\nfunction not(a, b) {\\n  return a.filter(value => b.indexOf(value) === -1);\\n}\\n\\nfunction intersection(a, b) {\\n  return a.filter(value => b.indexOf(value) !== -1);\\n}\\n\\nfunction union(a, b) {\\n  return [...a, ...not(b, a)];\\n}\\n\\nexport default function TransferList() {\\n  const classes = useStyles();\\n  const [checked, setChecked] = React.useState([]);\\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\\n\\n  const leftChecked = intersection(checked, left);\\n  const rightChecked = intersection(checked, right);\\n\\n  const handleToggle = value => () => {\\n    const currentIndex = checked.indexOf(value);\\n    const newChecked = [...checked];\\n\\n    if (currentIndex === -1) {\\n      newChecked.push(value);\\n    } else {\\n      newChecked.splice(currentIndex, 1);\\n    }\\n\\n    setChecked(newChecked);\\n  };\\n\\n  const numberOfChecked = items => intersection(checked, items).length;\\n\\n  const handleToggleAll = items => () => {\\n    if (numberOfChecked(items) === items.length) {\\n      setChecked(not(checked, items));\\n    } else {\\n      setChecked(union(checked, items));\\n    }\\n  };\\n\\n  const handleCheckedRight = () => {\\n    setRight(right.concat(leftChecked));\\n    setLeft(not(left, leftChecked));\\n    setChecked(not(checked, leftChecked));\\n  };\\n\\n  const handleCheckedLeft = () => {\\n    setLeft(left.concat(rightChecked));\\n    setRight(not(right, rightChecked));\\n    setChecked(not(checked, rightChecked));\\n  };\\n\\n  const customList = (title, items) => (\\n    <Card>\\n      <CardHeader\\n        className={classes.cardHeader}\\n        avatar={\\n          <Checkbox\\n            onClick={handleToggleAll(items)}\\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\\n            disabled={items.length === 0}\\n            inputProps={{ 'aria-label': 'all items selected' }}\\n          />\\n        }\\n        title={title}\\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\\n      />\\n      <Divider />\\n      <List className={classes.list} dense component=\\\"div\\\" role=\\\"list\\\">\\n        {items.map(value => {\\n          const labelId = `transfer-list-all-item-${value}-label`;\\n\\n          return (\\n            <ListItem key={value} role=\\\"listitem\\\" button onClick={handleToggle(value)}>\\n              <ListItemIcon>\\n                <Checkbox\\n                  checked={checked.indexOf(value) !== -1}\\n                  tabIndex={-1}\\n                  disableRipple\\n                  inputProps={{ 'aria-labelledby': labelId }}\\n                />\\n              </ListItemIcon>\\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\\n            </ListItem>\\n          );\\n        })}\\n        <ListItem />\\n      </List>\\n    </Card>\\n  );\\n\\n  return (\\n    <Grid container spacing={2} justify=\\\"center\\\" alignItems=\\\"center\\\" className={classes.root}>\\n      <Grid item>{customList('Choices', left)}</Grid>\\n      <Grid item>\\n        <Grid container direction=\\\"column\\\" alignItems=\\\"center\\\">\\n          <Button\\n            variant=\\\"outlined\\\"\\n            size=\\\"small\\\"\\n            className={classes.button}\\n            onClick={handleCheckedRight}\\n            disabled={leftChecked.length === 0}\\n            aria-label=\\\"move selected right\\\"\\n          >\\n            &gt;\\n          </Button>\\n          <Button\\n            variant=\\\"outlined\\\"\\n            size=\\\"small\\\"\\n            className={classes.button}\\n            onClick={handleCheckedLeft}\\n            disabled={rightChecked.length === 0}\\n            aria-label=\\\"move selected left\\\"\\n          >\\n            &lt;\\n          </Button>\\n        </Grid>\\n      </Grid>\\n      <Grid item>{customList('Chosen', right)}</Grid>\\n    </Grid>\\n  );\\n}\\n\";","map":{"version":3,"names":["React","makeStyles","Paper","List","ListItem","Checkbox","Grid","Button","ListItemText","ListItemIcon","Card","CardHeader","Divider","Notice","KTCodeExample","useStyles","theme","root","margin","paper","width","height","overflow","button","spacing","not","a","b","filter","value","indexOf","intersection","useStyles2","cardHeader","padding","list","backgroundColor","palette","background","not2","intersection2","union2","TransferListExamplesPage","classes","useState","checked","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","handleAllRight","concat","handleCheckedRight","handleCheckedLeft","handleAllLeft","customList","items","map","labelId","classes2","checked2","setChecked2","left2","setLeft2","right2","setRight2","leftChecked2","rightChecked2","handleToggle2","currentIndex2","newChecked2","numberOfChecked2","length","handleToggleAll2","handleCheckedRight2","handleCheckedLeft2","customList2","title","jsCode1","jsCode2"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/GoogleMaterialExamples/inputs/TransferListExamplesPage.js"],"sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  Checkbox,\r\n  Grid,\r\n  Button,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Card,\r\n  CardHeader,\r\n  Divider\r\n} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: \"auto\"\r\n  },\r\n  paper: {\r\n    width: 200,\r\n    height: 230,\r\n    overflow: \"auto\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0)\r\n  }\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    margin: \"auto\"\r\n  },\r\n  cardHeader: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  list: {\r\n    width: 200,\r\n    height: 230,\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow: \"auto\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0)\r\n  }\r\n}));\r\n\r\nfunction not2(a, b) {\r\n  return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection2(a, b) {\r\n  return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union2(a, b) {\r\n  return [...a, ...not2(b, a)];\r\n}\r\n\r\nexport default function TransferListExamplesPage() {\r\n  // Example 1\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\r\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleAllRight = () => {\r\n    setRight(right.concat(left));\r\n    setLeft([]);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const handleAllLeft = () => {\r\n    setLeft(left.concat(right));\r\n    setRight([]);\r\n  };\r\n\r\n  const customList = items => (\r\n    <Paper className={classes.paper}>\r\n      <List dense component=\"div\" role=\"list\">\r\n        {items.map(value => {\r\n          const labelId = `transfer-list-item-${value}-label`;\r\n\r\n          return (\r\n            <ListItem\r\n              key={value}\r\n              role=\"listitem\"\r\n              button\r\n              onClick={handleToggle(value)}\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ \"aria-labelledby\": labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Paper>\r\n  );\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [checked2, setChecked2] = React.useState([]);\r\n  const [left2, setLeft2] = React.useState([0, 1, 2, 3]);\r\n  const [right2, setRight2] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked2 = intersection2(checked2, left2);\r\n  const rightChecked2 = intersection2(checked2, right2);\r\n\r\n  const handleToggle2 = value => () => {\r\n    const currentIndex2 = checked2.indexOf(value);\r\n    const newChecked2 = [...checked2];\r\n\r\n    if (currentIndex2 === -1) {\r\n      newChecked2.push(value);\r\n    } else {\r\n      newChecked2.splice(currentIndex2, 1);\r\n    }\r\n\r\n    setChecked2(newChecked2);\r\n  };\r\n\r\n  const numberOfChecked2 = items => intersection2(checked2, items).length;\r\n\r\n  const handleToggleAll2 = items => () => {\r\n    if (numberOfChecked2(items) === items.length) {\r\n      setChecked2(not2(checked2, items));\r\n    } else {\r\n      setChecked2(union2(checked2, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight2 = () => {\r\n    setRight2(right2.concat(leftChecked2));\r\n    setLeft2(not2(left2, leftChecked2));\r\n    setChecked2(not2(checked2, leftChecked2));\r\n  };\r\n\r\n  const handleCheckedLeft2 = () => {\r\n    setLeft2(left2.concat(rightChecked2));\r\n    setRight2(not2(right2, rightChecked2));\r\n    setChecked2(not2(checked2, rightChecked2));\r\n  };\r\n\r\n  const customList2 = (title, items) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes2.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll2(items)}\r\n            checked={\r\n              numberOfChecked2(items) === items.length && items.length !== 0\r\n            }\r\n            indeterminate={\r\n              numberOfChecked2(items) !== items.length &&\r\n              numberOfChecked2(items) !== 0\r\n            }\r\n            disabled={items.length === 0}\r\n            inputProps={{ \"aria-label\": \"all items selected\" }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked2(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <List className={classes2.list} dense component=\"div\" role=\"list\">\r\n        {items.map(value => {\r\n          const labelId = `transfer-list-all-item-${value}-label`;\r\n\r\n          return (\r\n            <ListItem\r\n              key={value}\r\n              role=\"listitem\"\r\n              button\r\n              onClick={handleToggle2(value)}\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked2.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ \"aria-labelledby\": labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          A transfer list (or \"shuttle\") enables the user to move one or more\r\n          list items between lists.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/transfer-list/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple Transfer List\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              For completeness, this example includes buttons for \"move all\",\r\n              but not every transfer list needs these.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes.root}\r\n            >\r\n              <Grid item>{customList(left)}</Grid>\r\n              <Grid item>\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    onClick={handleAllRight}\r\n                    disabled={left.length === 0}\r\n                    aria-label=\"move all right\"\r\n                  >\r\n                    <i className=\"flaticon2-fast-next\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    onClick={handleCheckedRight}\r\n                    disabled={leftChecked.length === 0}\r\n                    aria-label=\"move selected right\"\r\n                  >\r\n                    <i className=\"flaticon2-next\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={`${classes.button}`}\r\n                    onClick={handleCheckedLeft}\r\n                    disabled={rightChecked.length === 0}\r\n                    aria-label=\"move selected left\"\r\n                  >\r\n                    <i className=\"flaticon2-back\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    onClick={handleAllLeft}\r\n                    disabled={right.length === 0}\r\n                    aria-label=\"move all left\"\r\n                  >\r\n                    <i className=\"flaticon2-fast-back\" />\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>{customList(right)}</Grid>\r\n            </Grid>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Enhanced Transfer List\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              This example exchanges the \"move all\" buttons for a \"select all /\r\n              select none\" checkbox, and adds a counter.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes2.root}\r\n            >\r\n              <Grid item>{customList2(\"Choices\", left2)}</Grid>\r\n              <Grid item>\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes2.button}\r\n                    onClick={handleCheckedRight2}\r\n                    disabled={leftChecked2.length === 0}\r\n                    aria-label=\"move selected right\"\r\n                  >\r\n                    <i className=\"flaticon2-next\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes2.button}\r\n                    onClick={handleCheckedLeft2}\r\n                    disabled={rightChecked2.length === 0}\r\n                    aria-label=\"move selected left\"\r\n                  >\r\n                    <i className=\"flaticon2-back\" />\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>{customList2(\"Chosen\", right2)}</Grid>\r\n            </Grid>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    width: 200,\r\n    height: 230,\r\n    overflow: 'auto',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  },\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\nexport default function TransferList() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\r\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleAllRight = () => {\r\n    setRight(right.concat(left));\r\n    setLeft([]);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const handleAllLeft = () => {\r\n    setLeft(left.concat(right));\r\n    setRight([]);\r\n  };\r\n\r\n  const customList = items => (\r\n    <Paper className={classes.paper}>\r\n      <List dense component=\"div\" role=\"list\">\r\n        {items.map(value => {\r\n          const labelId = \\`transfer-list-item-\\${value}-label\\`;\r\n\r\n          return (\r\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={\\`List item \\${value + 1}\\`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n      <Grid item>{customList(left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleAllRight}\r\n            disabled={left.length === 0}\r\n            aria-label=\"move all right\"\r\n          >\r\n            ≫\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleAllLeft}\r\n            disabled={right.length === 0}\r\n            aria-label=\"move all left\"\r\n          >\r\n            ≪\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList(right)}</Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: 'auto',\r\n  },\r\n  cardHeader: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  list: {\r\n    width: 200,\r\n    height: 230,\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow: 'auto',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  },\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nexport default function TransferList() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\r\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = items => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = items => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const customList = (title, items) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\r\n            disabled={items.length === 0}\r\n            inputProps={{ 'aria-label': 'all items selected' }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={\\`\\${numberOfChecked(items)}/\\${items.length} selected\\`}\r\n      />\r\n      <Divider />\r\n      <List className={classes.list} dense component=\"div\" role=\"list\">\r\n        {items.map(value => {\r\n          const labelId = \\`transfer-list-all-item-\\${value}-label\\`;\r\n\r\n          return (\r\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={\\`List item \\${value + 1}\\`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n      <Grid item>{customList('Choices', left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList('Chosen', right)}</Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}