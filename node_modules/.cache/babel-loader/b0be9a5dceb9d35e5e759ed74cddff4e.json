{"ast":null,"code":"var _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Inventory/configure/product-configure/LevelSetup.js\";\nimport React from \"react\";\nimport { Formik, Form, Field, FieldArray } from \"formik\";\nimport { Input } from \"../../../../../_metronic/_partials/controls\";\nimport { showError, showSuccess } from '../../../../pages/Alert';\nimport axios from \"axios\";\nexport default function LevelSetup(props) {\n  var _this = this;\n\n  var isValidate = function isValidate(listOfFields) {\n    var validate = true;\n\n    if (isAnyFieldEmpty(listOfFields)) {\n      validate = false;\n    }\n\n    return validate;\n  };\n\n  var isAnyFieldEmpty = function isAnyFieldEmpty(listOfFields) {\n    var empty = false;\n\n    for (var i = 0; i < listOfFields.length; i++) {\n      if (typeof listOfFields[i].name === \"undefined\" || listOfFields[i].name === '') {\n        empty = true;\n        showError(\"Product Category Type is empty at Level \" + (i + 1)); // level is start from 1 , not from 0\n\n        break;\n      }\n    }\n\n    return empty;\n  };\n\n  var handleDelete = function handleDelete(id) {\n    console.log(id);\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category-type/\").concat(id);\n    axios.delete(URL).then(function (response) {\n      if (response.data.success == true) {\n        showSuccess(response.data.message);\n      } else {\n        showError(response.data.message);\n      }\n    }).catch(function (err) {\n      showError(err);\n    });\n  };\n\n  var handleSubmit = function handleSubmit(data) {\n    var obj = {};\n    obj.productCategoryTypeDtoList = data;\n    console.log(obj);\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category-type/create-all\");\n    axios.post(URL, JSON.stringify(obj), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      if (response.data.success == true) {\n        showSuccess(response.data.message);\n        props.setProductCategoryTypes(data);\n      } else {\n        showError(\"Category types already created\");\n      }\n    }).catch(function (err) {\n      showError(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      productCategoryTypeDtoList: props.productCategoryTypeDtoList\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, function (_ref) {\n    var values = _ref.values;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n      className: \"form form-label-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FieldArray, {\n      name: \"productCategoryTypeDtoList\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, function (_ref2) {\n      var remove = _ref2.remove,\n          push = _ref2.push;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      }, values.productCategoryTypeDtoList.length > 0 && values.productCategoryTypeDtoList.map(function (row, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-xl-9\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row mt-3\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-xl-3\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"mt-3\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 35\n          }\n        }, \"Level \", index + 1)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-xl-9\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          name: \"productCategoryTypeDtoList.\".concat(index, \".name\"),\n          id: \"name\",\n          type: \"text\",\n          component: Input,\n          placeholder: \"Level Name\",\n          onKeyUp: function onKeyUp() {\n            return props.setProductCategoryTypes(values.productCategoryTypeDtoList);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 35\n          }\n        })))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-xl-3\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }\n        }, index === 0 ? \"\" : /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn ml-0 btn-sm mt-5\",\n          onClick: function onClick() {\n            if (index + 1 > props.maxDepth) {\n              remove(index);\n              handleDelete(row.id);\n            } else {\n              showError(\"This Product Category Type is already used in Product Category\");\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          style: {\n            marginLeft: \"-15px\",\n            fontSize: \"16px\"\n          },\n          class: \"bi bi-trash3-fill text-danger\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 37\n          }\n        })), values.productCategoryTypeDtoList.length - 1 == index ? /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm mt-5\",\n          onClick: function onClick() {\n            return push({\n              name: '',\n              level: values.productCategoryTypeDtoList.length,\n              companyId: 2\n            });\n          } // add new field in formic\n          ,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"bi bi-plus-circle-fill text-primary\",\n          style: {\n            marginLeft: \"-15px\",\n            fontSize: \"16px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 37\n          }\n        })) : \"\")));\n      }));\n    }), /*#__PURE__*/React.createElement(\"footer\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"save-btn\",\n      onClick: function onClick() {\n        if (isValidate(values.productCategoryTypeDtoList)) {\n          handleSubmit(values.productCategoryTypeDtoList);\n        }\n\n        ; // add new field in formic\n      },\n      className: \"btn btn-primary  btn-sm float-right ml-3 mt-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"Save\"))));\n  }));\n}","map":{"version":3,"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Inventory/configure/product-configure/LevelSetup.js"],"names":["React","Formik","Form","Field","FieldArray","Input","showError","showSuccess","axios","LevelSetup","props","isValidate","listOfFields","validate","isAnyFieldEmpty","empty","i","length","name","handleDelete","id","console","log","URL","process","env","REACT_APP_API_URL","delete","then","response","data","success","message","catch","err","handleSubmit","obj","productCategoryTypeDtoList","post","JSON","stringify","headers","setProductCategoryTypes","values","remove","push","map","row","index","maxDepth","marginLeft","fontSize","level","companyId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, FieldArray } from \"formik\";\nimport {\n  Input,\n} from \"../../../../../_metronic/_partials/controls\";\nimport { showError, showSuccess } from '../../../../pages/Alert';\nimport axios from \"axios\";\n\nexport default function LevelSetup(props) {\n  const isValidate = (listOfFields) => {\n    let validate = true;\n    if (isAnyFieldEmpty(listOfFields)) {\n      validate = false;\n    }\n    return validate;\n  }\n  const isAnyFieldEmpty = (listOfFields) => {\n    let empty = false;\n    for (let i = 0; i < listOfFields.length; i++) {\n      if (typeof (listOfFields[i].name) === \"undefined\" || listOfFields[i].name === '') {\n        empty = true;\n        showError(\"Product Category Type is empty at Level \" + (i + 1)); // level is start from 1 , not from 0\n        break;\n      }\n    }\n    return empty;\n  }\n\n  const handleDelete = (id) => {\n    console.log(id)\n    const URL = `${process.env.REACT_APP_API_URL}/api/product-category-type/${id}`;\n    axios.delete(URL).then(response => {\n      if (response.data.success == true) {\n        showSuccess(response.data.message)\n      }\n      else{\n        showError(response.data.message);\n      }\n    }).catch(err => {\n      showError(err);\n    });\n  }\n\n  const handleSubmit = (data) => {\n    let obj = {};\n    obj.productCategoryTypeDtoList = data;\n    console.log(obj)\n    const URL = `${process.env.REACT_APP_API_URL}/api/product-category-type/create-all`;\n    axios.post(URL, JSON.stringify(obj), { headers: { \"Content-Type\": \"application/json\" } }).then(response => {\n      if (response.data.success == true) {\n        showSuccess(response.data.message)\n        props.setProductCategoryTypes(data)\n      } else {\n        showError(\"Category types already created\");\n      }\n    }).catch(err => {\n      showError(err);\n    });\n  }\n\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n          productCategoryTypeDtoList: props.productCategoryTypeDtoList\n        }}\n      >\n        {({ values }) => (\n          <>\n            <Form className=\"form form-label-right\">\n              <FieldArray name=\"productCategoryTypeDtoList\">\n                {({ remove, push }) => (\n                  <div>\n                    {values.productCategoryTypeDtoList.length > 0 &&\n                      values.productCategoryTypeDtoList.map((row, index) => (\n\n                        <div key={index}>\n                          <div className=\"row\">\n                            <div className=\"col-xl-9\">\n                              <div className=\"row mt-3\">\n                                <div className=\"col-xl-3\">\n                                  <label className=\"mt-3\">Level {index + 1}</label>\n                                </div>\n                                <div className=\"col-xl-9\">\n                                  <Field\n                                    name={`productCategoryTypeDtoList.${index}.name`}\n                                    id=\"name\"\n                                    type=\"text\"\n                                    component={Input}\n                                    placeholder=\"Level Name\"\n                                    onKeyUp={() => props.setProductCategoryTypes(values.productCategoryTypeDtoList)}\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-xl-3\">\n\n                              {\n                                index === 0 ? \"\"\n                                  :\n                                  <button\n                                    type=\"button\"\n                                    className=\"btn ml-0 btn-sm mt-5\"\n                                    onClick={() => {\n                                      if ((index + 1) > props.maxDepth) {\n                                        remove(index);\n                                        handleDelete(row.id);\n                                      } else {\n                                        showError(\"This Product Category Type is already used in Product Category\");\n                                      }\n                                    }\n                                    }\n                                  >\n                                    <i style={{ marginLeft: \"-15px\", fontSize: \"16px\" }} class=\"bi bi-trash3-fill text-danger\"></i>\n                                  </button>\n                              }\n                              {\n                                values.productCategoryTypeDtoList.length - 1 == index ?\n                                  <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm mt-5\"\n                                    onClick={() =>\n                                      push({\n                                        name: '',\n                                        level: values.productCategoryTypeDtoList.length,\n                                        companyId: 2,\n                                      }) // add new field in formic\n                                    }\n                                  >\n                                    <i class=\"bi bi-plus-circle-fill text-primary\" style={{ marginLeft: \"-15px\", fontSize: \"16px\" }}></i>\n                                  </button>\n                                  : \"\"\n                              }\n\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                  </div>\n                )}\n              </FieldArray>\n              <footer>\n                <button\n                  id=\"save-btn\"\n                  onClick={() => {\n                    if (isValidate(values.productCategoryTypeDtoList)) {\n                      handleSubmit(values.productCategoryTypeDtoList)\n                    };  // add new field in formic\n                  }}\n                  className=\"btn btn-primary  btn-sm float-right ml-3 mt-5\"\n                >\n                  Save\n                </button>\n              </footer>\n            </Form>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}