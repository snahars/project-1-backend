{"ast":null,"code":"import _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Production/Batch Preparation/tabs/batch-preparation/table/BatchPreparationList.js\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { ActionsColumnFormatter } from \"./ActionsColumnFormatter\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\nimport { useIntl } from \"react-intl\";\nexport function BatchPreparationList(_ref) {\n  var _this = this;\n\n  var setSingleAll = _ref.setSingleAll,\n      singleAll = _ref.singleAll,\n      productList = _ref.productList;\n  var intl = useIntl();\n  var history = useHistory();\n  {\n    /**const openViewPage = (data) => {\n     history.push('/production/batch-preparation/product-profile-view', { state: data });\n    } */\n  }\n\n  var openBatchCreatePage = function openBatchCreatePage(data) {\n    history.push('/production/batch-preparation/product-create-batch', {\n      state: data\n    });\n  };\n\n  var openQRPage = function openQRPage(data) {\n    history.push('/production/batch-preparation/qr', {\n      state: data\n    });\n  };\n\n  var singleWiseSelectHandler = function singleWiseSelectHandler(data, isSelect) {\n    if (isSelect == true) {\n      var temp = _toConsumableArray(singleAll);\n\n      temp.push(data);\n      setSingleAll(temp);\n    } else {\n      if (singleAll.length >= 0) {\n        var _temp = _toConsumableArray(singleAll);\n\n        var index = _temp.findIndex(function (obj) {\n          return obj.id == data.id;\n        });\n\n        _temp.splice(index, 1);\n\n        setSingleAll(_temp);\n      }\n    }\n  };\n\n  var allSelectHandler = function allSelectHandler(allData, isSelect) {\n    if (isSelect == true) {\n      setSingleAll(allData);\n    } else {\n      if (allData.length >= 0) {\n        var _loop = function _loop(i) {\n          var index = singleAll.findIndex(function (obj) {\n            return obj.id == allData[i].id;\n          });\n          singleAll.splice(index, 1);\n          setSingleAll(singleAll);\n        };\n\n        for (var i = 0; i < allData.length; i++) {\n          _loop(i);\n        }\n      }\n    }\n  };\n\n  var columns = [{\n    dataField: \"code\",\n    text: \"PRODUCTS INFO\",\n    formatter: function formatter(cellContent, row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-muted\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, row.productSku), /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 65\n        }\n      }), /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, row.productName), /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 47\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-muted\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, row.productCategory, \"/\"));\n    }\n  }, {\n    /*{\n     dataField: \"sales_officer\",\n     text: \"Current Stock (In PCs)\",\n     formatter: (cellContent, row) => (\n       <>\n       {\n         row.balance == 0 ?\n         <>\n          <strong className=\"text-muted\">{row.balance}&nbsp;<span className=\"text-danger\">(Out Of Stock)</span></strong><br />\n         <div class=\"progress mt-3\" style={{ height: \"5px\" }}>\n           <div class=\"progress-bar bg-danger\" role=\"progressbar\" style={{ width: \"70px\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n         </div>\n         </>:\n         row.balance == 50 ?\n         <>\n          <strong className=\"text-muted\">{row.balance}&nbsp;<span className=\"text-warning\">(Out Of Stock)</span></strong><br />\n         <div class=\"progress mt-3\" style={{ height: \"5px\" }}>\n           <div class=\"progress-bar bg-warning\" role=\"progressbar\" style={{ width: \"70px\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n         </div>\n         </>:\n         <>\n         <strong className=\"text-muted\">{row.balance}&nbsp;</strong><br />\n         <div class=\"progress mt-3\" style={{ height: \"5px\" }}>\n           <div class=\"progress-bar dark-success-bg\" role=\"progressbar\" style={{ width: \"70px\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n         </div>\n        </>\n       }\n         \n        </>\n     )\n    },*/\n  }, {\n    /*\n    {\n     dataField: \"sales_officer\",\n     text: \"W.A. Rate\",\n     formatter: (cellContent, row) => (\n       <>\n         <strong>{row.balance}</strong><br />\n       </>\n     )\n    },*/\n  }, {\n    dataField: \"action\",\n    text: intl.formatMessage({\n      id: \"MENU.ACTIONS\"\n    }),\n    formatter: ActionsColumnFormatter,\n    formatExtraData: {\n      //openViewPage: openViewPage,\n      openCreditPage: openBatchCreatePage,\n      openQRPage: openQRPage\n    },\n    classes: \"text-center\",\n    headerClasses: \"text-center\",\n    style: {\n      minWidth: \"100px\"\n    }\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BootstrapTable, {\n    wrapperClasses: \"table-responsive\",\n    classes: \"table table-head-custom table-vertical-center overflow-hidden\",\n    bootstrap4: true,\n    bordered: false,\n    keyField: \"id\",\n    data: productList,\n    columns: columns,\n    selectRow: {\n      mode: 'checkbox',\n      onSelect: function onSelect(row, isSelect, rowIndex, e) {\n        singleWiseSelectHandler(row, isSelect);\n      },\n      onSelectAll: function onSelectAll(isSelect, rows, e) {\n        allSelectHandler(rows, isSelect);\n      }\n    },\n    pagination: paginationFactory({\n      sizePerPage: 10,\n      showTotal: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useHistory","BootstrapTable","paginationFactory","ActionsColumnFormatter","SVG","toAbsoluteUrl","useIntl","BatchPreparationList","setSingleAll","singleAll","productList","intl","history","openBatchCreatePage","data","push","state","openQRPage","singleWiseSelectHandler","isSelect","temp","length","index","findIndex","obj","id","splice","allSelectHandler","allData","i","columns","dataField","text","formatter","cellContent","row","productSku","productName","productCategory","formatMessage","formatExtraData","openCreditPage","classes","headerClasses","style","minWidth","mode","onSelect","rowIndex","e","onSelectAll","rows","sizePerPage","showTotal"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Production/Batch Preparation/tabs/batch-preparation/table/BatchPreparationList.js"],"sourcesContent":["\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { ActionsColumnFormatter } from \"./ActionsColumnFormatter\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\nimport { useIntl } from \"react-intl\";\n\nexport function BatchPreparationList({ setSingleAll, singleAll, productList}) {\n  const intl = useIntl();\n  let history = useHistory();\n\n  {/**const openViewPage = (data) => {\n    history.push('/production/batch-preparation/product-profile-view', { state: data });\n  } */}\n  const openBatchCreatePage = (data) => {\n    history.push('/production/batch-preparation/product-create-batch', { state: data });\n  }\n  const openQRPage = (data) => {\n    history.push('/production/batch-preparation/qr', { state: data });\n  }\n\n  const singleWiseSelectHandler = (data, isSelect) => {\n    if (isSelect == true) {\n      let temp = [...singleAll]\n      temp.push(data)\n      setSingleAll(temp)\n    } else {\n      if (singleAll.length >= 0) {\n        let temp = [...singleAll]\n        const index = temp.findIndex(obj => obj.id == data.id);\n        temp.splice(index, 1);\n        setSingleAll(temp)\n      }\n    }\n\n  }\n  const allSelectHandler = (allData, isSelect) => {\n    if (isSelect == true) {\n      setSingleAll(allData)\n    }\n    else {\n      if (allData.length >= 0) {\n        for (let i = 0; i < allData.length; i++) {\n          const index = singleAll.findIndex(obj => obj.id == allData[i].id);\n          singleAll.splice(index, 1);\n          setSingleAll(singleAll)\n        }\n      }\n    }\n\n  }\n  const columns = [\n    {\n      dataField: \"code\",\n      text: \"PRODUCTS INFO\",\n      formatter: (cellContent, row) => (\n        <>\n            <span className=\"text-muted\">{row.productSku}</span><br />\n            <strong>{row.productName}</strong><br />\n            <span className=\"text-muted\">{row.productCategory }/</span>\n        </>\n      )\n    },\n    {/*{\n      dataField: \"sales_officer\",\n      text: \"Current Stock (In PCs)\",\n      formatter: (cellContent, row) => (\n        <>\n        {\n          row.balance == 0 ?\n          <>\n           <strong className=\"text-muted\">{row.balance}&nbsp;<span className=\"text-danger\">(Out Of Stock)</span></strong><br />\n          <div class=\"progress mt-3\" style={{ height: \"5px\" }}>\n            <div class=\"progress-bar bg-danger\" role=\"progressbar\" style={{ width: \"70px\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n          </div>\n          </>:\n          row.balance == 50 ?\n          <>\n           <strong className=\"text-muted\">{row.balance}&nbsp;<span className=\"text-warning\">(Out Of Stock)</span></strong><br />\n          <div class=\"progress mt-3\" style={{ height: \"5px\" }}>\n            <div class=\"progress-bar bg-warning\" role=\"progressbar\" style={{ width: \"70px\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n          </div>\n          </>:\n          <>\n          <strong className=\"text-muted\">{row.balance}&nbsp;</strong><br />\n          <div class=\"progress mt-3\" style={{ height: \"5px\" }}>\n            <div class=\"progress-bar dark-success-bg\" role=\"progressbar\" style={{ width: \"70px\" }} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n          </div>\n         </>\n        }\n          \n\n        </>\n      )\n    },*/\n    },\n    {/*\n  {\n      dataField: \"sales_officer\",\n      text: \"W.A. Rate\",\n      formatter: (cellContent, row) => (\n        <>\n          <strong>{row.balance}</strong><br />\n        </>\n      )\n    },*/},\n    {\n      dataField: \"action\",\n      text: intl.formatMessage({ id: \"MENU.ACTIONS\" }),\n      formatter: ActionsColumnFormatter,\n      formatExtraData: {\n        //openViewPage: openViewPage,\n        openCreditPage: openBatchCreatePage,\n        openQRPage: openQRPage\n      },\n      classes: \"text-center\",\n      headerClasses: \"text-center\",\n      style: {\n        minWidth: \"100px\",\n      },\n    },\n  ];\n\n  return (\n    <>\n      <BootstrapTable\n        wrapperClasses=\"table-responsive\"\n        classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n        bootstrap4\n        bordered={false}\n        keyField=\"id\"\n        data={productList}\n        columns={columns}\n        selectRow={\n          {\n            mode: 'checkbox',\n            onSelect: (row, isSelect, rowIndex, e) => {\n              singleWiseSelectHandler(row, isSelect);\n            },\n            onSelectAll: (isSelect, rows, e) => {\n              allSelectHandler(rows, isSelect);\n\n            }\n\n          }\n        }\n\n        pagination={paginationFactory({ sizePerPage: 10, showTotal: true })}\n      />\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}