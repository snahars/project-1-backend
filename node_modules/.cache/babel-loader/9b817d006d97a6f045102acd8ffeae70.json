{"ast":null,"code":"import _defineProperty from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/InvoiceTypeWiseSummaryReport.js\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport { getDayDiff, getDaysCount } from \"../../../Util\";\nexport default function InvoiceTypeWiseSummaryReport() {\n  var _this = this;\n\n  var fields = {\n    locationId: \"\",\n    salesOfficerId: \"\",\n    distributorId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    report: \"\",\n    reportType: \"\"\n  };\n\n  var _useState = useState(fields),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var userId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n  var companyId = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var selectedCompany = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var userLoginId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n  var intl = useIntl();\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      locationTree = _useState4[0],\n      setLocationTree = _useState4[1];\n\n  var _useState5 = useState({\n    userLoginId: userId,\n    companyId: companyId\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sessionData = _useState6[0],\n      setSessionData = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      accountingYearId = _useState8[0],\n      setAccountingYearId = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      locationId = _useState10[0],\n      setLocationId = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      productCategoryId = _useState12[0],\n      setProductCategoryId = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      salesOfficer = _useState14[0],\n      setSalesOfficer = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      salesOfficerValue = _useState16[0],\n      setSalesOfficerValue = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      distributorValue = _useState18[0],\n      setDistributorValue = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      distributors = _useState20[0],\n      setDistributors = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      showReport = _useState22[0],\n      setShowReport = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      reportData = _useState24[0],\n      setReportData = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 1),\n      locationIds = _useState26[0];\n\n  var searchParams = useMemo(function () {\n    return {\n      userLoginId: userLoginId,\n      companyId: selectedCompany,\n      accountingYearId: accountingYearId,\n      locationId: locationId,\n      productCategoryId: productCategoryId\n    };\n  }, [userLoginId, selectedCompany, accountingYearId, locationId, productCategoryId]);\n\n  var _useState27 = useState({}),\n      _useState28 = _slicedToArray(_useState27, 2),\n      selectedLocation = _useState28[0],\n      setSelectedLocation = _useState28[1];\n\n  var _useState29 = useState({\n    totalQuantity: 0,\n    totlaSalesAmount: 0\n  }),\n      _useState30 = _slicedToArray(_useState29, 2),\n      total = _useState30[0],\n      setTotal = _useState30[1];\n\n  var _useState31 = useState([]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      salesDataList = _useState32[0],\n      setInvoiceWiseAgingReportList = _useState32[1];\n\n  var history = useHistory();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      singleAll = _React$useState4[0],\n      setSingleAll = _React$useState4[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? 'simple-popper' : undefined;\n  useEffect(function () {\n    document.getElementById('reportShowIframe').style.display = \"none\";\n    getLocationTreeList(searchParams);\n  }, [userLoginId, selectedCompany]);\n\n  var getLocationTreeList = function getLocationTreeList(params) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/location-tree/locationTree/\").concat(params.userLoginId, \"/\").concat(params.companyId);\n    axios.get(URL).then(function (response) {\n      var locationTree = response.data.data;\n      setLocationTree(locationTree);\n    }).catch(function (err) {\n      showError(\"Cannot get Location Tree data.\");\n    });\n  };\n\n  var selectLocationTreeNode = function selectLocationTreeNode(node) {\n    var id = \"summary-id-\" + node.id;\n    var getId = document.getElementById(id);\n    var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n    for (var i = 0; i < getElements.length; i++) {\n      getElements[i].classList.remove('tree-nav-item');\n    }\n\n    if (getId) {\n      getId.classList.add('tree-nav-item');\n      setSelectedLocation(node);\n      setLocationId(node.id);\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"locationId\": node.id\n      }));\n\n      if (node.id) {\n        getSalesOfficerListByLocation(node.id, selectedCompany);\n        getAllDistributorList(userId, node.id, selectedCompany);\n      }\n    }\n\n    if (locationIds.length !== 0) {\n      // for clear state\n      locationIds.length = 0;\n    }\n\n    getLocationIds(node);\n  };\n\n  var getLocationIds = function getLocationIds(node) {\n    var temp = _toConsumableArray(locationIds);\n\n    var index = temp.findIndex(function (id) {\n      return id === node.id;\n    });\n\n    if (index === -1) {\n      locationIds.push(node.id);\n    }\n\n    node.children.map(function (nodeChild) {\n      getLocationIds(nodeChild);\n    });\n  };\n\n  var getSalesOfficerListByLocation = function getSalesOfficerListByLocation(locationId, companyId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/auth/get-sales-officer-location/\").concat(locationId, \"/\").concat(companyId);\n    axios.get(URL).then(function (response) {\n      console.log(response.data.data);\n\n      if (response.data.data != undefined) {\n        console.log(response.data.data);\n        setSalesOfficer(response.data.data);\n      } else {\n        setSalesOfficer([]);\n        setSalesOfficerValue('');\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Company data.\");\n    });\n  };\n\n  var getAllDistributorList = function getAllDistributorList(userLoginId, locationId, companyId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/distributor/distributorList/\").concat(userLoginId, \"/\").concat(locationId, \"/\").concat(companyId); //API call from backend\n\n    axios.get(URL).then(function (response) {\n      //get data in response\n      console.log('hello', response.data.data);\n\n      if (response.data.data != undefined && response.data.data.length != 0) {\n        setDistributors(response.data.data);\n      } else {\n        setDistributors([]);\n        setDistributorValue('');\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Distributor data.\");\n    });\n  };\n\n  var handleChangeDistributor = function handleChangeDistributor(e, dis) {\n    if (dis.distributorId !== null || dis.distributorId !== \"\") {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        distributorId: parseInt(dis.distributorId)\n      }));\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    setInputs(function (values) {\n      return _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var validate = function validate() {\n    console.log(\"inputs=\", inputs); // if (!inputs.locationId) {\n    //     showError('Location is required.');\n    //     return false;\n    // }\n    // else if (!inputs.salesOfficerId) {\n    //     showError('Sales Officer Name is required.');\n    //     return false;\n    // }\n    // else if (!inputs.distributorId) {\n    //     showError('Distributor Name is required.');\n    //     return false;\n    // }\n    // else \n\n    if (inputs.startDate === undefined || inputs.startDate === \"\") {//showError(\"Start date  is required\");\n    } else if (inputs.endDate === undefined || inputs.endDate === \"\") {//showError(\"End date is required\");\n    } else if (new Date(inputs.endDate) < new Date(inputs.startDate)) {\n      showError(\"End Date should be greater than Start Date.\");\n      return false;\n    } // else if (!inputs.report) {\n    //     showError('Report Format is required.');\n    //     return false;\n    // }\n    // else if (!inputs.reportType) {\n    //     showError('Report Type is required.');\n    //     return false;\n    // }\n\n\n    return true;\n  };\n\n  var download = function download() {\n    if (inputs.locationId === \"\") {\n      // all location pass when none selected\n      locationTree.map(function (childLocation) {\n        getLocationIds(childLocation);\n      });\n    }\n\n    if (!validate()) {\n      return false;\n    }\n\n    var queryString = '?';\n    queryString += 'companyId=' + companyId;\n    queryString += inputs.salesOfficerId ? '&salesOfficerId=' + parseInt(inputs.salesOfficerId) : '';\n    queryString += '&reportFormat=' + \"excel\";\n    queryString += '&startDate=' + inputs.startDate;\n    queryString += '&endDate=' + inputs.endDate;\n    queryString += inputs.distributorId ? '&distributorId=' + parseInt(inputs.distributorId) : ''; //queryString += '&locationId=' + parseInt(inputs.locationId);\n\n    queryString += locationIds.length !== 0 ? '&locationIds=' + locationIds : '';\n    console.log(queryString);\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/reports/invoice-type-wise-summary-report\") + queryString;\n    axios.get(URL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var url = window.URL.createObjectURL(new Blob([response.data]));\n      var link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', \"invoiceTypeWiseSummaryReport.xlsx\");\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var preview = function preview() {\n    if (inputs.locationId === \"\") {\n      // all location pass when none selected\n      locationTree.map(function (childLocation) {\n        getLocationIds(childLocation);\n      });\n    }\n\n    if (!validate()) {\n      return false;\n    }\n\n    var queryString = '?';\n    queryString += 'companyId=' + companyId;\n    queryString += inputs.salesOfficerId ? '&salesOfficerId=' + parseInt(inputs.salesOfficerId) : '';\n    queryString += '&reportFormat=' + \"pdf\";\n    queryString += '&startDate=' + inputs.startDate;\n    queryString += '&endDate=' + inputs.endDate;\n    queryString += inputs.distributorId ? '&distributorId=' + parseInt(inputs.distributorId) : ''; //queryString += '&locationId=' + parseInt(inputs.locationId);\n\n    queryString += locationIds.length !== 0 ? '&locationIds=' + locationIds : '';\n    var dataURL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/reports/invoice-type-wise-summary-report\") + queryString;\n    axios.get(dataURL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var file = new Blob([response.data], {\n        type: \"application/pdf\"\n      });\n      var fileURL = URL.createObjectURL(file);\n      var iframe = document.querySelector(\"iframe\");\n      if (iframe === null || iframe === void 0 ? void 0 : iframe.src) iframe.src = fileURL;\n      document.getElementById('reportShowIframe').style.display = \"inline-block\";\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var getReportData = function getReportData() {\n    if (!validate()) {\n      return false;\n    }\n\n    setShowReport(inputs.reportType); // if(!validate()){\n    //     return false;\n    // }\n    // let queryString = \"?\";\n    // queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n    // queryString += '&startDate=' + inputs.startDate;\n    // queryString += '&endDate=' + inputs.endDate;\n    //const URL = `${process.env.REACT_APP_API_URL}/api/reports/distributor-ledger-view`+queryString;\n\n    axios.get(URL).then(function (response) {\n      setReportData(response.data.data);\n      setShowReport(true);\n    }).catch();\n  }; // console.log(inputs)\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MisReportBreadCrum, {\n    menuTitle: \"Invoice Type Wise Summary Report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-3\",\n    style: {\n      borderRight: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottom: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc3.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginLeft: \"10px\",\n      color: \"#828282\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 41\n    }\n  }, intl.formatMessage({\n    id: \"COMMON.LOCATION_ALL\"\n  })))), /*#__PURE__*/React.createElement(LocationTreeView, {\n    tree: locationTree,\n    selectLocationTreeNode: selectLocationTreeNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 45\n    }\n  }, \"Sales Officer\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 97\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    name: \"salesOfficerId\",\n    options: salesOfficer,\n    onKeyDown: getSalesOfficerListByLocation,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.salesOfficerName;\n    },\n    value: salesOfficerValue,\n    onChange: function onChange(event, newValue) {\n      setSalesOfficerValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          salesOfficerId: newValue.id\n        }));\n      } else {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          salesOfficerId: ''\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Sales Officer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 53\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 72\n    }\n  }, \"Distributor\")), /*#__PURE__*/React.createElement(Autocomplete //id=\"distributorId\"\n  , {\n    name: \"distributorId\",\n    options: distributors,\n    onKeyDown: getAllDistributorList,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.distributorName;\n    },\n    value: distributorValue,\n    onChange: function onChange(event, newValue) {\n      setDistributorValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          distributorId: newValue.distributorId\n        }));\n      } else {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          distributorId: ''\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Distributor\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 49\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 41\n    }\n  }, \"Start Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 82\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"startDate\",\n    placeholder: \"dd-MM-yyyy\",\n    name: \"startDate\",\n    value: inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 41\n    }\n  }, \"End Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 80\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"endDate\",\n    placeholder: \"dd-MM-yyyy\",\n    name: \"endDate\",\n    value: inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    required: true,\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: download,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 33\n    }\n  }, \"Download\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-5 mr-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 37\n    }\n  }, \"Preview\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    src: \"\",\n    className: \"w-100\",\n    id: \"reportShowIframe\",\n    height: \"500px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 29\n    }\n  }))))));\n}","map":{"version":3,"names":["React","useEffect","useMemo","useState","toAbsoluteUrl","Card","CardBody","useHistory","LocationTreeView","showError","axios","useIntl","shallowEqual","useSelector","MisReportBreadCrum","Autocomplete","TextField","Button","typeOf","moment","Flatpickr","getDayDiff","getDaysCount","InvoiceTypeWiseSummaryReport","fields","locationId","salesOfficerId","distributorId","startDate","endDate","report","reportType","inputs","setInputs","userId","state","auth","user","companyId","company","selectedCompany","userLoginId","intl","locationTree","setLocationTree","sessionData","setSessionData","accountingYearId","setAccountingYearId","setLocationId","productCategoryId","setProductCategoryId","salesOfficer","setSalesOfficer","salesOfficerValue","setSalesOfficerValue","distributorValue","setDistributorValue","distributors","setDistributors","showReport","setShowReport","reportData","setReportData","locationIds","searchParams","selectedLocation","setSelectedLocation","totalQuantity","totlaSalesAmount","total","setTotal","salesDataList","setInvoiceWiseAgingReportList","history","anchorEl","setAnchorEl","singleAll","setSingleAll","handleClick","event","currentTarget","open","Boolean","id","undefined","document","getElementById","style","display","getLocationTreeList","params","URL","process","env","REACT_APP_API_URL","get","then","response","data","catch","err","selectLocationTreeNode","node","getId","getElements","getElementsByClassName","i","length","classList","remove","add","getSalesOfficerListByLocation","getAllDistributorList","getLocationIds","temp","index","findIndex","push","children","map","nodeChild","console","log","handleChangeDistributor","e","dis","parseInt","handleChange","name","target","value","values","validate","Date","download","childLocation","queryString","responseType","url","window","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","removeChild","preview","dataURL","file","type","fileURL","iframe","querySelector","src","getReportData","borderRight","borderBottom","width","height","textAlign","marginLeft","color","formatMessage","marginTop","option","salesOfficerName","newValue","distributorName","format","dateFormat"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/InvoiceTypeWiseSummaryReport.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\n\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport { getDayDiff, getDaysCount } from \"../../../Util\"\n\n\nexport default function InvoiceTypeWiseSummaryReport() {\n\n    const fields = {\n        locationId: \"\",\n        salesOfficerId: \"\",\n        distributorId: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        report: \"\",\n        reportType: \"\"\n\n    };\n\n    const [inputs, setInputs] = useState(fields);\n    const userId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const companyId = useSelector((state) => state.auth.company, shallowEqual);\n    const selectedCompany = useSelector((state) => state.auth.company, shallowEqual);\n    const userLoginId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const intl = useIntl();\n    const [locationTree, setLocationTree] = useState([]);\n    const [sessionData, setSessionData] = useState({ userLoginId: userId, companyId: companyId });\n    const [accountingYearId, setAccountingYearId] = useState('');\n    const [locationId, setLocationId] = useState('');\n    const [productCategoryId, setProductCategoryId] = useState('');\n    const [salesOfficer, setSalesOfficer] = useState([]);\n    const [salesOfficerValue, setSalesOfficerValue] = useState(null);\n    const [distributorValue, setDistributorValue] = useState(null);\n    const [distributors, setDistributors] = useState([]);\n    const [showReport, setShowReport] = useState('');\n    const [reportData, setReportData] = useState([]);\n    const [locationIds] = useState([]);\n\n\n    const searchParams = useMemo(() => {\n        return {\n            userLoginId: userLoginId, companyId: selectedCompany, accountingYearId: accountingYearId\n            , locationId: locationId, productCategoryId: productCategoryId\n        }\n    }, [userLoginId, selectedCompany, accountingYearId, locationId, productCategoryId]);\n\n    const [selectedLocation, setSelectedLocation] = useState({});\n    const [total, setTotal] = useState({ totalQuantity: 0, totlaSalesAmount: 0 });\n    const [salesDataList, setInvoiceWiseAgingReportList] = useState([]);\n\n    let history = useHistory();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    let [singleAll, setSingleAll] = React.useState([]);\n\n    const handleClick = (event) => {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popper' : undefined;\n\n\n    useEffect(() => {\n        document.getElementById('reportShowIframe').style.display = \"none\";\n        getLocationTreeList(searchParams);\n    }, [userLoginId, selectedCompany]);\n\n    const getLocationTreeList = (params) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/location-tree/locationTree/${params.userLoginId}/${params.companyId}`;\n        axios.get(URL).then(response => {\n            const locationTree = response.data.data;\n            setLocationTree(locationTree);\n        }).catch(err => {\n            showError(\"Cannot get Location Tree data.\");\n        });\n    }\n\n    const selectLocationTreeNode = (node) => {\n        let id = \"summary-id-\" + node.id;\n        const getId = document.getElementById(id);\n        const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n        for (var i = 0; i < getElements.length; i++) {\n            getElements[i].classList.remove('tree-nav-item');\n        }\n        if (getId) {\n            getId.classList.add('tree-nav-item');\n            setSelectedLocation(node);\n            setLocationId(node.id);\n            setInputs({ ...inputs, \"locationId\": node.id })\n            if (node.id) {\n                getSalesOfficerListByLocation(node.id, selectedCompany)\n                getAllDistributorList(userId, node.id, selectedCompany)\n            }\n        }\n        if (locationIds.length !== 0) { // for clear state\n            locationIds.length = 0;\n        }\n        getLocationIds(node);\n    }\n\n    const getLocationIds = (node) => {\n        let temp = [...locationIds]\n        let index = temp.findIndex(id => id === node.id)\n        if (index === -1) {\n            locationIds.push(node.id)\n        }\n        node.children.map(nodeChild => {\n            getLocationIds(nodeChild)\n        })\n    }\n\n    const getSalesOfficerListByLocation = (locationId, companyId) => {\n        const URL = `${process.env.REACT_APP_API_URL}/auth/get-sales-officer-location/${locationId}/${companyId}`;\n        axios.get(URL).then(response => {\n            console.log(response.data.data)\n            if (response.data.data != undefined) {\n                console.log(response.data.data)\n                setSalesOfficer(response.data.data);\n            }\n            else {\n                setSalesOfficer([]);\n                setSalesOfficerValue('');\n            }\n        }).catch(err => {\n            showError(\"Cannot get Company data.\");\n        });\n    }\n\n\n    const getAllDistributorList = (userLoginId, locationId, companyId) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/distributor/distributorList/${userLoginId}/${locationId}/${companyId}`;//API call from backend\n        axios.get(URL).then(response => {//get data in response\n            console.log('hello', response.data.data)\n            if (response.data.data != undefined && response.data.data.length != 0) {\n                setDistributors(response.data.data);\n            }\n            else {\n                setDistributors([]);\n                setDistributorValue('');\n            }\n        }).catch(err => {\n            showError(\"Cannot get Distributor data.\");\n        });\n    }\n    const handleChangeDistributor = (e, dis) => {\n        if (dis.distributorId !== null || dis.distributorId !== \"\") {\n            setInputs({ ...inputs, distributorId: parseInt(dis.distributorId) });\n        }\n    }\n\n    const handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setInputs(values => ({ ...values, [name]: value }))\n    }\n\n    const validate = () => {\n        console.log(\"inputs=\", inputs)\n\n        // if (!inputs.locationId) {\n        //     showError('Location is required.');\n        //     return false;\n        // }\n        // else if (!inputs.salesOfficerId) {\n        //     showError('Sales Officer Name is required.');\n        //     return false;\n        // }\n        // else if (!inputs.distributorId) {\n        //     showError('Distributor Name is required.');\n        //     return false;\n        // }\n        // else \n        if (inputs.startDate === undefined || inputs.startDate === \"\") {\n            //showError(\"Start date  is required\");\n        } else if (inputs.endDate === undefined || inputs.endDate === \"\") {\n            //showError(\"End date is required\");\n        } else if (new Date(inputs.endDate) < new Date(inputs.startDate)) {\n            showError(\"End Date should be greater than Start Date.\");\n            return false;\n        } \n        // else if (!inputs.report) {\n        //     showError('Report Format is required.');\n        //     return false;\n        // }\n        // else if (!inputs.reportType) {\n        //     showError('Report Type is required.');\n        //     return false;\n        // }\n        return true;\n    }\n\n    const download = () => {\n\n        if (inputs.locationId === \"\") {\n            // all location pass when none selected\n            locationTree.map(childLocation => {\n                getLocationIds(childLocation);\n            })\n        }\n        if (!validate()) {\n            return false;\n        }\n        let queryString = '?';\n        queryString += 'companyId=' + companyId;\n        queryString += inputs.salesOfficerId ? '&salesOfficerId=' + parseInt(inputs.salesOfficerId) : '';\n        queryString += '&reportFormat=' + \"excel\";\n        queryString += '&startDate=' + inputs.startDate;\n        queryString += '&endDate=' + inputs.endDate;\n        queryString += inputs.distributorId ? '&distributorId=' + parseInt(inputs.distributorId) : '';\n        //queryString += '&locationId=' + parseInt(inputs.locationId);\n        queryString += locationIds.length !== 0 ? '&locationIds=' + locationIds : '';\nconsole.log(queryString);\n        const URL = `${process.env.REACT_APP_API_URL}/api/reports/invoice-type-wise-summary-report` + queryString;\n        axios.get(URL, { responseType: 'blob' }).then(response => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', \"invoiceTypeWiseSummaryReport.xlsx\");\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n\n        }).catch(err => {\n            showError();\n        });\n\n    }\n\n    const preview = () => {\n\n        if (inputs.locationId === \"\") {\n            // all location pass when none selected\n            locationTree.map(childLocation => {\n                getLocationIds(childLocation);\n            })\n        }\n        if (!validate()) {\n            return false;\n        }\n        let queryString = '?';\n        queryString += 'companyId=' + companyId;\n        queryString += inputs.salesOfficerId ? '&salesOfficerId=' + parseInt(inputs.salesOfficerId) : '';\n        queryString += '&reportFormat=' + \"pdf\";\n        queryString += '&startDate=' + inputs.startDate;\n        queryString += '&endDate=' + inputs.endDate;\n        queryString += inputs.distributorId ? '&distributorId=' + parseInt(inputs.distributorId) : '';\n        //queryString += '&locationId=' + parseInt(inputs.locationId);\n        queryString += locationIds.length !== 0 ? '&locationIds=' + locationIds : '';\n\n        const dataURL = `${process.env.REACT_APP_API_URL}/api/reports/invoice-type-wise-summary-report` + queryString;\n        axios.get(dataURL, { responseType: 'blob' }).then(response => {\n            const file = new Blob([response.data], { type: \"application/pdf\" });\n            const fileURL = URL.createObjectURL(file);\n            const iframe = document.querySelector(\"iframe\");\n            if (iframe?.src) iframe.src = fileURL;\n            document.getElementById('reportShowIframe').style.display = \"inline-block\";\n\n        }).catch(err => {\n            showError();\n        });\n\n    }\n    const getReportData = () => {\n        if (!validate()) {\n            return false;\n        }\n        setShowReport(inputs.reportType);\n        // if(!validate()){\n        //     return false;\n        // }\n        // let queryString = \"?\";\n        // queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n        // queryString += '&startDate=' + inputs.startDate;\n        // queryString += '&endDate=' + inputs.endDate;\n\n        //const URL = `${process.env.REACT_APP_API_URL}/api/reports/distributor-ledger-view`+queryString;\n        axios.get(URL).then((response) => {\n            setReportData(response.data.data);\n            setShowReport(true);\n        }).catch();\n    }\n    // console.log(inputs)\n    return (\n        <>\n            <div>\n                <MisReportBreadCrum menuTitle=\"Invoice Type Wise Summary Report\" />\n            </div>\n            <div>\n                <Card>\n                    <CardBody>\n                        <div className='row'>\n                            {/* LEFT SIDE TREE ROW */}\n                            <div className='col-xl-3' style={{ borderRight: \"1px solid #F2F2F2\" }}>\n                                <div style={{ borderBottom: \"1px solid #F2F2F2\" }}>\n                                    <label>\n                                        <img src={toAbsoluteUrl(\"/images/loc3.png\")}\n                                            style={{ width: \"20px\", height: \"20px\", textAlign: \"center\" }}\n                                            alt='Company Picture' />\n                                        <strong style={{ marginLeft: \"10px\", color: \"#828282\" }}>{intl.formatMessage({ id: \"COMMON.LOCATION_ALL\" })}</strong>\n                                    </label>\n                                </div>\n                                {/* TREE */}\n                                <LocationTreeView tree={locationTree} selectLocationTreeNode={selectLocationTreeNode} />\n                            </div>\n                            {/* RIGHT SIDE LIST ROW */}\n                            <div className='col-xl-9'>\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <div style={{ marginTop: \"5px\" }}>\n                                            <label className='level-title'>Sales Officer</label><br />\n                                            <Autocomplete\n                                                name=\"salesOfficerId\"\n                                                options={salesOfficer}\n                                                onKeyDown={getSalesOfficerListByLocation}\n                                                getOptionLabel={(option) => option.salesOfficerName}\n                                                value={salesOfficerValue}\n                                                onChange={(event, newValue) => {\n                                                    setSalesOfficerValue(newValue)\n                                                    if (newValue !== null) {\n                                                        setInputs({ ...inputs, salesOfficerId: newValue.id });\n                                                    } else {\n                                                        setInputs({ ...inputs, salesOfficerId: '' });\n                                                    }\n                                                }}\n                                                renderInput={(params) => (\n                                                    <TextField {...params} label=\"Select Sales Officer\" />\n                                                )}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <label className='level-title'><span className=\"mr-1\">Distributor</span></label>\n                                        <Autocomplete\n                                            //id=\"distributorId\"\n                                            name=\"distributorId\"\n                                            options={distributors}\n                                            onKeyDown={getAllDistributorList}\n                                            getOptionLabel={(option) => option.distributorName}\n                                            value={distributorValue}\n                                            onChange={(event, newValue) => {\n                                                setDistributorValue(newValue)\n                                                if (newValue !== null) {\n                                                    setInputs({ ...inputs, distributorId: newValue.distributorId });\n                                                } else {\n                                                    setInputs({ ...inputs, distributorId: '' });\n                                                }\n                                            }}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Select Distributor\" />\n                                            )}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>Start Date<i style={{ color: \"red\" }}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"startDate\" placeholder=\"dd-MM-yyyy\"\n                                            name='startDate'\n                                            value={inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"d-M-Y\" }}\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                })\n\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>End Date<i style={{ color: \"red\" }}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"endDate\" placeholder=\"dd-MM-yyyy\"\n                                            name='endDate'\n                                            value={inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"d-M-Y\" }} required\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                })\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n\n\n                                {/* <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span className=\"mr-1\">Report Format</span><span className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportId\" name=\"report\"\n                                                onChange={(e) => handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report Format</option>\n                                                <option value=\"pdf\">Pdf</option>\n                                                <option value=\"excel\">Excel</option>\n\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div> */}\n\n                                {/* <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span className=\"mr-1\">Report Type</span><span className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportType\" name=\"reportType\"\n                                                onChange={(e) => handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report Type</option>\n                                                <option value=\"bySalesOfficer\">By SalesOfficer</option>\n                                                <option value=\"byTerritory\">By Territory</option>\n                                                <option value=\"byDistributor\">By Distributor</option>                                                                                                                                                                                                                                                                                                \n                                               <option value=\"byArea\">By Area</option>  \n                                                <option value=\"byZone\">By Zone</option>      \n                                     \n                                            </select>\n                                        </div>\n                                    </div>\n                                </div> */}\n\n                                <Button className=\"float-right mt-5\" id=\"gotItBtn\" variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={download}\n                                >\n                                    Download\n                                </Button>\n\n                                <div className=\"float-right\">\n                                    <Button className=\"mt-5 mr-5\" id=\"gotItBtn\" variant=\"contained\" color=\"primary\" onClick={preview}>\n                                        Preview\n                                    </Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='mt-5'>\n                            <iframe src=\"\" className='w-100' id=\"reportShowIframe\" height=\"500px\" />\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}