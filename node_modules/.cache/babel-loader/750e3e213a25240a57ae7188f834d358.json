{"ast":null,"code":"import _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Inventory/Stock/tabs/sales-order/sub-tabs/picking-list/view/table/PickingViewList.js\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { ActionsColumnFormatter } from \"./ActionsColumnFormatter\";\nimport { useIntl } from \"react-intl\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../../../../../../../../_metronic/_helpers\";\nexport default function PickingViewList(_ref) {\n  var _this = this;\n\n  var setSingleAll = _ref.setSingleAll,\n      singleAll = _ref.singleAll,\n      pikingList = _ref.pikingList;\n  var intl = useIntl();\n  var history = useHistory();\n\n  var openConfirmPage = function openConfirmPage(data) {\n    history.push('/inventory/stock/sales-order/picking-list-view-confirm', {\n      state: data\n    });\n  };\n\n  var singleWiseSelectHandler = function singleWiseSelectHandler(data, isSelect) {\n    if (isSelect == true) {\n      var temp = _toConsumableArray(singleAll);\n\n      temp.push(data);\n      setSingleAll(temp);\n    } else {\n      if (singleAll.length >= 0) {\n        var _temp = _toConsumableArray(singleAll);\n\n        var index = _temp.findIndex(function (obj) {\n          return obj.id == data.id;\n        });\n\n        _temp.splice(index, 1);\n\n        setSingleAll(_temp);\n      }\n    }\n  };\n\n  var allSelectHandler = function allSelectHandler(allData, isSelect) {\n    if (isSelect == true) {\n      setSingleAll(allData);\n    } else {\n      if (allData.length >= 0) {\n        var _loop = function _loop(i) {\n          var index = singleAll.findIndex(function (obj) {\n            return obj.id == allData[i].id;\n          });\n          singleAll.splice(index, 1);\n          setSingleAll(singleAll);\n        };\n\n        for (var i = 0; i < allData.length; i++) {\n          _loop(i);\n        }\n      }\n    }\n  };\n\n  var columns = [{\n    dataField: \"picking_no\",\n    text: \"PICKING INFO\",\n    formatter: function formatter(cellContent, row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 10\n        }\n      }, row.picking_no), /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 43\n        }\n      }), /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"text-muted\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 10\n        }\n      }, row.picking_date));\n    }\n  }, {\n    dataField: \"product\",\n    text: \"PRODUCTS\",\n    headerClasses: \"text-center\",\n    classes: \"text-center\",\n    formatter: function formatter(cellContent, row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, row.total_product));\n    }\n  }, {\n    dataField: \"action\",\n    text: intl.formatMessage({\n      id: \"MENU.ACTIONS\"\n    }),\n    formatter: ActionsColumnFormatter,\n    formatExtraData: {\n      openConfirmPage: openConfirmPage\n    },\n    classes: \"text-center\",\n    headerClasses: \"text-center\",\n    style: {\n      minWidth: \"100px\"\n    }\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BootstrapTable, {\n    wrapperClasses: \"table-responsive\",\n    classes: \"table table-head-custom table-vertical-center overflow-hidden\",\n    bootstrap4: true,\n    bordered: false,\n    keyField: \"picking_id\",\n    data: pikingList,\n    columns: columns,\n    selectRow: {\n      mode: 'checkbox',\n      onSelect: function onSelect(row, isSelect, rowIndex, e) {\n        singleWiseSelectHandler(row, isSelect);\n      },\n      onSelectAll: function onSelectAll(isSelect, rows, e) {\n        allSelectHandler(rows, isSelect);\n      }\n    },\n    pagination: paginationFactory({\n      sizePerPage: 10,\n      showTotal: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useHistory","BootstrapTable","paginationFactory","ActionsColumnFormatter","useIntl","SVG","toAbsoluteUrl","PickingViewList","setSingleAll","singleAll","pikingList","intl","history","openConfirmPage","data","push","state","singleWiseSelectHandler","isSelect","temp","length","index","findIndex","obj","id","splice","allSelectHandler","allData","i","columns","dataField","text","formatter","cellContent","row","picking_no","picking_date","headerClasses","classes","total_product","formatMessage","formatExtraData","style","minWidth","mode","onSelect","rowIndex","e","onSelectAll","rows","sizePerPage","showTotal"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Inventory/Stock/tabs/sales-order/sub-tabs/picking-list/view/table/PickingViewList.js"],"sourcesContent":["\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { ActionsColumnFormatter } from \"./ActionsColumnFormatter\";\nimport {useIntl} from \"react-intl\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../../../../../../../../_metronic/_helpers\";\n\nexport default function PickingViewList({setSingleAll, singleAll, pikingList}) {\n  const intl = useIntl();\n  let history = useHistory();\n  \n  const openConfirmPage = (data) => {\n    history.push('/inventory/stock/sales-order/picking-list-view-confirm', { state: data });\n  }\n\n  const singleWiseSelectHandler = (data, isSelect) => {\n    if (isSelect == true) {\n      let temp = [...singleAll]\n      temp.push(data)\n      setSingleAll(temp)\n    } else {\n      if (singleAll.length >= 0) {\n        let temp = [...singleAll]\n        const index = temp.findIndex(obj => obj.id == data.id);\n        temp.splice(index, 1);\n        setSingleAll(temp)\n      }\n    }\n\n  }\n  const allSelectHandler = (allData, isSelect) => {\n    if (isSelect == true) {\n      setSingleAll(allData)\n    }\n    else {\n      if (allData.length >= 0) {\n        for (let i = 0; i < allData.length; i++) {\n          const index = singleAll.findIndex(obj => obj.id == allData[i].id);\n          singleAll.splice(index, 1);\n          setSingleAll(singleAll)\n        }\n      }\n    }\n\n  }\n  const columns = [\n    {\n      dataField: \"picking_no\",\n      text:\"PICKING INFO\",\n      formatter: (cellContent, row) => (\n        <>\n         <strong>{row.picking_no}</strong><br />\n         <strong className=\"text-muted\">{row.picking_date}</strong>\n        </>\n      )\n    },\n    {\n      dataField: \"product\",\n      text: \"PRODUCTS\",\n      headerClasses:\"text-center\",\n      classes:\"text-center\",\n      formatter: (cellContent, row) => (\n        <>\n          <strong>{row.total_product}</strong>\n        </>\n      )\n    },\n    {\n      dataField: \"action\",\n      text: intl.formatMessage({id: \"MENU.ACTIONS\"}),\n      formatter: ActionsColumnFormatter,\n      formatExtraData: {\n        openConfirmPage: openConfirmPage,\n      },\n      classes: \"text-center\",\n      headerClasses: \"text-center\",\n      style: {\n        minWidth: \"100px\",\n      },\n    },\n  ];\n\n  return (\n    <>\n      <BootstrapTable\n        wrapperClasses=\"table-responsive\"\n        classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n        bootstrap4\n        bordered={false}\n        keyField=\"picking_id\"\n        data={pikingList}\n        columns={columns}\n        selectRow={\n          {\n            mode: 'checkbox',\n            onSelect: (row, isSelect, rowIndex, e) => {\n              singleWiseSelectHandler(row, isSelect);\n            },\n            onSelectAll: (isSelect, rows, e) => {\n              allSelectHandler(rows, isSelect);\n\n            }\n\n          }\n        }\n\n        pagination={paginationFactory({ sizePerPage: 10, showTotal: true })}\n      />\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}