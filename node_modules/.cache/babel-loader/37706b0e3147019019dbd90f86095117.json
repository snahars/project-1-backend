{"ast":null,"code":"import _defineProperty from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/SalesReturnReport.js\";\nimport React, { useEffect, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport ReportProductCategoryTreeView from '../../../Common/ReportProductCategoryTreeView';\nimport CommonDateComponent from '../../../Common/CommonDateComponent';\nexport default function SalesReturnReport() {\n  var _this = this;\n\n  var fields = {\n    locationId: \"\",\n    salesOfficerId: \"\",\n    distributorId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    report: \"\",\n    reportType: \"\"\n  };\n  var intl = useIntl();\n\n  var _useState = useState(fields),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var selectedCompany = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var userLoginId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      locationTree = _useState4[0],\n      setLocationTree = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      locationIds = _useState6[0],\n      setLocationIds = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      salesOfficerList = _useState8[0],\n      setSalesOfficerList = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      salesOfficerValue = _useState10[0],\n      setSalesOfficerValue = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      distributorValue = _useState12[0],\n      setDistributorValue = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      distributorList = _useState14[0],\n      setDistributorList = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showReport = _useState16[0],\n      setShowReport = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      reportData = _useState18[0],\n      setReportData = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      producCategoryTree = _useState20[0],\n      setProductCategoryTree = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      categoryLevel = _useState22[0],\n      setCategoryLevel = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      productList = _useState24[0],\n      setProductList = _useState24[1];\n\n  useEffect(function () {\n    document.getElementById('reportShowIframe').style.display = \"none\";\n    getLocationTreeList({\n      userLoginId: userLoginId,\n      companyId: selectedCompany\n    });\n  }, [userLoginId, selectedCompany]);\n  useEffect(function () {\n    getProductCategoryTreeList(selectedCompany);\n  }, [selectedCompany]);\n\n  var getLocationTreeList = function getLocationTreeList(params) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/location-tree/locationTree/\").concat(params.userLoginId, \"/\").concat(params.companyId);\n    axios.get(URL).then(function (response) {\n      var locationTree = response.data.data;\n      setLocationTree(locationTree);\n    }).catch(function (err) {\n      showError(\"Cannot get Location Tree data.\");\n    });\n  };\n\n  var selectLocationTreeNode = function selectLocationTreeNode(node) {\n    var id = \"summary-id-\" + node.id;\n    var getId = document.getElementById(id);\n    var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n    for (var i = 0; i < getElements.length; i++) {\n      getElements[i].classList.remove('tree-nav-item');\n    }\n\n    if (getId) {\n      getId.classList.add('tree-nav-item');\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"locationId\": node.id\n      }));\n    }\n\n    if (locationIds.length !== 0) {\n      // for clear state\n      locationIds.length = 0;\n    }\n\n    getLocationIds(node);\n  };\n\n  var getLocationIds = function getLocationIds(node) {\n    var temp = _toConsumableArray(locationIds);\n\n    var index = temp.findIndex(function (id) {\n      return id === node.id;\n    });\n\n    if (index === -1) {\n      locationIds.push(node.id);\n    }\n\n    node.children.map(function (nodeChild) {\n      getLocationIds(nodeChild);\n    });\n  };\n\n  var getSalesOfficerListByLocation = function getSalesOfficerListByLocation(locationId, companyId) {\n    if (locationIds.length === 0) {\n      showError('Please Select Location');\n      return false;\n    }\n\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/auth/get-sales-officer-location/\").concat(locationId, \"/\").concat(companyId);\n    axios.get(URL).then(function (response) {\n      if (response.data.data != undefined) {\n        setSalesOfficerList(response.data.data);\n      } else {\n        setSalesOfficerList([]);\n        setSalesOfficerValue('');\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Sales Officer data.\");\n    });\n  };\n\n  var getAllDistributorList = function getAllDistributorList(userLoginId, locationId, companyId) {\n    if (locationIds.length === 0) {\n      showError('Please Select Location');\n      return false;\n    }\n\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/distributor/distributorList/\").concat(userLoginId, \"/\").concat(locationId, \"/\").concat(companyId); //API call from backend\n\n    axios.get(URL).then(function (response) {\n      //get data in response\n      if (response.data.data != undefined && response.data.data.length != 0) {\n        setDistributorList(response.data.data);\n      } else {\n        setDistributorList([]);\n        setDistributorValue('');\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Distributor data.\");\n    });\n  };\n\n  var handleChange = function handleChange(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    setInputs(function (values) {\n      return _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var validate = function validate() {\n    if (locationIds.length === 0) {\n      showError('Location is required');\n      return false;\n    } else if (!inputs.salesOfficerId) {\n      showError('Sales Officer is required');\n      return false;\n    } else if (!inputs.distributorId) {\n      showError('Distributor Name is required.');\n      return false;\n    } else if (!inputs.startDate) {\n      showError(\"Start date  is required\");\n      return false;\n    } else if (!inputs.endDate) {\n      showError(\"End date is required\");\n      return false;\n    } else if (inputs.endDate < inputs.startDate) {\n      showError(\"End Date should be greater than Start Date\");\n      return false;\n    } else if (!inputs.reportFormate) {\n      showError('Report Format is required');\n      return false;\n    } else if (!inputs.reportType) {\n      showError('Report Type is required.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var previewValidate = function previewValidate() {\n    if (locationIds.length === 0) {\n      showError('Location is required');\n      return false;\n    } else if (!inputs.salesOfficerId) {\n      showError('Sales Officer is required');\n      return false;\n    } else if (!inputs.distributorId) {\n      showError('Distributor Name is required.');\n      return false;\n    } else if (!inputs.startDate) {\n      showError(\"Start date  is required\");\n      return false;\n    } else if (!inputs.endDate) {\n      showError(\"End date is required\");\n      return false;\n    } else if (inputs.endDate < inputs.startDate) {\n      showError(\"End Date should be greater than Start Date\");\n      return false;\n    } else if (!inputs.reportType) {\n      showError('Report Type is required.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var preview = function preview() {\n    if (!previewValidate()) {\n      return false;\n    }\n\n    var queryParams = '?locationId=' + inputs.locationId;\n    queryParams += '&reportFormate=' + \"PDF\";\n    queryParams += '&companyId=' + selectedCompany;\n    queryParams += '&locationIds=' + locationIds;\n    queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n    queryParams += '&distributorId=' + inputs.distributorId;\n    queryParams += '&startDate=' + inputs.startDate;\n    queryParams += '&endDate=' + inputs.endDate;\n    queryParams += '&reportType=' + inputs.reportType;\n    var data = \"\".concat(process.env.REACT_APP_API_URL, \"/api/report/sales-return\") + queryParams;\n    axios.get(data, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var file = new Blob([response.data], {\n        type: \"application/pdf\"\n      });\n      var fileURL = URL.createObjectURL(file);\n      var iframe = document.querySelector(\"iframe\");\n      if (iframe === null || iframe === void 0 ? void 0 : iframe.src) iframe.src = fileURL;\n      document.getElementById('reportShowIframe').style.display = \"inline-block\";\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var download = function download() {\n    if (!validate()) {\n      return false;\n    }\n\n    var queryParams = '?locationId=' + inputs.locationId;\n    queryParams += '&reportFormate=' + inputs.reportFormate;\n    queryParams += '&companyId=' + selectedCompany;\n    queryParams += '&locationIds=' + locationIds;\n    queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n    queryParams += '&distributorId=' + inputs.distributorId;\n    queryParams += '&startDate=' + inputs.startDate;\n    queryParams += '&endDate=' + inputs.endDate;\n    queryParams += '&reportType=' + inputs.reportType;\n    var data = \"\".concat(process.env.REACT_APP_API_URL, \"/api/report/sales-return\") + queryParams;\n    axios.get(data, {\n      responseType: 'blob'\n    }).then(function (response) {\n      if (inputs.reportFormate === \"PDF\") {\n        var url = window.URL.createObjectURL(new Blob([response.data]));\n        var link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', \"SalesReturn.pdf\");\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        var _url = window.URL.createObjectURL(new Blob([response.data]));\n\n        var _link = document.createElement('a');\n\n        _link.href = _url;\n\n        _link.setAttribute('download', \"SalesReturn.xlsx\");\n\n        document.body.appendChild(_link);\n\n        _link.click();\n\n        document.body.removeChild(_link);\n      }\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var getProductCategoryTreeList = function getProductCategoryTreeList(params) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category/list-info/\") + params;\n    axios.get(URL).then(function (response) {\n      setProductCategoryTree(response.data.data.childProductCategoryDtoList);\n    }).catch(function (err) {\n      showError(\"Can not get product category tree data.\");\n    });\n  };\n\n  var findTreeNode = function findTreeNode(node, targetNode, productList) {\n    if (node.treeLevel === targetNode.treeLevel) {\n      node.productList = productList;\n      return;\n    }\n\n    node.children.map(function (n) {\n      findTreeNode(n, targetNode, productList);\n    });\n  };\n\n  var selectTreeNode = function selectTreeNode(node) {\n    if (node.children.length == 0) {\n      var id = \"product-list-id-\" + node.id;\n      var getId = document.getElementById(id);\n\n      if (getId.className == \"product-list d-none\") {\n        getId.classList.remove('d-none');\n        var queryString = '?';\n        queryString += '&companyId=' + selectedCompany;\n        queryString += '&productCategoryId=' + node.id;\n\n        var _URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product/get-product-category-wise-product/\") + queryString;\n\n        axios.get(_URL).then(function (response) {\n          console.log(\"response====\", response.data.data);\n          var pl = response.data.data; // node.productList=response.data.data; \n\n          var pct = _toConsumableArray(producCategoryTree);\n\n          pct.map(function (n) {\n            findTreeNode(n, node, pl);\n          });\n          setProductCategoryTree(pct);\n        }).catch(function (err) {\n          showError(\"Can not get product list.\");\n        }); // let a =getAllProduct(node.id); \n        // console.log(\"return\",a) \n      } else {\n        getId.classList.add('d-none');\n      }\n    }\n\n    if (categoryLevel != \"\") {\n      setCategoryLevel(node.treeLevel);\n\n      if (categoryLevel.split('-').length == node.treeLevel.split('-').length) {\n        var _id = \"report-product-category-tree-id-\" + node.id;\n\n        var _getId = document.getElementById(_id);\n\n        if (_getId.className == \"tree-nav__item_demo tree-nav__item-title report-product-category-tree-selected\") {\n          _getId.classList.remove('report-product-category-tree-selected');\n        } else {\n          _getId.classList.add('report-product-category-tree-selected');\n\n          if (node.children.length == 0) {\n            var _id2 = \"product-list-id-\" + node.id;\n\n            var _getId2 = document.getElementById(_id2);\n\n            _getId2.classList.remove('d-none');\n          }\n        }\n      } else {\n        var _id3 = \"report-product-category-tree-id-\" + node.id;\n\n        var _getId3 = document.getElementById(_id3);\n\n        var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n        for (var i = 0; i < getElements.length; i++) {\n          getElements[i].classList.remove('report-product-category-tree-selected');\n        }\n\n        var productListId = \"product-list-id-\" + node.id;\n        var getProductListId = document.getElementById(productListId);\n        var getProductListIdElements = document.getElementsByClassName('product-list');\n\n        for (var i = 0; i < getProductListIdElements.length; i++) {\n          getProductListIdElements[i].classList.add('d-none');\n        }\n\n        if (_getId3) {\n          _getId3.classList.add('report-product-category-tree-selected');\n\n          if (node.children.length == 0) {\n            var _id4 = \"product-list-id-\" + node.id;\n\n            var _getId4 = document.getElementById(_id4);\n\n            _getId4.classList.remove('d-none');\n          }\n        }\n      }\n    } else {\n      setCategoryLevel(node.treeLevel);\n\n      var _id5 = \"report-product-category-tree-id-\" + node.id;\n\n      var _getId5 = document.getElementById(_id5);\n\n      if (_getId5.className == \"tree-nav__item_demo tree-nav__item-title report-product-category-tree-selected\") {\n        _getId5.classList.remove('report-product-category-tree-selected');\n      } else {\n        _getId5.classList.add('report-product-category-tree-selected');\n\n        if (node.children.length == 0) {\n          var _id6 = \"product-list-id-\" + node.id;\n\n          var _getId6 = document.getElementById(_id6);\n\n          _getId6.classList.remove('d-none');\n        }\n      }\n    }\n  };\n\n  var selectProductNode = function selectProductNode(node) {\n    var temp = _toConsumableArray(productList);\n\n    var index = temp.findIndex(function (data) {\n      return data == node;\n    });\n\n    if (index > -1) {\n      temp.splice(index, 1);\n      setProductList(temp);\n    } else {\n      temp.push(node);\n      setProductList(temp);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MisReportBreadCrum, {\n    menuTitle: \"Sales Return Report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-3\",\n    style: {\n      borderRight: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottom: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc3.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginLeft: \"10px\",\n      color: \"#828282\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 41\n    }\n  }, intl.formatMessage({\n    id: \"COMMON.LOCATION_ALL\"\n  })))), /*#__PURE__*/React.createElement(LocationTreeView, {\n    tree: locationTree,\n    selectLocationTreeNode: selectLocationTreeNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4\",\n    style: {\n      borderRight: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottom: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc3.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginLeft: \"10px\",\n      color: \"#828282\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 41\n    }\n  }, \"Product Category (All)\"))), /*#__PURE__*/React.createElement(ReportProductCategoryTreeView, {\n    tree: producCategoryTree,\n    selectProductCategoryTreeNode: selectTreeNode,\n    selectProduct: selectProductNode,\n    list: productList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 45\n    }\n  }, \"Sales Officer\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 89\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 130\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    name: \"salesOfficerId\",\n    options: salesOfficerList,\n    onKeyDown: function onKeyDown(e) {\n      getSalesOfficerListByLocation(inputs.locationId, selectedCompany);\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.salesOfficerName;\n    },\n    value: salesOfficerValue,\n    onChange: function onChange(event, newValue) {\n      setSalesOfficerValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          salesOfficerId: newValue.id\n        }));\n      } else {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          salesOfficerId: ''\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Sales Officer*\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 53\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 72\n    }\n  }, \"Distributor\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 106\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(Autocomplete, {\n    name: \"distributorId\",\n    options: distributorList,\n    onKeyDown: function onKeyDown(e) {\n      getAllDistributorList(userLoginId, inputs.locationId, selectedCompany);\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.distributorName;\n    },\n    value: distributorValue,\n    onChange: function onChange(event, newValue) {\n      setDistributorValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          distributorId: newValue.distributorId\n        }));\n      } else {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          distributorId: ''\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Distributor*\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 49\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CommonDateComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 76\n    }\n  }, \"Report Type\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 84\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"reportType\",\n    name: \"reportType\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 49\n    }\n  }, \"Select Report Type\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"byProduct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 49\n    }\n  }, \"By Product\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 76\n    }\n  }, \"Report Format\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 86\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"reportFormate\",\n    name: \"reportFormate\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 49\n    }\n  }, \"Select Report Format\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"PDF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 49\n    }\n  }, \"PDF\"))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: download,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 33\n    }\n  }, \"Download\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-5 mr-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 37\n    }\n  }, \"Preview\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 25\n    }\n  }, \"''\", /*#__PURE__*/React.createElement(\"iframe\", {\n    src: \"\",\n    className: \"w-100\",\n    id: \"reportShowIframe\",\n    height: \"500px\",\n    title: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 29\n    }\n  }))))));\n}","map":{"version":3,"names":["React","useEffect","useState","toAbsoluteUrl","Card","CardBody","useHistory","LocationTreeView","showError","axios","useIntl","shallowEqual","useSelector","Autocomplete","TextField","Button","moment","Flatpickr","MisReportBreadCrum","ReportProductCategoryTreeView","CommonDateComponent","SalesReturnReport","fields","locationId","salesOfficerId","distributorId","startDate","endDate","report","reportType","intl","inputs","setInputs","selectedCompany","state","auth","company","userLoginId","user","userId","locationTree","setLocationTree","locationIds","setLocationIds","salesOfficerList","setSalesOfficerList","salesOfficerValue","setSalesOfficerValue","distributorValue","setDistributorValue","distributorList","setDistributorList","showReport","setShowReport","reportData","setReportData","producCategoryTree","setProductCategoryTree","categoryLevel","setCategoryLevel","productList","setProductList","document","getElementById","style","display","getLocationTreeList","companyId","getProductCategoryTreeList","params","URL","process","env","REACT_APP_API_URL","get","then","response","data","catch","err","selectLocationTreeNode","node","id","getId","getElements","getElementsByClassName","i","length","classList","remove","add","getLocationIds","temp","index","findIndex","push","children","map","nodeChild","getSalesOfficerListByLocation","undefined","getAllDistributorList","handleChange","event","name","target","value","values","validate","reportFormate","previewValidate","preview","queryParams","responseType","file","Blob","type","fileURL","createObjectURL","iframe","querySelector","src","download","url","window","link","createElement","href","setAttribute","body","appendChild","click","removeChild","childProductCategoryDtoList","findTreeNode","targetNode","treeLevel","n","selectTreeNode","className","queryString","console","log","pl","pct","split","productListId","getProductListId","getProductListIdElements","selectProductNode","splice","borderRight","borderBottom","width","height","textAlign","marginLeft","color","formatMessage","marginTop","e","option","salesOfficerName","newValue","distributorName"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/SalesReturnReport.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport ReportProductCategoryTreeView from '../../../Common/ReportProductCategoryTreeView';\nimport CommonDateComponent from '../../../Common/CommonDateComponent';\n\nexport default function SalesReturnReport() {\n    const fields = {\n        locationId: \"\",\n        salesOfficerId: \"\",\n        distributorId: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        report: \"\",\n        reportType: \"\"\n    };\n    const intl = useIntl();\n    const [inputs, setInputs] = useState(fields);\n    const selectedCompany = useSelector((state) => state.auth.company, shallowEqual);\n    const userLoginId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const [locationTree, setLocationTree] = useState([]);\n    const [locationIds, setLocationIds] = useState([]);\n    const [salesOfficerList, setSalesOfficerList] = useState([]);\n    const [salesOfficerValue, setSalesOfficerValue] = useState(null);\n    const [distributorValue, setDistributorValue] = useState(null);\n    const [distributorList, setDistributorList] = useState([]);\n    const [showReport, setShowReport] = useState('');\n    const [reportData, setReportData] = useState([]);\n\n\n    const [producCategoryTree, setProductCategoryTree] = useState([]);\n    const [categoryLevel, setCategoryLevel] = useState(\"\");\n    const [productList, setProductList] = useState([]);\n\n\n    useEffect(() => {\n        document.getElementById('reportShowIframe').style.display = \"none\";\n        getLocationTreeList({ userLoginId: userLoginId, companyId: selectedCompany });\n    }, [userLoginId, selectedCompany]);\n    useEffect(() => {\n        getProductCategoryTreeList(selectedCompany);\n    }, [selectedCompany]);\n\n    const getLocationTreeList = (params) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/location-tree/locationTree/${params.userLoginId}/${params.companyId}`;\n        axios.get(URL).then(response => {\n            const locationTree = response.data.data;\n            setLocationTree(locationTree);\n        }).catch(err => {\n            showError(\"Cannot get Location Tree data.\");\n        });\n    }\n\n    const selectLocationTreeNode = (node) => {\n        let id = \"summary-id-\" + node.id;\n        const getId = document.getElementById(id);\n        const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n        for (let i = 0; i < getElements.length; i++) {\n            getElements[i].classList.remove('tree-nav-item');\n        }\n        if (getId) {\n            getId.classList.add('tree-nav-item');\n            setInputs({ ...inputs, \"locationId\": node.id })\n        }\n        if (locationIds.length !== 0) { // for clear state\n            locationIds.length = 0;\n        }\n        getLocationIds(node);\n    }\n\n    const getLocationIds = (node) => {\n        let temp = [...locationIds]\n        let index = temp.findIndex(id => id === node.id)\n        if (index === -1) {\n            locationIds.push(node.id)\n        }\n        node.children.map(nodeChild => {\n            getLocationIds(nodeChild)\n        })\n    }\n\n    const getSalesOfficerListByLocation = (locationId, companyId) => {\n        if (locationIds.length === 0) {\n            showError('Please Select Location');\n            return false;\n        }\n\n        const URL = `${process.env.REACT_APP_API_URL}/auth/get-sales-officer-location/${locationId}/${companyId}`;\n        axios.get(URL).then(response => {\n            if (response.data.data != undefined) {\n                setSalesOfficerList(response.data.data);\n            } else {\n                setSalesOfficerList([]);\n                setSalesOfficerValue('');\n            }\n        }).catch(err => {\n            showError(\"Cannot get Sales Officer data.\");\n        });\n    }\n\n    const getAllDistributorList = (userLoginId, locationId, companyId) => {\n        if (locationIds.length === 0) {\n            showError('Please Select Location');\n            return false;\n        }\n        const URL = `${process.env.REACT_APP_API_URL}/api/distributor/distributorList/${userLoginId}/${locationId}/${companyId}`;//API call from backend\n        axios.get(URL).then(response => {//get data in response\n            if (response.data.data != undefined && response.data.data.length != 0) {\n                setDistributorList(response.data.data);\n            } else {\n                setDistributorList([]);\n                setDistributorValue('');\n            }\n        }).catch(err => {\n            showError(\"Cannot get Distributor data.\");\n        });\n    }\n\n    const handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setInputs(values => ({ ...values, [name]: value }))\n    }\n\n    const validate = () => {\n        if (locationIds.length === 0) {\n            showError('Location is required');\n            return false;\n        } else if (!inputs.salesOfficerId) {\n            showError('Sales Officer is required');\n            return false;\n        } else if (!inputs.distributorId) {\n            showError('Distributor Name is required.');\n            return false;\n        } else if (!inputs.startDate) {\n            showError(\"Start date  is required\");\n            return false;\n        } else if (!inputs.endDate) {\n            showError(\"End date is required\");\n            return false;\n        } else if (inputs.endDate < inputs.startDate) {\n            showError(\"End Date should be greater than Start Date\");\n            return false;\n        } else if (!inputs.reportFormate) {\n            showError('Report Format is required');\n            return false;\n        } else if (!inputs.reportType) {\n            showError('Report Type is required.');\n            return false;\n        }\n        return true;\n    }\n    const previewValidate = () => {\n        if (locationIds.length === 0) {\n            showError('Location is required');\n            return false;\n        } else if (!inputs.salesOfficerId) {\n            showError('Sales Officer is required');\n            return false;\n        } else if (!inputs.distributorId) {\n            showError('Distributor Name is required.');\n            return false;\n        } else if (!inputs.startDate) {\n            showError(\"Start date  is required\");\n            return false;\n        } else if (!inputs.endDate) {\n            showError(\"End date is required\");\n            return false;\n        } else if (inputs.endDate < inputs.startDate) {\n            showError(\"End Date should be greater than Start Date\");\n            return false;\n        } else if (!inputs.reportType) {\n            showError('Report Type is required.');\n            return false;\n        }\n        return true;\n    }\n\n    const preview = () => {\n        if (!previewValidate()) {\n            return false;\n        }\n        let queryParams = '?locationId=' + inputs.locationId;\n        queryParams += '&reportFormate=' + \"PDF\";\n        queryParams += '&companyId=' + selectedCompany;\n        queryParams += '&locationIds=' + locationIds;\n        queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n        queryParams += '&distributorId=' + inputs.distributorId;\n        queryParams += '&startDate=' + inputs.startDate;\n        queryParams += '&endDate=' + inputs.endDate;\n        queryParams += '&reportType=' + inputs.reportType;\n        const data = `${process.env.REACT_APP_API_URL}/api/report/sales-return` + queryParams;\n        axios.get(data, { responseType: 'blob' }).then(response => {\n            const file = new Blob([response.data], { type: \"application/pdf\" });\n            const fileURL = URL.createObjectURL(file);\n            const iframe = document.querySelector(\"iframe\");\n            if (iframe?.src) iframe.src = fileURL;\n            document.getElementById('reportShowIframe').style.display = \"inline-block\";\n        }).catch(err => {\n            showError();\n        });\n    }\n    const download = () => {\n        if (!validate()) {\n            return false;\n        }\n        let queryParams = '?locationId=' + inputs.locationId;\n        queryParams += '&reportFormate=' + inputs.reportFormate;\n        queryParams += '&companyId=' + selectedCompany;\n        queryParams += '&locationIds=' + locationIds;\n        queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n        queryParams += '&distributorId=' + inputs.distributorId;\n        queryParams += '&startDate=' + inputs.startDate;\n        queryParams += '&endDate=' + inputs.endDate;\n        queryParams += '&reportType=' + inputs.reportType;\n        const data = `${process.env.REACT_APP_API_URL}/api/report/sales-return` + queryParams;\n        axios.get(data, { responseType: 'blob' }).then(response => {\n            if (inputs.reportFormate === \"PDF\") {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', \"SalesReturn.pdf\");\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            } else {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', \"SalesReturn.xlsx\");\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            }\n        }).catch(err => {\n            showError();\n        });\n    }\n\n    const getProductCategoryTreeList = (params) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category/list-info/` + params;\n        axios.get(URL).then(response => {\n            setProductCategoryTree(response.data.data.childProductCategoryDtoList);\n        }).catch(err => {\n            showError(\"Can not get product category tree data.\");\n        });\n    }\n    const findTreeNode = (node, targetNode, productList) => {\n\n        if (node.treeLevel === targetNode.treeLevel) {\n            node.productList = productList;\n            return;\n        }\n        node.children.map(n => {\n            findTreeNode(n, targetNode, productList)\n        });\n    }\n    const selectTreeNode = (node) => {\n\n        if (node.children.length == 0) {\n            let id = \"product-list-id-\" + node.id;\n            const getId = document.getElementById(id);\n            if (getId.className == \"product-list d-none\") {\n                getId.classList.remove('d-none');\n\n                let queryString = '?';\n                queryString += '&companyId=' + selectedCompany;\n                queryString += '&productCategoryId=' + node.id;\n                const URL = `${process.env.REACT_APP_API_URL}/api/product/get-product-category-wise-product/` + queryString;\n                axios.get(URL).then(response => {\n                    console.log(\"response====\", response.data.data)\n                    let pl = response.data.data\n                    // node.productList=response.data.data; \n\n\n                    let pct = [...producCategoryTree];\n                    pct.map(n => {\n                        findTreeNode(n, node, pl)\n                    });\n                    setProductCategoryTree(pct);\n                }).catch(err => {\n                    showError(\"Can not get product list.\");\n                });\n\n                // let a =getAllProduct(node.id); \n\n                // console.log(\"return\",a) \n            } else {\n                getId.classList.add('d-none');\n            }\n        }\n        if (categoryLevel != \"\") {\n            setCategoryLevel(node.treeLevel)\n            if (categoryLevel.split('-').length == node.treeLevel.split('-').length) {\n                let id = \"report-product-category-tree-id-\" + node.id;\n                const getId = document.getElementById(id);\n\n                if (getId.className == \"tree-nav__item_demo tree-nav__item-title report-product-category-tree-selected\") {\n                    getId.classList.remove('report-product-category-tree-selected');\n                } else {\n                    getId.classList.add('report-product-category-tree-selected');\n                    if (node.children.length == 0) {\n                        let id = \"product-list-id-\" + node.id;\n                        const getId = document.getElementById(id);\n                        getId.classList.remove('d-none')\n                    }\n\n                }\n\n            } else {\n                let id = \"report-product-category-tree-id-\" + node.id;\n                const getId = document.getElementById(id);\n                const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n                for (var i = 0; i < getElements.length; i++) {\n                    getElements[i].classList.remove('report-product-category-tree-selected');\n                }\n\n                let productListId = \"product-list-id-\" + node.id;\n                const getProductListId = document.getElementById(productListId);\n                const getProductListIdElements = document.getElementsByClassName('product-list');\n                for (var i = 0; i < getProductListIdElements.length; i++) {\n                    getProductListIdElements[i].classList.add('d-none');\n                }\n\n                if (getId) {\n                    getId.classList.add('report-product-category-tree-selected');\n                    if (node.children.length == 0) {\n                        let id = \"product-list-id-\" + node.id;\n                        const getId = document.getElementById(id);\n                        getId.classList.remove('d-none')\n                    }\n                }\n            }\n\n        } else {\n            setCategoryLevel(node.treeLevel)\n            let id = \"report-product-category-tree-id-\" + node.id;\n            const getId = document.getElementById(id);\n            if (getId.className == \"tree-nav__item_demo tree-nav__item-title report-product-category-tree-selected\") {\n                getId.classList.remove('report-product-category-tree-selected');\n            } else {\n                getId.classList.add('report-product-category-tree-selected');\n                if (node.children.length == 0) {\n                    let id = \"product-list-id-\" + node.id;\n                    const getId = document.getElementById(id);\n                    getId.classList.remove('d-none')\n                }\n            }\n        }\n\n\n    }\n    const selectProductNode = (node) => {\n        let temp = [...productList]\n        let index = temp.findIndex(data => data == node)\n        if (index > -1) {\n            temp.splice(index, 1);\n            setProductList(temp)\n        } else {\n            temp.push(node)\n            setProductList(temp)\n        }\n\n    }\n    return (\n        <>\n            <div>\n                <MisReportBreadCrum menuTitle=\"Sales Return Report\" />\n            </div>\n            <div>\n                <Card>\n                    <CardBody>\n                        <div className='row'>\n                            {/* LEFT SIDE TREE ROW */}\n                            <div className='col-xl-3' style={{ borderRight: \"1px solid #F2F2F2\" }}>\n                                <div style={{ borderBottom: \"1px solid #F2F2F2\" }}>\n                                    <label>\n                                        <img src={toAbsoluteUrl(\"/images/loc3.png\")}\n                                            style={{ width: \"20px\", height: \"20px\", textAlign: \"center\" }}\n                                            alt='Company Picture' />\n                                        <strong style={{\n                                            marginLeft: \"10px\",\n                                            color: \"#828282\"\n                                        }}>{intl.formatMessage({ id: \"COMMON.LOCATION_ALL\" })}</strong>\n                                    </label>\n                                </div>\n                                {/* TREE */}\n                                <LocationTreeView tree={locationTree} selectLocationTreeNode={selectLocationTreeNode} />\n                            </div>\n\n                            {/* PRODUCT CATEGORY TREE */}\n                            <div className=\"col-lg-4\" style={{ borderRight: \"1px solid #F2F2F2\" }}>\n                                <div style={{ borderBottom: \"1px solid #F2F2F2\" }}>\n                                    <label>\n                                        <img src={toAbsoluteUrl(\"/images/loc3.png\")}\n                                            style={{ width: \"20px\", height: \"20px\", textAlign: \"center\" }}\n                                            alt='Company Picture' />\n                                        <strong style={{ marginLeft: \"10px\", color: \"#828282\" }}>Product Category (All)</strong>\n                                    </label>\n                                </div>\n                                <ReportProductCategoryTreeView\n                                    tree={producCategoryTree}\n                                    selectProductCategoryTreeNode={selectTreeNode}\n                                    selectProduct={selectProductNode}\n                                    list={productList}\n                                />\n                            </div>\n                            {/* RIGHT SIDE LIST ROW */}\n                            <div className='col-xl-5'>\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <div style={{ marginTop: \"5px\" }}>\n                                            <label className='level-title'>Sales Officer<i style={{ color: \"red\" }}>*</i></label><br />\n                                            <Autocomplete\n                                                name=\"salesOfficerId\"\n                                                options={salesOfficerList}\n                                                onKeyDown={e => {\n                                                    getSalesOfficerListByLocation(inputs.locationId, selectedCompany)\n                                                }}\n                                                getOptionLabel={(option) => option.salesOfficerName}\n                                                value={salesOfficerValue}\n                                                onChange={(event, newValue) => {\n                                                    setSalesOfficerValue(newValue)\n                                                    if (newValue !== null) {\n                                                        setInputs({ ...inputs, salesOfficerId: newValue.id });\n                                                    } else {\n                                                        setInputs({ ...inputs, salesOfficerId: '' });\n                                                    }\n                                                }}\n                                                renderInput={(params) => (\n                                                    <TextField {...params} label=\"Select Sales Officer*\" />\n                                                )}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <label className='level-title'><span className=\"mr-1\">Distributor<i\n                                            style={{ color: \"red\" }}>*</i></span></label>\n                                        <Autocomplete\n                                            name=\"distributorId\"\n                                            options={distributorList}\n                                            onKeyDown={e => {\n                                                getAllDistributorList(userLoginId, inputs.locationId, selectedCompany)\n                                            }}\n                                            getOptionLabel={(option) => option.distributorName}\n                                            value={distributorValue}\n                                            onChange={(event, newValue) => {\n                                                setDistributorValue(newValue)\n                                                if (newValue !== null) {\n                                                    setInputs({ ...inputs, distributorId: newValue.distributorId });\n                                                } else {\n                                                    setInputs({ ...inputs, distributorId: '' });\n                                                }\n                                            }}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Select Distributor*\" />\n                                            )}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className='mt-5'>\n                                    <CommonDateComponent />\n                                </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span\n                                                className=\"mr-1\">Report Type</span><span\n                                                    className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportType\" name=\"reportType\"\n                                                onChange={(e) => handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report Type</option>\n                                                <option value=\"byProduct\">By Product</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span\n                                                className=\"mr-1\">Report Format</span><span\n                                                    className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportFormate\" name=\"reportFormate\"\n                                                onChange={(e) => handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report Format</option>\n                                                <option value=\"PDF\">PDF</option>\n                                                {/* <option value=\"EXCEL\">EXCEL</option> */}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <Button className=\"float-right mt-5\" id=\"gotItBtn\" variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={download}\n                                >\n                                    Download\n                                </Button>\n                                <div className=\"float-right\">\n                                    <Button className=\"mt-5 mr-5\" id=\"gotItBtn\" variant=\"contained\" color=\"primary\" onClick={preview}>\n                                        Preview\n                                    </Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='mt-5'>''\n                            <iframe src=\"\" className='w-100' id=\"reportShowIframe\" height=\"500px\" title=\"\" />\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        </>\n    );\n}"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,6CAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,4DAA7B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,0CAAP;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,6BAAP,MAA0C,+CAA1C;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AAEA,eAAe,SAASC,iBAAT,GAA6B;EAAA;;EACxC,IAAMC,MAAM,GAAG;IACXC,UAAU,EAAE,EADD;IAEXC,cAAc,EAAE,EAFL;IAGXC,aAAa,EAAE,EAHJ;IAIXC,SAAS,EAAE,EAJA;IAKXC,OAAO,EAAE,EALE;IAMXC,MAAM,EAAE,EANG;IAOXC,UAAU,EAAE;EAPD,CAAf;EASA,IAAMC,IAAI,GAAGpB,OAAO,EAApB;;EACA,gBAA4BR,QAAQ,CAACoB,MAAD,CAApC;EAAA;EAAA,IAAOS,MAAP;EAAA,IAAeC,SAAf;;EACA,IAAMC,eAAe,GAAGrB,WAAW,CAAC,UAACsB,KAAD;IAAA,OAAWA,KAAK,CAACC,IAAN,CAAWC,OAAtB;EAAA,CAAD,EAAgCzB,YAAhC,CAAnC;EACA,IAAM0B,WAAW,GAAGzB,WAAW,CAAC,UAACsB,KAAD;IAAA,OAAWA,KAAK,CAACC,IAAN,CAAWG,IAAX,CAAgBC,MAA3B;EAAA,CAAD,EAAoC5B,YAApC,CAA/B;;EACA,iBAAwCT,QAAQ,CAAC,EAAD,CAAhD;EAAA;EAAA,IAAOsC,YAAP;EAAA,IAAqBC,eAArB;;EACA,iBAAsCvC,QAAQ,CAAC,EAAD,CAA9C;EAAA;EAAA,IAAOwC,WAAP;EAAA,IAAoBC,cAApB;;EACA,iBAAgDzC,QAAQ,CAAC,EAAD,CAAxD;EAAA;EAAA,IAAO0C,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,iBAAkD3C,QAAQ,CAAC,IAAD,CAA1D;EAAA;EAAA,IAAO4C,iBAAP;EAAA,IAA0BC,oBAA1B;;EACA,kBAAgD7C,QAAQ,CAAC,IAAD,CAAxD;EAAA;EAAA,IAAO8C,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,kBAA8C/C,QAAQ,CAAC,EAAD,CAAtD;EAAA;EAAA,IAAOgD,eAAP;EAAA,IAAwBC,kBAAxB;;EACA,kBAAoCjD,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOkD,UAAP;EAAA,IAAmBC,aAAnB;;EACA,kBAAoCnD,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOoD,UAAP;EAAA,IAAmBC,aAAnB;;EAGA,kBAAqDrD,QAAQ,CAAC,EAAD,CAA7D;EAAA;EAAA,IAAOsD,kBAAP;EAAA,IAA2BC,sBAA3B;;EACA,kBAA0CvD,QAAQ,CAAC,EAAD,CAAlD;EAAA;EAAA,IAAOwD,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,kBAAsCzD,QAAQ,CAAC,EAAD,CAA9C;EAAA;EAAA,IAAO0D,WAAP;EAAA,IAAoBC,cAApB;;EAGA5D,SAAS,CAAC,YAAM;IACZ6D,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CC,KAA5C,CAAkDC,OAAlD,GAA4D,MAA5D;IACAC,mBAAmB,CAAC;MAAE7B,WAAW,EAAEA,WAAf;MAA4B8B,SAAS,EAAElC;IAAvC,CAAD,CAAnB;EACH,CAHQ,EAGN,CAACI,WAAD,EAAcJ,eAAd,CAHM,CAAT;EAIAhC,SAAS,CAAC,YAAM;IACZmE,0BAA0B,CAACnC,eAAD,CAA1B;EACH,CAFQ,EAEN,CAACA,eAAD,CAFM,CAAT;;EAIA,IAAMiC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACG,MAAD,EAAY;IACpC,IAAMC,GAAG,aAAMC,OAAO,CAACC,GAAR,CAAYC,iBAAlB,6CAAsEJ,MAAM,CAAChC,WAA7E,cAA4FgC,MAAM,CAACF,SAAnG,CAAT;IACA1D,KAAK,CAACiE,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CAAoB,UAAAC,QAAQ,EAAI;MAC5B,IAAMpC,YAAY,GAAGoC,QAAQ,CAACC,IAAT,CAAcA,IAAnC;MACApC,eAAe,CAACD,YAAD,CAAf;IACH,CAHD,EAGGsC,KAHH,CAGS,UAAAC,GAAG,EAAI;MACZvE,SAAS,CAAC,gCAAD,CAAT;IACH,CALD;EAMH,CARD;;EAUA,IAAMwE,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,IAAD,EAAU;IACrC,IAAIC,EAAE,GAAG,gBAAgBD,IAAI,CAACC,EAA9B;IACA,IAAMC,KAAK,GAAGrB,QAAQ,CAACC,cAAT,CAAwBmB,EAAxB,CAAd;IACA,IAAME,WAAW,GAAGtB,QAAQ,CAACuB,sBAAT,CAAgC,0CAAhC,CAApB;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACG,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;MACzCF,WAAW,CAACE,CAAD,CAAX,CAAeE,SAAf,CAAyBC,MAAzB,CAAgC,eAAhC;IACH;;IACD,IAAIN,KAAJ,EAAW;MACPA,KAAK,CAACK,SAAN,CAAgBE,GAAhB,CAAoB,eAApB;MACA1D,SAAS,iCAAMD,MAAN;QAAc,cAAckD,IAAI,CAACC;MAAjC,GAAT;IACH;;IACD,IAAIxC,WAAW,CAAC6C,MAAZ,KAAuB,CAA3B,EAA8B;MAAE;MAC5B7C,WAAW,CAAC6C,MAAZ,GAAqB,CAArB;IACH;;IACDI,cAAc,CAACV,IAAD,CAAd;EACH,CAhBD;;EAkBA,IAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAACV,IAAD,EAAU;IAC7B,IAAIW,IAAI,sBAAOlD,WAAP,CAAR;;IACA,IAAImD,KAAK,GAAGD,IAAI,CAACE,SAAL,CAAe,UAAAZ,EAAE;MAAA,OAAIA,EAAE,KAAKD,IAAI,CAACC,EAAhB;IAAA,CAAjB,CAAZ;;IACA,IAAIW,KAAK,KAAK,CAAC,CAAf,EAAkB;MACdnD,WAAW,CAACqD,IAAZ,CAAiBd,IAAI,CAACC,EAAtB;IACH;;IACDD,IAAI,CAACe,QAAL,CAAcC,GAAd,CAAkB,UAAAC,SAAS,EAAI;MAC3BP,cAAc,CAACO,SAAD,CAAd;IACH,CAFD;EAGH,CATD;;EAWA,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAC5E,UAAD,EAAa4C,SAAb,EAA2B;IAC7D,IAAIzB,WAAW,CAAC6C,MAAZ,KAAuB,CAA3B,EAA8B;MAC1B/E,SAAS,CAAC,wBAAD,CAAT;MACA,OAAO,KAAP;IACH;;IAED,IAAM8D,GAAG,aAAMC,OAAO,CAACC,GAAR,CAAYC,iBAAlB,8CAAuElD,UAAvE,cAAqF4C,SAArF,CAAT;IACA1D,KAAK,CAACiE,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CAAoB,UAAAC,QAAQ,EAAI;MAC5B,IAAIA,QAAQ,CAACC,IAAT,CAAcA,IAAd,IAAsBuB,SAA1B,EAAqC;QACjCvD,mBAAmB,CAAC+B,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAnB;MACH,CAFD,MAEO;QACHhC,mBAAmB,CAAC,EAAD,CAAnB;QACAE,oBAAoB,CAAC,EAAD,CAApB;MACH;IACJ,CAPD,EAOG+B,KAPH,CAOS,UAAAC,GAAG,EAAI;MACZvE,SAAS,CAAC,gCAAD,CAAT;IACH,CATD;EAUH,CAjBD;;EAmBA,IAAM6F,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAChE,WAAD,EAAcd,UAAd,EAA0B4C,SAA1B,EAAwC;IAClE,IAAIzB,WAAW,CAAC6C,MAAZ,KAAuB,CAA3B,EAA8B;MAC1B/E,SAAS,CAAC,wBAAD,CAAT;MACA,OAAO,KAAP;IACH;;IACD,IAAM8D,GAAG,aAAMC,OAAO,CAACC,GAAR,CAAYC,iBAAlB,8CAAuEpC,WAAvE,cAAsFd,UAAtF,cAAoG4C,SAApG,CAAT,CALkE,CAKuD;;IACzH1D,KAAK,CAACiE,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CAAoB,UAAAC,QAAQ,EAAI;MAAC;MAC7B,IAAIA,QAAQ,CAACC,IAAT,CAAcA,IAAd,IAAsBuB,SAAtB,IAAmCxB,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBU,MAAnB,IAA6B,CAApE,EAAuE;QACnEpC,kBAAkB,CAACyB,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAlB;MACH,CAFD,MAEO;QACH1B,kBAAkB,CAAC,EAAD,CAAlB;QACAF,mBAAmB,CAAC,EAAD,CAAnB;MACH;IACJ,CAPD,EAOG6B,KAPH,CAOS,UAAAC,GAAG,EAAI;MACZvE,SAAS,CAAC,8BAAD,CAAT;IACH,CATD;EAUH,CAhBD;;EAkBA,IAAM8F,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;IAC5B,IAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAAxB;IACA,IAAIE,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAAzB;IACA1E,SAAS,CAAC,UAAA2E,MAAM;MAAA,uCAAUA,MAAV,2BAAmBH,IAAnB,EAA0BE,KAA1B;IAAA,CAAP,CAAT;EACH,CAJD;;EAMA,IAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACnB,IAAIlE,WAAW,CAAC6C,MAAZ,KAAuB,CAA3B,EAA8B;MAC1B/E,SAAS,CAAC,sBAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHD,MAGO,IAAI,CAACuB,MAAM,CAACP,cAAZ,EAA4B;MAC/BhB,SAAS,CAAC,2BAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAI,CAACuB,MAAM,CAACN,aAAZ,EAA2B;MAC9BjB,SAAS,CAAC,+BAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAI,CAACuB,MAAM,CAACL,SAAZ,EAAuB;MAC1BlB,SAAS,CAAC,yBAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAI,CAACuB,MAAM,CAACJ,OAAZ,EAAqB;MACxBnB,SAAS,CAAC,sBAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAIuB,MAAM,CAACJ,OAAP,GAAiBI,MAAM,CAACL,SAA5B,EAAuC;MAC1ClB,SAAS,CAAC,4CAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAI,CAACuB,MAAM,CAAC8E,aAAZ,EAA2B;MAC9BrG,SAAS,CAAC,2BAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAI,CAACuB,MAAM,CAACF,UAAZ,EAAwB;MAC3BrB,SAAS,CAAC,0BAAD,CAAT;MACA,OAAO,KAAP;IACH;;IACD,OAAO,IAAP;EACH,CA3BD;;EA4BA,IAAMsG,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC1B,IAAIpE,WAAW,CAAC6C,MAAZ,KAAuB,CAA3B,EAA8B;MAC1B/E,SAAS,CAAC,sBAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHD,MAGO,IAAI,CAACuB,MAAM,CAACP,cAAZ,EAA4B;MAC/BhB,SAAS,CAAC,2BAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAI,CAACuB,MAAM,CAACN,aAAZ,EAA2B;MAC9BjB,SAAS,CAAC,+BAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAI,CAACuB,MAAM,CAACL,SAAZ,EAAuB;MAC1BlB,SAAS,CAAC,yBAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAI,CAACuB,MAAM,CAACJ,OAAZ,EAAqB;MACxBnB,SAAS,CAAC,sBAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAIuB,MAAM,CAACJ,OAAP,GAAiBI,MAAM,CAACL,SAA5B,EAAuC;MAC1ClB,SAAS,CAAC,4CAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAI,CAACuB,MAAM,CAACF,UAAZ,EAAwB;MAC3BrB,SAAS,CAAC,0BAAD,CAAT;MACA,OAAO,KAAP;IACH;;IACD,OAAO,IAAP;EACH,CAxBD;;EA0BA,IAAMuG,OAAO,GAAG,SAAVA,OAAU,GAAM;IAClB,IAAI,CAACD,eAAe,EAApB,EAAwB;MACpB,OAAO,KAAP;IACH;;IACD,IAAIE,WAAW,GAAG,iBAAiBjF,MAAM,CAACR,UAA1C;IACAyF,WAAW,IAAI,oBAAoB,KAAnC;IACAA,WAAW,IAAI,gBAAgB/E,eAA/B;IACA+E,WAAW,IAAI,kBAAkBtE,WAAjC;IACAsE,WAAW,IAAI,qBAAqBjF,MAAM,CAACP,cAA3C;IACAwF,WAAW,IAAI,oBAAoBjF,MAAM,CAACN,aAA1C;IACAuF,WAAW,IAAI,gBAAgBjF,MAAM,CAACL,SAAtC;IACAsF,WAAW,IAAI,cAAcjF,MAAM,CAACJ,OAApC;IACAqF,WAAW,IAAI,iBAAiBjF,MAAM,CAACF,UAAvC;IACA,IAAMgD,IAAI,GAAG,UAAGN,OAAO,CAACC,GAAR,CAAYC,iBAAf,gCAA6DuC,WAA1E;IACAvG,KAAK,CAACiE,GAAN,CAAUG,IAAV,EAAgB;MAAEoC,YAAY,EAAE;IAAhB,CAAhB,EAA0CtC,IAA1C,CAA+C,UAAAC,QAAQ,EAAI;MACvD,IAAMsC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACvC,QAAQ,CAACC,IAAV,CAAT,EAA0B;QAAEuC,IAAI,EAAE;MAAR,CAA1B,CAAb;MACA,IAAMC,OAAO,GAAG/C,GAAG,CAACgD,eAAJ,CAAoBJ,IAApB,CAAhB;MACA,IAAMK,MAAM,GAAGzD,QAAQ,CAAC0D,aAAT,CAAuB,QAAvB,CAAf;MACA,IAAID,MAAJ,aAAIA,MAAJ,uBAAIA,MAAM,CAAEE,GAAZ,EAAiBF,MAAM,CAACE,GAAP,GAAaJ,OAAb;MACjBvD,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CC,KAA5C,CAAkDC,OAAlD,GAA4D,cAA5D;IACH,CAND,EAMGa,KANH,CAMS,UAAAC,GAAG,EAAI;MACZvE,SAAS;IACZ,CARD;EASH,CAvBD;;EAwBA,IAAMkH,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACnB,IAAI,CAACd,QAAQ,EAAb,EAAiB;MACb,OAAO,KAAP;IACH;;IACD,IAAII,WAAW,GAAG,iBAAiBjF,MAAM,CAACR,UAA1C;IACAyF,WAAW,IAAI,oBAAoBjF,MAAM,CAAC8E,aAA1C;IACAG,WAAW,IAAI,gBAAgB/E,eAA/B;IACA+E,WAAW,IAAI,kBAAkBtE,WAAjC;IACAsE,WAAW,IAAI,qBAAqBjF,MAAM,CAACP,cAA3C;IACAwF,WAAW,IAAI,oBAAoBjF,MAAM,CAACN,aAA1C;IACAuF,WAAW,IAAI,gBAAgBjF,MAAM,CAACL,SAAtC;IACAsF,WAAW,IAAI,cAAcjF,MAAM,CAACJ,OAApC;IACAqF,WAAW,IAAI,iBAAiBjF,MAAM,CAACF,UAAvC;IACA,IAAMgD,IAAI,GAAG,UAAGN,OAAO,CAACC,GAAR,CAAYC,iBAAf,gCAA6DuC,WAA1E;IACAvG,KAAK,CAACiE,GAAN,CAAUG,IAAV,EAAgB;MAAEoC,YAAY,EAAE;IAAhB,CAAhB,EAA0CtC,IAA1C,CAA+C,UAAAC,QAAQ,EAAI;MACvD,IAAI7C,MAAM,CAAC8E,aAAP,KAAyB,KAA7B,EAAoC;QAChC,IAAMc,GAAG,GAAGC,MAAM,CAACtD,GAAP,CAAWgD,eAAX,CAA2B,IAAIH,IAAJ,CAAS,CAACvC,QAAQ,CAACC,IAAV,CAAT,CAA3B,CAAZ;QACA,IAAMgD,IAAI,GAAG/D,QAAQ,CAACgE,aAAT,CAAuB,GAAvB,CAAb;QACAD,IAAI,CAACE,IAAL,GAAYJ,GAAZ;QACAE,IAAI,CAACG,YAAL,CAAkB,UAAlB,EAA8B,iBAA9B;QACAlE,QAAQ,CAACmE,IAAT,CAAcC,WAAd,CAA0BL,IAA1B;QACAA,IAAI,CAACM,KAAL;QACArE,QAAQ,CAACmE,IAAT,CAAcG,WAAd,CAA0BP,IAA1B;MACH,CARD,MAQO;QACH,IAAMF,IAAG,GAAGC,MAAM,CAACtD,GAAP,CAAWgD,eAAX,CAA2B,IAAIH,IAAJ,CAAS,CAACvC,QAAQ,CAACC,IAAV,CAAT,CAA3B,CAAZ;;QACA,IAAMgD,KAAI,GAAG/D,QAAQ,CAACgE,aAAT,CAAuB,GAAvB,CAAb;;QACAD,KAAI,CAACE,IAAL,GAAYJ,IAAZ;;QACAE,KAAI,CAACG,YAAL,CAAkB,UAAlB,EAA8B,kBAA9B;;QACAlE,QAAQ,CAACmE,IAAT,CAAcC,WAAd,CAA0BL,KAA1B;;QACAA,KAAI,CAACM,KAAL;;QACArE,QAAQ,CAACmE,IAAT,CAAcG,WAAd,CAA0BP,KAA1B;MACH;IACJ,CAlBD,EAkBG/C,KAlBH,CAkBS,UAAAC,GAAG,EAAI;MACZvE,SAAS;IACZ,CApBD;EAqBH,CAnCD;;EAqCA,IAAM4D,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,MAAD,EAAY;IAC3C,IAAMC,GAAG,GAAG,UAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAf,wCAAqEJ,MAAjF;IACA5D,KAAK,CAACiE,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CAAoB,UAAAC,QAAQ,EAAI;MAC5BnB,sBAAsB,CAACmB,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBwD,2BAApB,CAAtB;IACH,CAFD,EAEGvD,KAFH,CAES,UAAAC,GAAG,EAAI;MACZvE,SAAS,CAAC,yCAAD,CAAT;IACH,CAJD;EAKH,CAPD;;EAQA,IAAM8H,YAAY,GAAG,SAAfA,YAAe,CAACrD,IAAD,EAAOsD,UAAP,EAAmB3E,WAAnB,EAAmC;IAEpD,IAAIqB,IAAI,CAACuD,SAAL,KAAmBD,UAAU,CAACC,SAAlC,EAA6C;MACzCvD,IAAI,CAACrB,WAAL,GAAmBA,WAAnB;MACA;IACH;;IACDqB,IAAI,CAACe,QAAL,CAAcC,GAAd,CAAkB,UAAAwC,CAAC,EAAI;MACnBH,YAAY,CAACG,CAAD,EAAIF,UAAJ,EAAgB3E,WAAhB,CAAZ;IACH,CAFD;EAGH,CATD;;EAUA,IAAM8E,cAAc,GAAG,SAAjBA,cAAiB,CAACzD,IAAD,EAAU;IAE7B,IAAIA,IAAI,CAACe,QAAL,CAAcT,MAAd,IAAwB,CAA5B,EAA+B;MAC3B,IAAIL,EAAE,GAAG,qBAAqBD,IAAI,CAACC,EAAnC;MACA,IAAMC,KAAK,GAAGrB,QAAQ,CAACC,cAAT,CAAwBmB,EAAxB,CAAd;;MACA,IAAIC,KAAK,CAACwD,SAAN,IAAmB,qBAAvB,EAA8C;QAC1CxD,KAAK,CAACK,SAAN,CAAgBC,MAAhB,CAAuB,QAAvB;QAEA,IAAImD,WAAW,GAAG,GAAlB;QACAA,WAAW,IAAI,gBAAgB3G,eAA/B;QACA2G,WAAW,IAAI,wBAAwB3D,IAAI,CAACC,EAA5C;;QACA,IAAMZ,IAAG,GAAG,UAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAf,uDAAoFmE,WAAhG;;QACAnI,KAAK,CAACiE,GAAN,CAAUJ,IAAV,EAAeK,IAAf,CAAoB,UAAAC,QAAQ,EAAI;UAC5BiE,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BlE,QAAQ,CAACC,IAAT,CAAcA,IAA1C;UACA,IAAIkE,EAAE,GAAGnE,QAAQ,CAACC,IAAT,CAAcA,IAAvB,CAF4B,CAG5B;;UAGA,IAAImE,GAAG,sBAAOxF,kBAAP,CAAP;;UACAwF,GAAG,CAAC/C,GAAJ,CAAQ,UAAAwC,CAAC,EAAI;YACTH,YAAY,CAACG,CAAD,EAAIxD,IAAJ,EAAU8D,EAAV,CAAZ;UACH,CAFD;UAGAtF,sBAAsB,CAACuF,GAAD,CAAtB;QACH,CAXD,EAWGlE,KAXH,CAWS,UAAAC,GAAG,EAAI;UACZvE,SAAS,CAAC,2BAAD,CAAT;QACH,CAbD,EAP0C,CAsB1C;QAEA;MACH,CAzBD,MAyBO;QACH2E,KAAK,CAACK,SAAN,CAAgBE,GAAhB,CAAoB,QAApB;MACH;IACJ;;IACD,IAAIhC,aAAa,IAAI,EAArB,EAAyB;MACrBC,gBAAgB,CAACsB,IAAI,CAACuD,SAAN,CAAhB;;MACA,IAAI9E,aAAa,CAACuF,KAAd,CAAoB,GAApB,EAAyB1D,MAAzB,IAAmCN,IAAI,CAACuD,SAAL,CAAeS,KAAf,CAAqB,GAArB,EAA0B1D,MAAjE,EAAyE;QACrE,IAAIL,GAAE,GAAG,qCAAqCD,IAAI,CAACC,EAAnD;;QACA,IAAMC,MAAK,GAAGrB,QAAQ,CAACC,cAAT,CAAwBmB,GAAxB,CAAd;;QAEA,IAAIC,MAAK,CAACwD,SAAN,IAAmB,gFAAvB,EAAyG;UACrGxD,MAAK,CAACK,SAAN,CAAgBC,MAAhB,CAAuB,uCAAvB;QACH,CAFD,MAEO;UACHN,MAAK,CAACK,SAAN,CAAgBE,GAAhB,CAAoB,uCAApB;;UACA,IAAIT,IAAI,CAACe,QAAL,CAAcT,MAAd,IAAwB,CAA5B,EAA+B;YAC3B,IAAIL,IAAE,GAAG,qBAAqBD,IAAI,CAACC,EAAnC;;YACA,IAAMC,OAAK,GAAGrB,QAAQ,CAACC,cAAT,CAAwBmB,IAAxB,CAAd;;YACAC,OAAK,CAACK,SAAN,CAAgBC,MAAhB,CAAuB,QAAvB;UACH;QAEJ;MAEJ,CAhBD,MAgBO;QACH,IAAIP,IAAE,GAAG,qCAAqCD,IAAI,CAACC,EAAnD;;QACA,IAAMC,OAAK,GAAGrB,QAAQ,CAACC,cAAT,CAAwBmB,IAAxB,CAAd;;QACA,IAAME,WAAW,GAAGtB,QAAQ,CAACuB,sBAAT,CAAgC,0CAAhC,CAApB;;QACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACG,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;UACzCF,WAAW,CAACE,CAAD,CAAX,CAAeE,SAAf,CAAyBC,MAAzB,CAAgC,uCAAhC;QACH;;QAED,IAAIyD,aAAa,GAAG,qBAAqBjE,IAAI,CAACC,EAA9C;QACA,IAAMiE,gBAAgB,GAAGrF,QAAQ,CAACC,cAAT,CAAwBmF,aAAxB,CAAzB;QACA,IAAME,wBAAwB,GAAGtF,QAAQ,CAACuB,sBAAT,CAAgC,cAAhC,CAAjC;;QACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8D,wBAAwB,CAAC7D,MAA7C,EAAqDD,CAAC,EAAtD,EAA0D;UACtD8D,wBAAwB,CAAC9D,CAAD,CAAxB,CAA4BE,SAA5B,CAAsCE,GAAtC,CAA0C,QAA1C;QACH;;QAED,IAAIP,OAAJ,EAAW;UACPA,OAAK,CAACK,SAAN,CAAgBE,GAAhB,CAAoB,uCAApB;;UACA,IAAIT,IAAI,CAACe,QAAL,CAAcT,MAAd,IAAwB,CAA5B,EAA+B;YAC3B,IAAIL,IAAE,GAAG,qBAAqBD,IAAI,CAACC,EAAnC;;YACA,IAAMC,OAAK,GAAGrB,QAAQ,CAACC,cAAT,CAAwBmB,IAAxB,CAAd;;YACAC,OAAK,CAACK,SAAN,CAAgBC,MAAhB,CAAuB,QAAvB;UACH;QACJ;MACJ;IAEJ,CA3CD,MA2CO;MACH9B,gBAAgB,CAACsB,IAAI,CAACuD,SAAN,CAAhB;;MACA,IAAItD,IAAE,GAAG,qCAAqCD,IAAI,CAACC,EAAnD;;MACA,IAAMC,OAAK,GAAGrB,QAAQ,CAACC,cAAT,CAAwBmB,IAAxB,CAAd;;MACA,IAAIC,OAAK,CAACwD,SAAN,IAAmB,gFAAvB,EAAyG;QACrGxD,OAAK,CAACK,SAAN,CAAgBC,MAAhB,CAAuB,uCAAvB;MACH,CAFD,MAEO;QACHN,OAAK,CAACK,SAAN,CAAgBE,GAAhB,CAAoB,uCAApB;;QACA,IAAIT,IAAI,CAACe,QAAL,CAAcT,MAAd,IAAwB,CAA5B,EAA+B;UAC3B,IAAIL,IAAE,GAAG,qBAAqBD,IAAI,CAACC,EAAnC;;UACA,IAAMC,OAAK,GAAGrB,QAAQ,CAACC,cAAT,CAAwBmB,IAAxB,CAAd;;UACAC,OAAK,CAACK,SAAN,CAAgBC,MAAhB,CAAuB,QAAvB;QACH;MACJ;IACJ;EAGJ,CA9FD;;EA+FA,IAAM4D,iBAAiB,GAAG,SAApBA,iBAAoB,CAACpE,IAAD,EAAU;IAChC,IAAIW,IAAI,sBAAOhC,WAAP,CAAR;;IACA,IAAIiC,KAAK,GAAGD,IAAI,CAACE,SAAL,CAAe,UAAAjB,IAAI;MAAA,OAAIA,IAAI,IAAII,IAAZ;IAAA,CAAnB,CAAZ;;IACA,IAAIY,KAAK,GAAG,CAAC,CAAb,EAAgB;MACZD,IAAI,CAAC0D,MAAL,CAAYzD,KAAZ,EAAmB,CAAnB;MACAhC,cAAc,CAAC+B,IAAD,CAAd;IACH,CAHD,MAGO;MACHA,IAAI,CAACG,IAAL,CAAUd,IAAV;MACApB,cAAc,CAAC+B,IAAD,CAAd;IACH;EAEJ,CAXD;;EAYA,oBACI,uDACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,kBAAD;IAAoB,SAAS,EAAC,qBAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ,eAII;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,IAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI;IAAK,SAAS,EAAC,UAAf;IAA0B,KAAK,EAAE;MAAE2D,WAAW,EAAE;IAAf,CAAjC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAhB,CAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,GAAG,EAAErJ,aAAa,CAAC,kBAAD,CAAvB;IACI,KAAK,EAAE;MAAEsJ,KAAK,EAAE,MAAT;MAAiBC,MAAM,EAAE,MAAzB;MAAiCC,SAAS,EAAE;IAA5C,CADX;IAEI,GAAG,EAAC,iBAFR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAII;IAAQ,KAAK,EAAE;MACXC,UAAU,EAAE,MADD;MAEXC,KAAK,EAAE;IAFI,CAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAGI/H,IAAI,CAACgI,aAAL,CAAmB;IAAE5E,EAAE,EAAE;EAAN,CAAnB,CAHJ,CAJJ,CADJ,CADJ,eAaI,oBAAC,gBAAD;IAAkB,IAAI,EAAE1C,YAAxB;IAAsC,sBAAsB,EAAEwC,sBAA9D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAbJ,CAFJ,eAmBI;IAAK,SAAS,EAAC,UAAf;IAA0B,KAAK,EAAE;MAAEuE,WAAW,EAAE;IAAf,CAAjC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAhB,CAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,GAAG,EAAErJ,aAAa,CAAC,kBAAD,CAAvB;IACI,KAAK,EAAE;MAAEsJ,KAAK,EAAE,MAAT;MAAiBC,MAAM,EAAE,MAAzB;MAAiCC,SAAS,EAAE;IAA5C,CADX;IAEI,GAAG,EAAC,iBAFR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAII;IAAQ,KAAK,EAAE;MAAEC,UAAU,EAAE,MAAd;MAAsBC,KAAK,EAAE;IAA7B,CAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4BAJJ,CADJ,CADJ,eASI,oBAAC,6BAAD;IACI,IAAI,EAAErG,kBADV;IAEI,6BAA6B,EAAEkF,cAFnC;IAGI,aAAa,EAAEW,iBAHnB;IAII,IAAI,EAAEzF,WAJV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EATJ,CAnBJ,eAoCI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,KAAK,EAAE;MAAEmG,SAAS,EAAE;IAAb,CAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iCAA4C;IAAG,KAAK,EAAE;MAAEF,KAAK,EAAE;IAAT,CAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAA5C,CADJ,eACyF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADzF,eAEI,oBAAC,YAAD;IACI,IAAI,EAAC,gBADT;IAEI,OAAO,EAAEjH,gBAFb;IAGI,SAAS,EAAE,mBAAAoH,CAAC,EAAI;MACZ7D,6BAA6B,CAACpE,MAAM,CAACR,UAAR,EAAoBU,eAApB,CAA7B;IACH,CALL;IAMI,cAAc,EAAE,wBAACgI,MAAD;MAAA,OAAYA,MAAM,CAACC,gBAAnB;IAAA,CANpB;IAOI,KAAK,EAAEpH,iBAPX;IAQI,QAAQ,EAAE,kBAACyD,KAAD,EAAQ4D,QAAR,EAAqB;MAC3BpH,oBAAoB,CAACoH,QAAD,CAApB;;MACA,IAAIA,QAAQ,KAAK,IAAjB,EAAuB;QACnBnI,SAAS,iCAAMD,MAAN;UAAcP,cAAc,EAAE2I,QAAQ,CAACjF;QAAvC,GAAT;MACH,CAFD,MAEO;QACHlD,SAAS,iCAAMD,MAAN;UAAcP,cAAc,EAAE;QAA9B,GAAT;MACH;IACJ,CAfL;IAgBI,WAAW,EAAE,qBAAC6C,MAAD;MAAA,oBACT,oBAAC,SAAD,oBAAeA,MAAf;QAAuB,KAAK,EAAC,uBAA7B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GADS;IAAA,CAhBjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CADJ,CADJ,CADJ,eA4BI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAA+B;IAAM,SAAS,EAAC,MAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,+BAAkC;IAC7D,KAAK,EAAE;MAAEwF,KAAK,EAAE;IAAT,CADsD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAlC,CAA/B,CADJ,eAGI,oBAAC,YAAD;IACI,IAAI,EAAC,eADT;IAEI,OAAO,EAAE3G,eAFb;IAGI,SAAS,EAAE,mBAAA8G,CAAC,EAAI;MACZ3D,qBAAqB,CAAChE,WAAD,EAAcN,MAAM,CAACR,UAArB,EAAiCU,eAAjC,CAArB;IACH,CALL;IAMI,cAAc,EAAE,wBAACgI,MAAD;MAAA,OAAYA,MAAM,CAACG,eAAnB;IAAA,CANpB;IAOI,KAAK,EAAEpH,gBAPX;IAQI,QAAQ,EAAE,kBAACuD,KAAD,EAAQ4D,QAAR,EAAqB;MAC3BlH,mBAAmB,CAACkH,QAAD,CAAnB;;MACA,IAAIA,QAAQ,KAAK,IAAjB,EAAuB;QACnBnI,SAAS,iCAAMD,MAAN;UAAcN,aAAa,EAAE0I,QAAQ,CAAC1I;QAAtC,GAAT;MACH,CAFD,MAEO;QACHO,SAAS,iCAAMD,MAAN;UAAcN,aAAa,EAAE;QAA7B,GAAT;MACH;IACJ,CAfL;IAgBI,WAAW,EAAE,qBAAC4C,MAAD;MAAA,oBACT,oBAAC,SAAD,oBAAeA,MAAf;QAAuB,KAAK,EAAC,qBAA7B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GADS;IAAA,CAhBjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHJ,CADJ,CA5BJ,eAuDI;IAAK,SAAS,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,mBAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CAvDJ,eA2DI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,qCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAA+B;IAC3B,SAAS,EAAC,MADiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBAA/B,eACuC;IAC/B,SAAS,EAAC,cADqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OADvC,CADJ,eAII;IAAQ,SAAS,EAAC,cAAlB;IAAiC,EAAE,EAAC,YAApC;IAAiD,IAAI,EAAC,YAAtD;IACI,QAAQ,EAAE,kBAAC2F,CAAD;MAAA,OAAO1D,YAAY,CAAC0D,CAAD,CAAnB;IAAA,CADd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAGI;IAAQ,KAAK,EAAC,EAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBAHJ,eAII;IAAQ,KAAK,EAAC,WAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAJJ,CAJJ,CADJ,CADJ,CA3DJ,eA2EI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,qCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAA+B;IAC3B,SAAS,EAAC,MADiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAA/B,eACyC;IACjC,SAAS,EAAC,cADuB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OADzC,CADJ,eAII;IAAQ,SAAS,EAAC,cAAlB;IAAiC,EAAE,EAAC,eAApC;IAAoD,IAAI,EAAC,eAAzD;IACI,QAAQ,EAAE,kBAACA,CAAD;MAAA,OAAO1D,YAAY,CAAC0D,CAAD,CAAnB;IAAA,CADd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAGI;IAAQ,KAAK,EAAC,EAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,0BAHJ,eAII;IAAQ,KAAK,EAAC,KAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SAJJ,CAJJ,CADJ,CADJ,CA3EJ,eA2FI,oBAAC,MAAD;IAAQ,SAAS,EAAC,kBAAlB;IAAqC,EAAE,EAAC,UAAxC;IAAmD,OAAO,EAAC,WAA3D;IACI,KAAK,EAAC,SADV;IAEI,OAAO,EAAEtC,QAFb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cA3FJ,eAiGI;IAAK,SAAS,EAAC,aAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,MAAD;IAAQ,SAAS,EAAC,WAAlB;IAA8B,EAAE,EAAC,UAAjC;IAA4C,OAAO,EAAC,WAApD;IAAgE,KAAK,EAAC,SAAtE;IAAgF,OAAO,EAAEX,OAAzF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aADJ,CAjGJ,CApCJ,CADJ,eA6II;IAAK,SAAS,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBACI;IAAQ,GAAG,EAAC,EAAZ;IAAe,SAAS,EAAC,OAAzB;IAAiC,EAAE,EAAC,kBAApC;IAAuD,MAAM,EAAC,OAA9D;IAAsE,KAAK,EAAC,EAA5E;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CA7IJ,CADJ,CADJ,CAJJ,CADJ;AA4JH"},"metadata":{},"sourceType":"module"}