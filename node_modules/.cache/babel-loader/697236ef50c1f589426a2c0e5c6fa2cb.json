{"ast":null,"code":"import _defineProperty from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/CreditLimitHistoryReport.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ReportTabsHeader from \"../../tabs/ReportsTabsHeader\";\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { useHistory } from 'react-router-dom';\nimport { Card } from \"react-bootstrap\";\nimport Button from '@material-ui/core/Button';\nimport { CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { showError, showSuccess } from \"../../../../pages/Alert\";\nimport axios from \"axios\";\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from \"../MisReportBreadCrum\";\nvar fields = {\n  distributorId: \"\",\n  startDate: \"\",\n  endDate: \"\",\n  report: \"\",\n  reportType: \"\",\n  companyId: \"\"\n};\nexport default function CreditLimitHistoryReport() {\n  var _this = this;\n\n  var companyId = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var selectedCompany = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var userId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      distributors = _useState2[0],\n      setDistributors = _useState2[1];\n\n  var _useState3 = useState(fields),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputs = _useState4[0],\n      setInputs = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showReport = _useState6[0],\n      setShowReport = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      reportData = _useState8[0],\n      setReportData = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      option = _useState10[0],\n      setOption = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      distributorValue = _useState12[0],\n      setDistributorValue = _useState12[1]; // useEffect(() => {\n  //     document.getElementById('pills-receivable-invoice-statement-cash-tab').classList.add('active')\n  // }, []);\n\n\n  useEffect(function () {\n    getAllDistributorList();\n  }, [companyId]);\n\n  var getAllDistributorList = function getAllDistributorList() {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/distributor/get-distributor-list-company/\").concat(companyId, \"/\");\n    axios.get(URL).then(function (response) {\n      setDistributors(response.data.data);\n    });\n  };\n\n  var handleChangeDistributor = function handleChangeDistributor(e, dis) {\n    if (dis.distributorId !== null || dis.distributorId !== \"\") {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        distributorId: parseInt(dis.distributorId)\n      }));\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    setInputs(function (values) {\n      return _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var validate = function validate() {\n    console.log(\"inputs=\", inputs); // if (!inputs.distributorId) {\n    //     showError('Distributor Name is required.');\n    //     return false;\n    // } \n\n    if (inputs.startDate === undefined || inputs.startDate === \"\") {\n      showError(\"Start date  is required\");\n    } else if (inputs.endDate === undefined || inputs.endDate === \"\") {\n      showError(\"End date is required\");\n    } else if (new Date(inputs.endDate) < new Date(inputs.startDate)) {\n      showError(\"End Date should be greater than Start Date.\");\n      return false;\n    } else if (!inputs.report) {\n      showError('Report Format is required.');\n      return false;\n    } // else if (!inputs.reportType) {\n    //     showError('Report Type is required.');\n    //     return false;\n    // }\n\n\n    return true;\n  };\n\n  var previewCreditLimitHistory = function previewCreditLimitHistory() {\n    if (!validate()) {\n      return false;\n    }\n\n    var queryString = '?';\n    queryString += 'companyId=' + companyId;\n    queryString += '&startDate=' + inputs.startDate;\n    queryString += '&endDate=' + inputs.endDate;\n    queryString += inputs.distributorId ? '&distributorId=' + inputs.distributorId : '';\n    queryString += '&reportFormat=' + inputs.report;\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/reports/credit-limit-history-report\") + queryString;\n    axios.get(URL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var url = window.URL.createObjectURL(new Blob([response.data]));\n      var link = document.createElement('a');\n      link.href = url;\n\n      if (inputs.report == \"pdf\") {\n        link.setAttribute('download', \"creditLimitHistoryReport.pdf\");\n      } else {\n        link.setAttribute('download', \"creditLimitHistoryReport..xlsx\");\n      }\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var handlePaste = function handlePaste(e) {\n    e.preventDefault();\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MisReportBreadCrum, {\n    menuTitle: \"Credit Limit History Report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"create-field-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, \"Report\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 72\n    }\n  }, \"Distributor\")), /*#__PURE__*/React.createElement(Autocomplete //id=\"distributorId\"\n  , {\n    name: \"distributorId\",\n    options: distributors,\n    onKeyDown: getAllDistributorList,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.distributorName;\n    },\n    value: distributorValue,\n    onChange: function onChange(event, newValue) {\n      setDistributorValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          distributorId: newValue.distributorId\n        }));\n      } else {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          distributorId: ''\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Distributor\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 49\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-6 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 41\n    }\n  }, \"Start Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 82\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"startDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"startDate\",\n    value: inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-6 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 41\n    }\n  }, \"End Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 80\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"endDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"endDate\",\n    value: inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    required: true,\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-6 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 76\n    }\n  }, \"Report Format\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 119\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"reportId\",\n    name: \"report\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 49\n    }\n  }, \"Select Report Format\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 49\n    }\n  }, \"Pdf\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"excel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 49\n    }\n  }, \"Excel\"))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: previewCreditLimitHistory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 33\n    }\n  }, \"Submit\")))))));\n}","map":{"version":3,"names":["React","useEffect","useState","ReportTabsHeader","toAbsoluteUrl","useHistory","Card","Button","CardBody","Autocomplete","TextField","NavLink","shallowEqual","useSelector","showError","showSuccess","axios","typeOf","moment","Flatpickr","MisReportBreadCrum","fields","distributorId","startDate","endDate","report","reportType","companyId","CreditLimitHistoryReport","state","auth","company","selectedCompany","userId","user","distributors","setDistributors","inputs","setInputs","showReport","setShowReport","reportData","setReportData","option","setOption","distributorValue","setDistributorValue","getAllDistributorList","URL","process","env","REACT_APP_API_URL","get","then","response","data","handleChangeDistributor","e","dis","parseInt","handleChange","event","name","target","value","values","validate","console","log","undefined","Date","previewCreditLimitHistory","queryString","responseType","url","window","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","catch","err","handlePaste","preventDefault","distributorName","newValue","params","color","format","dateFormat"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/CreditLimitHistoryReport.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReportTabsHeader from \"../../tabs/ReportsTabsHeader\";\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { useHistory } from 'react-router-dom';\nimport { Card } from \"react-bootstrap\";\nimport Button from '@material-ui/core/Button';\nimport { CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { showError, showSuccess } from \"../../../../pages/Alert\";\nimport axios from \"axios\";\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from \"../MisReportBreadCrum\";\n\nconst fields = {\n    distributorId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    report: \"\",\n    reportType: \"\",\n    companyId:\"\"\n}\nexport default function CreditLimitHistoryReport() {\n    const companyId = useSelector((state) => state.auth.company, shallowEqual);\n    const selectedCompany = useSelector((state) => state.auth.company, shallowEqual);\n    const userId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const [distributors, setDistributors] = useState([]);\n    const [inputs, setInputs] = useState(fields);\n    const [showReport, setShowReport] = useState('');\n    const [reportData, setReportData] = useState([]);\n    const [option, setOption] = useState()\n    const [distributorValue, setDistributorValue] = useState(null);\n\n    // useEffect(() => {\n    //     document.getElementById('pills-receivable-invoice-statement-cash-tab').classList.add('active')\n    // }, []);\n\n    useEffect(() => {\n        getAllDistributorList();\n    }, [companyId])\n\n    const getAllDistributorList = () => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/distributor/get-distributor-list-company/${companyId}/`;\n        axios.get(URL).then(response => {\n            setDistributors(response.data.data);\n        });\n    }\n  \n    const handleChangeDistributor = (e, dis) => {\n        if (dis.distributorId !== null || dis.distributorId !== \"\") {\n            setInputs({ ...inputs, distributorId: parseInt(dis.distributorId)});\n        }\n    }\n\n    const handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setInputs(values => ({ ...values, [name]: value }))\n    }\n\n   \n    const validate = () => {\n        console.log(\"inputs=\",inputs)\n\n      \n      \n        // if (!inputs.distributorId) {\n        //     showError('Distributor Name is required.');\n        //     return false;\n        // } \n        if (inputs.startDate===undefined || inputs.startDate===\"\") {\n            showError(\"Start date  is required\");\n        } else if (inputs.endDate===undefined || inputs.endDate===\"\") {\n            showError(\"End date is required\");\n        } else if (new Date(inputs.endDate) < new Date(inputs.startDate)) {\n            showError(\"End Date should be greater than Start Date.\");\n            return false;\n        } else if (!inputs.report) {\n            showError('Report Format is required.');\n            return false;\n        }\n        // else if (!inputs.reportType) {\n        //     showError('Report Type is required.');\n        //     return false;\n        // }\n        return true;\n    }\n\n    const previewCreditLimitHistory= () =>{\n        if(!validate()){\n            return false;\n        }\n        let queryString = '?';\n        queryString += 'companyId=' + companyId;\n        queryString += '&startDate=' + inputs.startDate;\n        queryString += '&endDate=' + inputs.endDate;\n        queryString += inputs.distributorId ? '&distributorId=' + inputs.distributorId : '';\n        queryString += '&reportFormat=' + inputs.report;\n        const URL = `${process.env.REACT_APP_API_URL}/api/reports/credit-limit-history-report`+queryString;\n        axios.get(URL, {responseType: 'blob'}).then(response => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            if(inputs.report == \"pdf\") {\n                link.setAttribute('download', \"creditLimitHistoryReport.pdf\");\n            }\n            else {\n                link.setAttribute('download', \"creditLimitHistoryReport..xlsx\");\n            }\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n\n        }).catch(err => {\n            showError();\n        });\n        \n    }\n    const handlePaste = (e) => {\n        e.preventDefault()\n        return false;\n    }\n\n    return (\n        <>\n            <div>\n            <MisReportBreadCrum menuTitle=\"Credit Limit History Report\"/>\n            </div>\n            <div>\n                {/* <ReportTabsHeader /> */}\n            </div>\n            <div>\n            <Card>\n                <CardBody>\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <span className=\"create-field-title\">Report</span>\n\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-6'>\n                                        <label className='level-title'><span className=\"mr-1\">Distributor</span></label>\n                                        <Autocomplete\n                                            //id=\"distributorId\"\n                                            name=\"distributorId\"\n                                            options={distributors}\n                                            onKeyDown={getAllDistributorList}\n                                            getOptionLabel={(option) => option.distributorName}\n                                            value={distributorValue}\n                                            onChange={(event, newValue) => {\n                                                setDistributorValue(newValue)\n                                                if (newValue !== null) {\n                                                    setInputs({ ...inputs, distributorId: newValue.distributorId });\n                                                }else {\n                                                    setInputs({ ...inputs, distributorId: '' });\n                                                }\n                                            }}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Select Distributor\" />\n                                            )}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-6 first-level-top'>\n                                        <label className='level-title'>Start Date<i style={{ color: \"red\" }}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"startDate\" placeholder=\"dd-MM-yy\"\n                                            name='startDate'\n                                            value={inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"d-M-Y\" }}\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                })\n\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-6 first-level-top'>\n                                        <label className='level-title'>End Date<i style={{ color: \"red\" }}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"endDate\" placeholder=\"dd-MM-yy\"\n                                            name='endDate'\n                                            value={inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"d-M-Y\" }} required\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                })\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-6 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span className=\"mr-1\">Report Format</span><span className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportId\" name=\"report\"\n                                                onChange={(e) => handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report Format</option>\n                                                <option value=\"pdf\">Pdf</option>\n                                                <option value=\"excel\">Excel</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                \n\n                                <Button className=\"float-right mt-5\" id=\"gotItBtn\" variant=\"contained\" \n                                    color=\"primary\"  onClick={previewCreditLimitHistory}>\n                                    Submit\n                                </Button>\n\n                        </div>\n                    </div>\n                </CardBody>\n            </Card>\n            </div>\n        </>);\n}"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,QAAT,QAAyB,6CAAzB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,yBAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,0CAAP;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AAEA,IAAMC,MAAM,GAAG;EACXC,aAAa,EAAE,EADJ;EAEXC,SAAS,EAAE,EAFA;EAGXC,OAAO,EAAE,EAHE;EAIXC,MAAM,EAAE,EAJG;EAKXC,UAAU,EAAE,EALD;EAMXC,SAAS,EAAC;AANC,CAAf;AAQA,eAAe,SAASC,wBAAT,GAAoC;EAAA;;EAC/C,IAAMD,SAAS,GAAGd,WAAW,CAAC,UAACgB,KAAD;IAAA,OAAWA,KAAK,CAACC,IAAN,CAAWC,OAAtB;EAAA,CAAD,EAAgCnB,YAAhC,CAA7B;EACA,IAAMoB,eAAe,GAAGnB,WAAW,CAAC,UAACgB,KAAD;IAAA,OAAWA,KAAK,CAACC,IAAN,CAAWC,OAAtB;EAAA,CAAD,EAAgCnB,YAAhC,CAAnC;EACA,IAAMqB,MAAM,GAAGpB,WAAW,CAAC,UAACgB,KAAD;IAAA,OAAWA,KAAK,CAACC,IAAN,CAAWI,IAAX,CAAgBD,MAA3B;EAAA,CAAD,EAAoCrB,YAApC,CAA1B;;EACA,gBAAwCV,QAAQ,CAAC,EAAD,CAAhD;EAAA;EAAA,IAAOiC,YAAP;EAAA,IAAqBC,eAArB;;EACA,iBAA4BlC,QAAQ,CAACmB,MAAD,CAApC;EAAA;EAAA,IAAOgB,MAAP;EAAA,IAAeC,SAAf;;EACA,iBAAoCpC,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOqC,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAAoCtC,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOuC,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAA4BxC,QAAQ,EAApC;EAAA;EAAA,IAAOyC,MAAP;EAAA,IAAeC,SAAf;;EACA,kBAAgD1C,QAAQ,CAAC,IAAD,CAAxD;EAAA;EAAA,IAAO2C,gBAAP;EAAA,IAAyBC,mBAAzB,kBAT+C,CAW/C;EACA;EACA;;;EAEA7C,SAAS,CAAC,YAAM;IACZ8C,qBAAqB;EACxB,CAFQ,EAEN,CAACpB,SAAD,CAFM,CAAT;;EAIA,IAAMoB,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;IAChC,IAAMC,GAAG,aAAMC,OAAO,CAACC,GAAR,CAAYC,iBAAlB,2DAAoFxB,SAApF,MAAT;IACAX,KAAK,CAACoC,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CAAoB,UAAAC,QAAQ,EAAI;MAC5BlB,eAAe,CAACkB,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAf;IACH,CAFD;EAGH,CALD;;EAOA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,CAAD,EAAIC,GAAJ,EAAY;IACxC,IAAIA,GAAG,CAACpC,aAAJ,KAAsB,IAAtB,IAA8BoC,GAAG,CAACpC,aAAJ,KAAsB,EAAxD,EAA4D;MACxDgB,SAAS,iCAAMD,MAAN;QAAcf,aAAa,EAAEqC,QAAQ,CAACD,GAAG,CAACpC,aAAL;MAArC,GAAT;IACH;EACJ,CAJD;;EAMA,IAAMsC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;IAC5B,IAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAAxB;IACA,IAAIE,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAAzB;IACA1B,SAAS,CAAC,UAAA2B,MAAM;MAAA,uCAAUA,MAAV,2BAAmBH,IAAnB,EAA0BE,KAA1B;IAAA,CAAP,CAAT;EACH,CAJD;;EAOA,IAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACnBC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB/B,MAAtB,EADmB,CAKnB;IACA;IACA;IACA;;IACA,IAAIA,MAAM,CAACd,SAAP,KAAmB8C,SAAnB,IAAgChC,MAAM,CAACd,SAAP,KAAmB,EAAvD,EAA2D;MACvDT,SAAS,CAAC,yBAAD,CAAT;IACH,CAFD,MAEO,IAAIuB,MAAM,CAACb,OAAP,KAAiB6C,SAAjB,IAA8BhC,MAAM,CAACb,OAAP,KAAiB,EAAnD,EAAuD;MAC1DV,SAAS,CAAC,sBAAD,CAAT;IACH,CAFM,MAEA,IAAI,IAAIwD,IAAJ,CAASjC,MAAM,CAACb,OAAhB,IAA2B,IAAI8C,IAAJ,CAASjC,MAAM,CAACd,SAAhB,CAA/B,EAA2D;MAC9DT,SAAS,CAAC,6CAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAI,CAACuB,MAAM,CAACZ,MAAZ,EAAoB;MACvBX,SAAS,CAAC,4BAAD,CAAT;MACA,OAAO,KAAP;IACH,CAnBkB,CAoBnB;IACA;IACA;IACA;;;IACA,OAAO,IAAP;EACH,CAzBD;;EA2BA,IAAMyD,yBAAyB,GAAE,SAA3BA,yBAA2B,GAAK;IAClC,IAAG,CAACL,QAAQ,EAAZ,EAAe;MACX,OAAO,KAAP;IACH;;IACD,IAAIM,WAAW,GAAG,GAAlB;IACAA,WAAW,IAAI,eAAe7C,SAA9B;IACA6C,WAAW,IAAI,gBAAgBnC,MAAM,CAACd,SAAtC;IACAiD,WAAW,IAAI,cAAcnC,MAAM,CAACb,OAApC;IACAgD,WAAW,IAAInC,MAAM,CAACf,aAAP,GAAuB,oBAAoBe,MAAM,CAACf,aAAlD,GAAkE,EAAjF;IACAkD,WAAW,IAAI,mBAAmBnC,MAAM,CAACZ,MAAzC;IACA,IAAMuB,GAAG,GAAG,UAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAf,gDAA2EqB,WAAvF;IACAxD,KAAK,CAACoC,GAAN,CAAUJ,GAAV,EAAe;MAACyB,YAAY,EAAE;IAAf,CAAf,EAAuCpB,IAAvC,CAA4C,UAAAC,QAAQ,EAAI;MACpD,IAAMoB,GAAG,GAAGC,MAAM,CAAC3B,GAAP,CAAW4B,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAACvB,QAAQ,CAACC,IAAV,CAAT,CAA3B,CAAZ;MACA,IAAMuB,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;MACAF,IAAI,CAACG,IAAL,GAAYP,GAAZ;;MACA,IAAGrC,MAAM,CAACZ,MAAP,IAAiB,KAApB,EAA2B;QACvBqD,IAAI,CAACI,YAAL,CAAkB,UAAlB,EAA8B,8BAA9B;MACH,CAFD,MAGK;QACDJ,IAAI,CAACI,YAAL,CAAkB,UAAlB,EAA8B,gCAA9B;MACH;;MACDH,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,IAA1B;MACAA,IAAI,CAACO,KAAL;MACAN,QAAQ,CAACI,IAAT,CAAcG,WAAd,CAA0BR,IAA1B;IAEH,CAdD,EAcGS,KAdH,CAcS,UAAAC,GAAG,EAAI;MACZ1E,SAAS;IACZ,CAhBD;EAkBH,CA7BD;;EA8BA,IAAM2E,WAAW,GAAG,SAAdA,WAAc,CAAChC,CAAD,EAAO;IACvBA,CAAC,CAACiC,cAAF;IACA,OAAO,KAAP;EACH,CAHD;;EAKA,oBACI,uDACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,kBAAD;IAAoB,SAAS,EAAC,6BAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADA,CADJ,eAII;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJJ,eAOI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,IAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,WAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAM,SAAS,EAAC,oBAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YADJ,eAGQ;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAA+B;IAAM,SAAS,EAAC,MAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBAA/B,CADJ,eAEI,oBAAC,YAAD,CACI;EADJ;IAEI,IAAI,EAAC,eAFT;IAGI,OAAO,EAAEvD,YAHb;IAII,SAAS,EAAEY,qBAJf;IAKI,cAAc,EAAE,wBAACJ,MAAD;MAAA,OAAYA,MAAM,CAACgD,eAAnB;IAAA,CALpB;IAMI,KAAK,EAAE9C,gBANX;IAOI,QAAQ,EAAE,kBAACgB,KAAD,EAAQ+B,QAAR,EAAqB;MAC3B9C,mBAAmB,CAAC8C,QAAD,CAAnB;;MACA,IAAIA,QAAQ,KAAK,IAAjB,EAAuB;QACnBtD,SAAS,iCAAMD,MAAN;UAAcf,aAAa,EAAEsE,QAAQ,CAACtE;QAAtC,GAAT;MACH,CAFD,MAEM;QACFgB,SAAS,iCAAMD,MAAN;UAAcf,aAAa,EAAE;QAA7B,GAAT;MACH;IACJ,CAdL;IAeI,WAAW,EAAE,qBAACuE,MAAD;MAAA,oBACT,oBAAC,SAAD,oBAAeA,MAAf;QAAuB,KAAK,EAAC,oBAA7B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GADS;IAAA,CAfjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CADJ,CAHR,eA4BQ;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,qCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAAyC;IAAG,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAT,CAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAzC,CADJ,eAEI,oBAAC,SAAD;IAAW,SAAS,EAAC,cAArB;IAAoC,EAAE,EAAC,WAAvC;IAAmD,WAAW,EAAC,UAA/D;IACI,IAAI,EAAC,WADT;IAEI,KAAK,EAAEzD,MAAM,CAACd,SAAP,GAAmBL,MAAM,CAACmB,MAAM,CAACd,SAAR,EAAmB,YAAnB,CAAN,CAAuCwE,MAAvC,CAA8C,aAA9C,CAAnB,GAAkF,EAF7F;IAGI,OAAO,EAAE;MAAEC,UAAU,EAAE;IAAd,CAHb;IAII,QAAQ,EAAE,kBAAChC,KAAD,EAAW;MACjB1B,SAAS,iCACFD,MADE;QACM,aAAanB,MAAM,CAAC,IAAIoD,IAAJ,CAASN,KAAT,CAAD,CAAN,CAAwB+B,MAAxB,CAA+B,YAA/B;MADnB,GAAT;IAIH,CATL;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CADJ,CA5BR,eA8CQ;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,qCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4BAAuC;IAAG,KAAK,EAAE;MAAED,KAAK,EAAE;IAAT,CAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAvC,CADJ,eAEI,oBAAC,SAAD;IAAW,SAAS,EAAC,cAArB;IAAoC,EAAE,EAAC,SAAvC;IAAiD,WAAW,EAAC,UAA7D;IACI,IAAI,EAAC,SADT;IAEI,KAAK,EAAEzD,MAAM,CAACb,OAAP,GAAiBN,MAAM,CAACmB,MAAM,CAACb,OAAR,EAAiB,YAAjB,CAAN,CAAqCuE,MAArC,CAA4C,aAA5C,CAAjB,GAA8E,EAFzF;IAGI,OAAO,EAAE;MAAEC,UAAU,EAAE;IAAd,CAHb;IAGsC,QAAQ,MAH9C;IAII,QAAQ,EAAE,kBAAChC,KAAD,EAAW;MACjB1B,SAAS,iCACFD,MADE;QACM,WAAWnB,MAAM,CAAC,IAAIoD,IAAJ,CAASN,KAAT,CAAD,CAAN,CAAwB+B,MAAxB,CAA+B,YAA/B;MADjB,GAAT;IAGH,CARL;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CADJ,CA9CR,eA+DQ;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,qCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAA+B;IAAM,SAAS,EAAC,MAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAA/B,eAA0E;IAAM,SAAS,EAAC,cAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAA1E,CADJ,eAEI;IAAQ,SAAS,EAAC,cAAlB;IAAiC,EAAE,EAAC,UAApC;IAA+C,IAAI,EAAC,QAApD;IACI,QAAQ,EAAE,kBAACtC,CAAD;MAAA,OAAOG,YAAY,CAACH,CAAD,CAAnB;IAAA,CADd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAGI;IAAQ,KAAK,EAAC,EAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,0BAHJ,eAII;IAAQ,KAAK,EAAC,KAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SAJJ,eAKI;IAAQ,KAAK,EAAC,OAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WALJ,CAFJ,CADJ,CADJ,CA/DR,eA+EQ,oBAAC,MAAD;IAAQ,SAAS,EAAC,kBAAlB;IAAqC,EAAE,EAAC,UAAxC;IAAmD,OAAO,EAAC,WAA3D;IACI,KAAK,EAAC,SADV;IACqB,OAAO,EAAEc,yBAD9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YA/ER,CADJ,CADJ,CADJ,CADA,CAPJ,CADJ;AAsGH"},"metadata":{},"sourceType":"module"}