{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialSpecificationsState = {\n  listLoading: false,\n  actionsLoading: false,\n  totalCount: 0,\n  entities: null,\n  specificationForEdit: undefined,\n  lastError: null\n};\nexport var callTypes = {\n  list: \"list\",\n  action: \"action\"\n};\nexport var specificationsSlice = createSlice({\n  name: \"specifications\",\n  initialState: initialSpecificationsState,\n  reducers: {\n    catchError: function catchError(state, action) {\n      state.error = \"\".concat(action.type, \": \").concat(action.payload.error);\n\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = false;\n      } else {\n        state.actionsLoading = false;\n      }\n    },\n    startCall: function startCall(state, action) {\n      state.error = null;\n\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = true;\n      } else {\n        state.actionsLoading = true;\n      }\n    },\n    // getSpecificationById\n    specificationFetched: function specificationFetched(state, action) {\n      state.actionsLoading = false;\n      state.specificationForEdit = action.payload.specificationForEdit;\n      state.error = null;\n    },\n    // findSpecifications\n    specificationsFetched: function specificationsFetched(state, action) {\n      var _action$payload = action.payload,\n          totalCount = _action$payload.totalCount,\n          entities = _action$payload.entities;\n      state.listLoading = false;\n      state.error = null;\n      state.entities = entities;\n      state.totalCount = totalCount;\n    },\n    // createSpecification\n    specificationCreated: function specificationCreated(state, action) {\n      state.actionsLoading = false;\n      state.error = null;\n      state.entities.push(action.payload.specification);\n    },\n    // updateSpecification\n    specificationUpdated: function specificationUpdated(state, action) {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.map(function (entity) {\n        if (entity.id === action.payload.specification.id) {\n          return action.payload.specification;\n        }\n\n        return entity;\n      });\n    },\n    // deleteSpecification\n    specificationDeleted: function specificationDeleted(state, action) {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(function (el) {\n        return el.id !== action.payload.id;\n      });\n    },\n    // deleteSpecifications\n    specificationsDeleted: function specificationsDeleted(state, action) {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(function (el) {\n        return !action.payload.ids.includes(el.id);\n      });\n    }\n  }\n});","map":{"version":3,"names":["createSlice","initialSpecificationsState","listLoading","actionsLoading","totalCount","entities","specificationForEdit","undefined","lastError","callTypes","list","action","specificationsSlice","name","initialState","reducers","catchError","state","error","type","payload","callType","startCall","specificationFetched","specificationsFetched","specificationCreated","push","specification","specificationUpdated","map","entity","id","specificationDeleted","filter","el","specificationsDeleted","ids","includes"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/ECommerce/_redux/specifications/specificationsSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialSpecificationsState = {\r\n  listLoading: false,\r\n  actionsLoading: false,\r\n  totalCount: 0,\r\n  entities: null,\r\n  specificationForEdit: undefined,\r\n  lastError: null\r\n};\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\"\r\n};\r\n\r\nexport const specificationsSlice = createSlice({\r\n  name: \"specifications\",\r\n  initialState: initialSpecificationsState,\r\n  reducers: {\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}: ${action.payload.error}`;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionsLoading = false;\r\n      }\r\n    },\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionsLoading = true;\r\n      }\r\n    },\r\n    // getSpecificationById\r\n    specificationFetched: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.specificationForEdit = action.payload.specificationForEdit;\r\n      state.error = null;\r\n    },\r\n    // findSpecifications\r\n    specificationsFetched: (state, action) => {\r\n      const { totalCount, entities } = action.payload;\r\n      state.listLoading = false;\r\n      state.error = null;\r\n      state.entities = entities;\r\n      state.totalCount = totalCount;\r\n    },\r\n    // createSpecification\r\n    specificationCreated: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.error = null;\r\n      state.entities.push(action.payload.specification);\r\n    },\r\n    // updateSpecification\r\n    specificationUpdated: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.map(entity => {\r\n        if (entity.id === action.payload.specification.id) {\r\n          return action.payload.specification;\r\n        }\r\n        return entity;\r\n      });\r\n    },\r\n    // deleteSpecification\r\n    specificationDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(el => el.id !== action.payload.id);\r\n    },\r\n    // deleteSpecifications\r\n    specificationsDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(\r\n        el => !action.payload.ids.includes(el.id)\r\n      );\r\n    }\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}