{"ast":null,"code":"import _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/UserManagement/permissionSetup/PermissionSetup.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Button from '@material-ui/core/Button';\nimport { CardBody } from \"../../../../_metronic/_partials/controls\";\nimport 'react-phone-number-input/style.css';\nimport UserBreadCrum from \"../bread-crum/UserBreadCrum\";\nimport TransferList from \"../../Common/TransferList\";\nimport axios from \"axios\";\nimport { showError, showSuccess } from \"../../../pages/Alert\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nexport default function PermissionSetup() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      roleList = _useState2[0],\n      setRoleList = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      featurePermissionList = _useState4[0],\n      setFeaturePermissionList = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      allRowSelected = _useState6[0],\n      setAllRowSelected = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedRole = _useState8[0],\n      setSelectedRole = _useState8[1];\n\n  useEffect(function () {\n    getRoleList();\n  }, []);\n\n  var handleChange = function handleChange(event) {\n    var value = event.target.value;\n\n    if (value) {\n      getAlreadyMappedFeatures(value);\n    } else {\n      setFeaturePermissionList([]);\n    }\n\n    setSelectedRole(event.target.value);\n    setAllRowSelected(false);\n  };\n\n  var handlePermissions = function handlePermissions(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    var checked = event.target.checked;\n    var index = featurePermissionList.findIndex(function (depot) {\n      return depot.activityFeature === value;\n    });\n\n    var previousPermissionList = _toConsumableArray(featurePermissionList);\n\n    if (name === 'isCreate') {\n      previousPermissionList[index].isCreate = checked;\n    } else if (name === 'isUpdate') {\n      previousPermissionList[index].isUpdate = checked;\n    } else if (name === 'isDelete') {\n      previousPermissionList[index].isDelete = checked;\n    } else if (name === 'isView') {\n      previousPermissionList[index].isView = checked;\n    }\n\n    setFeaturePermissionList(previousPermissionList);\n  };\n\n  var handleRowSelect = function handleRowSelect(event) {\n    var value = event.target.value;\n    var checked = event.target.checked;\n    var index = featurePermissionList.findIndex(function (depot) {\n      return depot.activityFeature === value;\n    });\n\n    var previousPermissionList = _toConsumableArray(featurePermissionList);\n\n    previousPermissionList[index].isCreate = checked;\n    previousPermissionList[index].isUpdate = checked;\n    previousPermissionList[index].isDelete = checked;\n    previousPermissionList[index].isView = checked;\n    previousPermissionList[index].selectRow = checked;\n    setFeaturePermissionList(previousPermissionList);\n  };\n\n  var handleAllRowSelect = function handleAllRowSelect(event) {\n    if (featurePermissionList.length == 0) {\n      showError('No data available!');\n      return;\n    }\n\n    var checked = event.target.checked;\n\n    var previousPermissionList = _toConsumableArray(featurePermissionList);\n\n    previousPermissionList.map(function (row) {\n      row.isCreate = checked;\n      row.isUpdate = checked;\n      row.isDelete = checked;\n      row.isView = checked;\n      row.selectRow = checked;\n    });\n    setAllRowSelected(checked);\n    setFeaturePermissionList(previousPermissionList);\n  };\n\n  var getRoleList = function getRoleList() {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/role/get-active-roles\");\n    axios.get(URL).then(function (response) {\n      setRoleList(response.data.data);\n    });\n  };\n\n  var getAlreadyMappedFeatures = function getAlreadyMappedFeatures(roleId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/permission/get-all-permission-list-by-role/?roleId=\") + roleId;\n    axios.get(URL).then(function (response) {\n      setFeaturePermissionList(response.data.data);\n    });\n  };\n\n  var savePermission = function savePermission() {\n    if (featurePermissionList.length == 0) {\n      showError('Please select a role and features.');\n      return;\n    }\n\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/permission/create-all\");\n    axios.post(URL, featurePermissionList).then(function (response) {\n      if (response.data.success === true) {\n        debugger;\n        showSuccess(response.data.message);\n        setFeaturePermissionList([]);\n        setSelectedRole(\"\");\n      } else {\n        showError(response.data.message);\n      }\n    }).catch(function (err) {\n      showError(err);\n    });\n  };\n\n  var columns = [{\n    dataField: \"featureName\",\n    text: \"Feature Name\"\n  }, {\n    dataField: \"isCreate\",\n    text: \"Create\",\n    formatter: function formatter(cellContent, row) {\n      return /*#__PURE__*/React.createElement(\"input\", {\n        title: \"Select only create\",\n        type: \"checkbox\",\n        name: \"isCreate\",\n        checked: cellContent,\n        value: row.activityFeature,\n        onChange: handlePermissions,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 20\n        }\n      });\n    }\n  }, {\n    dataField: \"isUpdate\",\n    text: \"Update\",\n    formatter: function formatter(cellContent, row) {\n      return /*#__PURE__*/React.createElement(\"input\", {\n        title: \"Select only update\",\n        type: \"checkbox\",\n        name: \"isUpdate\",\n        checked: cellContent,\n        value: row.activityFeature,\n        onChange: handlePermissions,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 20\n        }\n      });\n    }\n  }, {\n    dataField: \"isDelete\",\n    text: \"Delete\",\n    formatter: function formatter(cellContent, row) {\n      return /*#__PURE__*/React.createElement(\"input\", {\n        title: \"Select only delete\",\n        type: \"checkbox\",\n        name: \"isDelete\",\n        checked: cellContent,\n        value: row.activityFeature,\n        onChange: handlePermissions,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 22\n        }\n      });\n    }\n  }, {\n    dataField: \"isView\",\n    text: \"View\",\n    formatter: function formatter(cellContent, row) {\n      return /*#__PURE__*/React.createElement(\"input\", {\n        title: \"Select only view\",\n        type: \"checkbox\",\n        name: \"isView\",\n        checked: cellContent,\n        value: row.activityFeature,\n        onChange: handlePermissions,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 22\n        }\n      });\n    }\n  }, {\n    dataField: \"selectRow\",\n    text: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n      title: \"Select all rows\",\n      type: \"checkbox\",\n      name: \"selectAllRow\",\n      checked: allRowSelected,\n      onChange: handleAllRowSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }), \" All\"),\n    formatter: function formatter(cellContent, row) {\n      return /*#__PURE__*/React.createElement(\"input\", {\n        title: \"Select all in a row\",\n        type: \"checkbox\",\n        name: \"selectRow\",\n        checked: row.isCreate && row.isUpdate && row.isDelete && row.isView ? true : false,\n        value: row.activityFeature,\n        onChange: handleRowSelect,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 22\n        }\n      });\n    }\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserBreadCrum, {\n    menuTitle: \"User Company Map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"create-field-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, \"Role wise feature permission setup\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, \"Role \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 73\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"roleId\",\n    className: \"form-control\",\n    name: \"roleId\",\n    value: selectedRole,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 41\n    }\n  }, \"Select role..\"), roleList.map(function (role) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: role.id,\n      value: role.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 49\n      }\n    }, role.name);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title ml-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 37\n    }\n  }, \"Features\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 81\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(BootstrapTable, {\n    wrapperClasses: \"table-responsive\",\n    classes: \"table table-head-custom table-vertical-center overflow-hidden\",\n    bootstrap4: true,\n    bordered: false,\n    keyField: \"activityFeature\",\n    data: featurePermissionList,\n    columns: columns,\n    pagination: paginationFactory({\n      sizePerPage: 10,\n      sizePerPageList: [{\n        text: '10',\n        value: 10\n      }, {\n        text: '20',\n        value: 20\n      }, {\n        text: '30',\n        value: 30\n      }, {\n        text: '50',\n        value: 50\n      }, {\n        text: 'All',\n        value: featurePermissionList.length\n      }],\n      showTotal: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"saveBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: savePermission,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }, \"Save Permission\"))))));\n}","map":{"version":3,"names":["React","useEffect","useState","Card","Button","CardBody","UserBreadCrum","TransferList","axios","showError","showSuccess","BootstrapTable","paginationFactory","PermissionSetup","roleList","setRoleList","featurePermissionList","setFeaturePermissionList","allRowSelected","setAllRowSelected","selectedRole","setSelectedRole","getRoleList","handleChange","event","value","target","getAlreadyMappedFeatures","handlePermissions","name","checked","index","findIndex","depot","activityFeature","previousPermissionList","isCreate","isUpdate","isDelete","isView","handleRowSelect","selectRow","handleAllRowSelect","length","map","row","URL","process","env","REACT_APP_API_URL","get","then","response","data","roleId","savePermission","post","success","message","catch","err","columns","dataField","text","formatter","cellContent","role","id","sizePerPage","sizePerPageList","showTotal"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/UserManagement/permissionSetup/PermissionSetup.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Button from '@material-ui/core/Button';\nimport { CardBody } from \"../../../../_metronic/_partials/controls\";\nimport 'react-phone-number-input/style.css';\nimport UserBreadCrum from \"../bread-crum/UserBreadCrum\";\nimport TransferList from \"../../Common/TransferList\";\nimport axios from \"axios\";\nimport { showError, showSuccess } from \"../../../pages/Alert\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\n\nexport default function PermissionSetup() {    \n    const [roleList, setRoleList] = useState([]);\n    const [featurePermissionList, setFeaturePermissionList] = useState([]);\n    const [allRowSelected, setAllRowSelected] = useState(false);\n    const [selectedRole, setSelectedRole] = useState(\"\");\n\n    useEffect(() => {\n        getRoleList();\n    },[]);\n\n    const handleChange = (event) => {\n        let value = event.target.value;\n\n        if(value){\n            getAlreadyMappedFeatures(value);\n        }else{\n            setFeaturePermissionList([]);\n        }\n        setSelectedRole(event.target.value);\n        setAllRowSelected(false);\n    }\n    \n    const handlePermissions = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        let checked = event.target.checked;\n\n        let index = featurePermissionList.findIndex(depot => (depot.activityFeature === value));\n        let previousPermissionList = [...featurePermissionList];\n\n        if(name === 'isCreate'){\n            previousPermissionList[index].isCreate = checked;\n        }else if(name === 'isUpdate'){\n            previousPermissionList[index].isUpdate = checked;\n        }else if(name === 'isDelete'){\n            previousPermissionList[index].isDelete = checked;\n        }else if(name === 'isView'){\n            previousPermissionList[index].isView = checked;\n        }\n        \n        setFeaturePermissionList(previousPermissionList);        \n    }\n    \n    const handleRowSelect = (event) => {\n        let value = event.target.value;\n        let checked = event.target.checked;\n\n        let index = featurePermissionList.findIndex(depot => (depot.activityFeature === value));\n        let previousPermissionList = [...featurePermissionList];\n        \n        previousPermissionList[index].isCreate = checked;    \n        previousPermissionList[index].isUpdate = checked;    \n        previousPermissionList[index].isDelete = checked;    \n        previousPermissionList[index].isView = checked;        \n        previousPermissionList[index].selectRow = checked;        \n        \n        setFeaturePermissionList(previousPermissionList);        \n    }\n    \n    const handleAllRowSelect = (event) => {\n        if(featurePermissionList.length == 0){\n            showError('No data available!');\n            return;\n        }\n\n        let checked = event.target.checked;\n        let previousPermissionList = [...featurePermissionList];\n        \n        previousPermissionList.map((row) =>{\n            row.isCreate = checked;\n            row.isUpdate = checked;\n            row.isDelete = checked;\n            row.isView = checked;\n            row.selectRow = checked;\n        });     \n\n        setAllRowSelected(checked);\n        setFeaturePermissionList(previousPermissionList);        \n    }\n\n    const getRoleList = () => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/role/get-active-roles`;\n        axios.get(URL).then(response => {\n            setRoleList(response.data.data)\n        });\n    }\n    \n    const getAlreadyMappedFeatures = (roleId) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/permission/get-all-permission-list-by-role/?roleId=` + roleId;\n        axios.get(URL).then(response => {\n            setFeaturePermissionList(response.data.data)\n        });\n    }\n\n    const savePermission = () => {\n        if(featurePermissionList.length == 0){\n            showError('Please select a role and features.');\n            return;\n        }\n        \n        const URL = `${process.env.REACT_APP_API_URL}/api/permission/create-all`;\n        axios.post(URL, featurePermissionList).then(response => {\n            if (response.data.success === true) {debugger\n                showSuccess(response.data.message);                \n                setFeaturePermissionList([]);\n                setSelectedRole(\"\");\n            } else {\n                showError(response.data.message);\n            }\n        }).catch(err => {\n            showError(err);\n        });\n    }\n\n    const columns = [\n        {\n          dataField: \"featureName\",\n          text: \"Feature Name\",\n        },       \n        {\n          dataField: \"isCreate\",\n          text: \"Create\",\n          formatter : (cellContent, row) => {\n            return <input title=\"Select only create\" type=\"checkbox\" name=\"isCreate\" checked={cellContent} value={row.activityFeature} onChange={handlePermissions}/>;\n          }\n        },\n        {\n          dataField: \"isUpdate\",\n          text: \"Update\",\n          formatter : (cellContent, row) => {\n            return <input title=\"Select only update\" type=\"checkbox\" name=\"isUpdate\" checked={cellContent} value={row.activityFeature} onChange={handlePermissions}/>;\n          }\n        },\n        {\n            dataField: \"isDelete\",\n            text: \"Delete\",\n            formatter : (cellContent, row) => {\n              return <input title=\"Select only delete\" type=\"checkbox\" name=\"isDelete\" checked={cellContent} value={row.activityFeature} onChange={handlePermissions}/>;\n            }\n        },\n        {\n            dataField: \"isView\",\n            text: \"View\",\n            formatter : (cellContent, row) => {\n              return <input title=\"Select only view\" type=\"checkbox\" name=\"isView\" checked={cellContent} value={row.activityFeature} onChange={handlePermissions}/>;\n            }\n        },\n        {\n            dataField: \"selectRow\",\n            text: <><input title=\"Select all rows\" type=\"checkbox\" name=\"selectAllRow\" checked={allRowSelected} onChange={handleAllRowSelect}/> All</>,\n            formatter : (cellContent, row) => {\n              return <input title=\"Select all in a row\" type=\"checkbox\" name=\"selectRow\" checked={row.isCreate && row.isUpdate && row.isDelete && row.isView ? true : false} value={row.activityFeature} onChange={handleRowSelect}/>;\n            }\n        }\n      ];\n\n    return (\n        <>\n            {/* BREAD CRUM ROW */}\n            <UserBreadCrum menuTitle=\"User Company Map\" />\n\n            <Card>\n                <CardBody>\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <span className=\"create-field-title\">Role wise feature permission setup</span>\n\n                            <div className='mt-5 row'>\n                                <div className='col-xl-3'>\n                                    <label className='level-title'>Role <span className=\"text-danger \">*</span></label>\n                                    <select id=\"roleId\" className='form-control' name=\"roleId\" value={selectedRole}\n                                    onChange={handleChange}>\n\n                                        <option value=\"\">Select role..</option>\n                                            {roleList.map((role) => (\n                                                <option key={role.id} value={role.id}>\n                                                    {role.name}\n                                                </option>\n                                            ))}\n                                    </select>\n                                </div>\n\n                                <div className='col-xl-9'>\n                                    <label className='level-title ml-5'>Features<span className=\"text-danger \">*</span></label>\n                                    \n                                    <BootstrapTable\n                                    wrapperClasses=\"table-responsive\"\n                                    classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n                                    bootstrap4\n                                    bordered={false}\n                                    keyField=\"activityFeature\"\n                                    data={featurePermissionList}\n                                    columns={columns}\n                                    pagination={paginationFactory({ sizePerPage: 10, \n                                        sizePerPageList: [\n                                            {text: '10', value: 10},\n                                            {text: '20', value: 20},\n                                            {text: '30', value: 30},\n                                            {text: '50', value: 50},\n                                            {text: 'All', value: featurePermissionList.length},\n                                        ], \n                                        showTotal: true })}\n                                />\n                                </div>\n                            </div>      \n\n                            <Button className=\"float-right mt-5\" id=\"saveBtn\" variant=\"contained\" color=\"primary\"\n                                onClick={savePermission}>\n                                Save Permission\n                            </Button>                  \n\n                        </div>\n                    </div>\n                </CardBody>\n            </Card>\n        </>);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}