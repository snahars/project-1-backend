{"ast":null,"code":"var _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Production/QA/qa-review/create/NewQAFromToSend.js\";\nimport React from \"react\";\nimport { showError } from \"../../../../../pages/Alert\";\nimport { stringExtract } from \"../../../../Util\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nexport default function NewQAFromToSend(_ref) {\n  var _this = this;\n\n  var fromDepotInfo = _ref.fromDepotInfo,\n      stores = _ref.stores,\n      setToDepotId = _ref.setToDepotId,\n      fromDepotId = _ref.fromDepotId,\n      setStoreId = _ref.setStoreId,\n      setStoreType = _ref.setStoreType;\n\n  //const history = useHistory();\n  //const location = useLocation();\n  //const companyId = location.state.companyId;\n  //const userLoginId = location.state.userLoginId;\n  var setDepot = function setDepot(event) {\n    setStoreId(parseInt(event.target.value));\n    var str = event.target.options[event.target.selectedIndex].text;\n    var stringExtractor = stringExtract(str, '(', ')')[0]; // alert(stringExtractor)\n    // alert(event.target.options[event.target.selectedIndex].text)\n    // alert(stringExtractor(event.target.options[event.target.selectedIndex].text));\n\n    setStoreType(stringExtractor); //let path = \"/production-qa-setup-new\"; \n    // history.push(path);\n    //history.push(\"/production-qa-setup-new\", { companyId: companyId, userLoginId: userLoginId, depotId: fromDepotId })\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-between pt-5 pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-3 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    class: \"mt-5 dark-gray-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, \"Depot\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 80\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"dark-gray-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  }, fromDepotInfo.depotName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"offset-xl-6 col-xl-3 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    class: \"mt-5 dark-gray-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 34\n    }\n  }, \"Store\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"toStoreId\",\n    onChange: setDepot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 37\n    }\n  }, \"Select To Store\"), stores.map(function (store) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: store.name,\n      value: store.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 41\n      }\n    }, store.name + \" (\" + store.store_type + \")\");\n  }))))))));\n}","map":{"version":3,"names":["React","showError","stringExtract","useHistory","useLocation","NewQAFromToSend","fromDepotInfo","stores","setToDepotId","fromDepotId","setStoreId","setStoreType","setDepot","event","parseInt","target","value","str","options","selectedIndex","text","stringExtractor","depotName","map","store","name","id","store_type"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Production/QA/qa-review/create/NewQAFromToSend.js"],"sourcesContent":["import React from \"react\";\nimport { showError } from \"../../../../../pages/Alert\";\nimport { stringExtract } from \"../../../../Util\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport default function NewQAFromToSend({ fromDepotInfo, stores, setToDepotId,\n    fromDepotId, setStoreId, setStoreType }) {\n\n    //const history = useHistory();\n    //const location = useLocation();\n    //const companyId = location.state.companyId;\n    //const userLoginId = location.state.userLoginId;\n\n    const setDepot = event => {\n        setStoreId(parseInt(event.target.value));\n        const str = event.target.options[event.target.selectedIndex].text;\n        const stringExtractor = stringExtract(str, '(', ')')[0];\n        // alert(stringExtractor)\n        // alert(event.target.options[event.target.selectedIndex].text)\n        // alert(stringExtractor(event.target.options[event.target.selectedIndex].text));\n        setStoreType(stringExtractor);\n        //let path = \"/production-qa-setup-new\"; \n       // history.push(path);\n        //history.push(\"/production-qa-setup-new\", { companyId: companyId, userLoginId: userLoginId, depotId: fromDepotId })\n    }\n\n    return (\n        <>\n            <div className=\"bg-white\">\n                <div className=\"container-fluid\">\n                    <div className=\"row justify-content-between pt-5 pb-5\">\n                        {/* DEPOT ROW */}\n                        <div className=\"col-xl-3 mt-5\">\n                            <strong class=\"mt-5 dark-gray-color\">Depot</strong><br />\n                            <span className=\"\">\n                                <label className=\"dark-gray-color\">{fromDepotInfo.depotName}</label>\n                            </span>\n                        </div>\n                        {/* STORE ROW */}\n                        <div className=\"offset-xl-6 col-xl-3 mt-5\">\n                            <div><strong class=\"mt-5 dark-gray-color\">Store</strong></div>\n                            <div>\n                                <select className=\"form-control\" id=\"toStoreId\" onChange={setDepot}>\n                                    <option value=\"1\" selected>Select To Store</option>\n                                    {stores.map((store) => (\n                                        <option key={store.name} value={store.id}>\n                                            {store.name + \" (\" + store.store_type + \")\"}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AAEA,eAAe,SAASC,eAAT,OAC8B;EAAA;;EAAA,IADHC,aACG,QADHA,aACG;EAAA,IADYC,MACZ,QADYA,MACZ;EAAA,IADoBC,YACpB,QADoBA,YACpB;EAAA,IAAzCC,WAAyC,QAAzCA,WAAyC;EAAA,IAA5BC,UAA4B,QAA5BA,UAA4B;EAAA,IAAhBC,YAAgB,QAAhBA,YAAgB;;EAEzC;EACA;EACA;EACA;EAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;IACtBH,UAAU,CAACI,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAT,CAAV;IACA,IAAMC,GAAG,GAAGJ,KAAK,CAACE,MAAN,CAAaG,OAAb,CAAqBL,KAAK,CAACE,MAAN,CAAaI,aAAlC,EAAiDC,IAA7D;IACA,IAAMC,eAAe,GAAGnB,aAAa,CAACe,GAAD,EAAM,GAAN,EAAW,GAAX,CAAb,CAA6B,CAA7B,CAAxB,CAHsB,CAItB;IACA;IACA;;IACAN,YAAY,CAACU,eAAD,CAAZ,CAPsB,CAQtB;IACD;IACC;EACH,CAXD;;EAaA,oBACI,uDACI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,iBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,uCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI;IAAK,SAAS,EAAC,eAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAQ,KAAK,EAAC,sBAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WADJ,eACuD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADvD,eAEI;IAAM,SAAS,EAAC,EAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,iBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAoCf,aAAa,CAACgB,SAAlD,CADJ,CAFJ,CAFJ,eASI;IAAK,SAAS,EAAC,2BAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAK;IAAQ,KAAK,EAAC,sBAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAAL,CADJ,eAEI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAQ,SAAS,EAAC,cAAlB;IAAiC,EAAE,EAAC,WAApC;IAAgD,QAAQ,EAAEV,QAA1D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAQ,KAAK,EAAC,GAAd;IAAkB,QAAQ,MAA1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,qBADJ,EAEKL,MAAM,CAACgB,GAAP,CAAW,UAACC,KAAD;IAAA,oBACR;MAAQ,GAAG,EAAEA,KAAK,CAACC,IAAnB;MAAyB,KAAK,EAAED,KAAK,CAACE,EAAtC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACKF,KAAK,CAACC,IAAN,GAAa,IAAb,GAAoBD,KAAK,CAACG,UAA1B,GAAuC,GAD5C,CADQ;EAAA,CAAX,CAFL,CADJ,CAFJ,CATJ,CADJ,CADJ,CADJ,CADJ;AA+BH"},"metadata":{},"sourceType":"module"}