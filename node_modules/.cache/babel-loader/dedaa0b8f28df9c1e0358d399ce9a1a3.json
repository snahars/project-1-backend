{"ast":null,"code":"import _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/_metronic/_partials/controls/code-examples/CodeExampleSimple.js\";\n\n/* eslint-disable jsx-a11y/aria-proptypes */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport copy from \"clipboard-copy\";\nimport { Tooltip } from \"@material-ui/core\"; // https://github.com/conorhastings/react-syntax-highlighter#prism\n\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"; // See https://github.com/PrismJS/prism-themes\n\nimport { coy as highlightStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nexport function CodeExampleSimple(_ref) {\n  var _this = this;\n\n  var languages = _ref.languages,\n      children = _ref.children,\n      codeBlockHeight = _ref.codeBlockHeight;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCopySucceed = _useState2[0],\n      setIsCopySucceed = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tabId = _useState4[0],\n      setTabId = _useState4[1];\n\n  var copyCode = function copyCode() {\n    if (!languages.length) {\n      return;\n    }\n\n    copy(languages[tabId].code).then(function () {\n      setIsCopySucceed(true);\n      setTimeout(function () {\n        setIsCopySucceed(false);\n      }, 2000);\n    });\n  };\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      customStyle = _useState6[0],\n      setCustomStyle = _useState6[1];\n\n  useEffect(function () {\n    var styles = {};\n\n    if (codeBlockHeight) {\n      styles.height = codeBlockHeight;\n    }\n\n    if (languages.length > 1) {\n      styles.background = \"none transparent !important\";\n    }\n\n    setCustomStyle(styles);\n  }, [codeBlockHeight, languages]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, children), languages.length === 0 && /*#__PURE__*/React.createElement(React.Fragment, null), languages.length === 1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"example-code\",\n    style: {\n      background: \"#F3F6F9\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Copy code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"example-copy \".concat(clsx({\n      \"example-copied\": isCopySucceed\n    })),\n    onClick: copyCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"example-highlight \".concat(languages[0].language),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SyntaxHighlighter, {\n    language: languages[0].language,\n    style: highlightStyle,\n    customStyle: customStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, languages[0].code))), languages.length > 1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"example-code example-code-on\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"example-nav nav nav-tabs nav-tabs-line nav-tabs-line-2x nav-tabs-primary\",\n    id: \"codeTab\",\n    role: \"tablist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, languages.map(function (lang, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      key: \"ki\".concat(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link \".concat(tabId === index ? \"active\" : \"\"),\n      \"data-toggle\": \"tab\",\n      role: \"tab\",\n      \"aria-selected\": \"\".concat(tabId === index ? \"true\" : \"false\"),\n      onClick: function onClick() {\n        return setTabId(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, lang.shortCode));\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Copy code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"example-copy \".concat(clsx({\n      \"example-copied\": isCopySucceed\n    })),\n    onClick: copyCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, languages.map(function (lang, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: \"#F3F6F9\"\n      },\n      className: \"tab-pane  \".concat(tabId === index ? \"active\" : \"\"),\n      key: \"divTabPane\".concat(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"example-highlight language-\".concat(lang.shortCode, \" \").concat(lang.shortCode),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SyntaxHighlighter, {\n      language: lang.language,\n      style: highlightStyle,\n      customStyle: customStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, lang.code)));\n  }))));\n}\nexport function CodeExampleSimplePreview(_ref2) {\n  var children = _ref2.children;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"example-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 10\n    }\n  }, children);\n}\nexport function CodeExampleSimpleDescription(_ref3) {\n  var children = _ref3.children;\n  return /*#__PURE__*/React.createElement(\"p\", {\n    className: \"example-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 10\n    }\n  }, children);\n}\nexport function CodeExampleSimpleWrapper(_ref4) {\n  var title = _ref4.title,\n      children = _ref4.children;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card card-custom gutter-b example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, title))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, children));\n}","map":{"version":3,"names":["React","useState","useEffect","clsx","copy","Tooltip","Prism","SyntaxHighlighter","coy","highlightStyle","CodeExampleSimple","languages","children","codeBlockHeight","isCopySucceed","setIsCopySucceed","tabId","setTabId","copyCode","length","code","then","setTimeout","customStyle","setCustomStyle","styles","height","background","language","map","lang","index","shortCode","CodeExampleSimplePreview","CodeExampleSimpleDescription","CodeExampleSimpleWrapper","title"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/_metronic/_partials/controls/code-examples/CodeExampleSimple.js"],"sourcesContent":["/* eslint-disable jsx-a11y/aria-proptypes */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport copy from \"clipboard-copy\";\r\nimport {Tooltip} from \"@material-ui/core\";\r\n// https://github.com/conorhastings/react-syntax-highlighter#prism\r\nimport {Prism as SyntaxHighlighter} from \"react-syntax-highlighter\";\r\n// See https://github.com/PrismJS/prism-themes\r\nimport {coy as highlightStyle} from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\nexport function CodeExampleSimple({ languages, children, codeBlockHeight }) {\r\n  const [isCopySucceed, setIsCopySucceed] = useState(false);\r\n  const [tabId, setTabId] = useState(0);\r\n\r\n  const copyCode = () => {\r\n    if (!languages.length) {\r\n      return;\r\n    }\r\n\r\n    copy(languages[tabId].code).then(() => {\r\n      setIsCopySucceed(true);\r\n      setTimeout(() => {\r\n        setIsCopySucceed(false);\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const [customStyle, setCustomStyle] = useState({});\r\n\r\n  useEffect(() => {\r\n    const styles = {};\r\n\r\n    if (codeBlockHeight) {\r\n      styles.height = codeBlockHeight;\r\n    }\r\n\r\n    if (languages.length > 1) {\r\n      styles.background = `none transparent !important`;\r\n    }\r\n\r\n    setCustomStyle(styles);\r\n  }, [codeBlockHeight, languages]);\r\n\r\n  return (\r\n    <>\r\n      <>{children}</>\r\n\r\n      {languages.length === 0 && <></>}\r\n      {languages.length === 1 && (\r\n        <div className=\"example-code\" style={{ background: \"#F3F6F9\" }}>\r\n          <Tooltip title=\"Copy code\">\r\n            <span\r\n              className={`example-copy ${clsx({\r\n                \"example-copied\": isCopySucceed\r\n              })}`}\r\n              onClick={copyCode}\r\n            />\r\n          </Tooltip>\r\n          <div className={`example-highlight ${languages[0].language}`}>\r\n            <SyntaxHighlighter\r\n              language={languages[0].language}\r\n              style={highlightStyle}\r\n              customStyle={customStyle}\r\n            >\r\n              {languages[0].code}\r\n            </SyntaxHighlighter>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {languages.length > 1 && (\r\n        <div className=\"example-code example-code-on\">\r\n          <ul\r\n            className=\"example-nav nav nav-tabs nav-tabs-line nav-tabs-line-2x nav-tabs-primary\"\r\n            id=\"codeTab\"\r\n            role=\"tablist\"\r\n          >\r\n            {languages.map((lang, index) => (\r\n              <li className=\"nav-item\" key={`ki${index}`}>\r\n                <a\r\n                  className={`nav-link ${tabId === index ? \"active\" : \"\"}`}\r\n                  data-toggle=\"tab\"\r\n                  role=\"tab\"\r\n                  aria-selected={`${tabId === index ? \"true\" : \"false\"}`}\r\n                  onClick={() => setTabId(index)}\r\n                >\r\n                  {lang.shortCode}\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <Tooltip title=\"Copy code\">\r\n            <span\r\n              className={`example-copy ${clsx({\r\n                \"example-copied\": isCopySucceed\r\n              })}`}\r\n              onClick={copyCode}\r\n            />\r\n          </Tooltip>\r\n          <div className=\"tab-content\">\r\n            {languages.map((lang, index) => (\r\n              <div\r\n                style={{ background: \"#F3F6F9\" }}\r\n                className={`tab-pane  ${tabId === index ? \"active\" : \"\"}`}\r\n                key={`divTabPane${index}`}\r\n              >\r\n                <div\r\n                  className={`example-highlight language-${lang.shortCode} ${lang.shortCode}`}\r\n                >\r\n                  <SyntaxHighlighter\r\n                    language={lang.language}\r\n                    style={highlightStyle}\r\n                    customStyle={customStyle}\r\n                  >\r\n                    {lang.code}\r\n                  </SyntaxHighlighter>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function CodeExampleSimplePreview({ children }) {\r\n  return <div className=\"example-preview\">{children}</div>;\r\n}\r\n\r\nexport function CodeExampleSimpleDescription({ children }) {\r\n  return <p className=\"example-description\">{children}</p>;\r\n}\r\n\r\nexport function CodeExampleSimpleWrapper({ title, children }) {\r\n  return (\r\n    <div className=\"card card-custom gutter-b example\">\r\n      <div className=\"card-header\">\r\n        <div className=\"card-title\">\r\n          <h3 className=\"card-label\">{title}</h3>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-body\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}