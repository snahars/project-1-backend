{"ast":null,"code":"import _defineProperty from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/GoogleMaterialExamples/navigation/DrawerExamplesPage.js\";\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { List, ListItem, Divider, ListItemText, ListItemIcon, Button, Drawer, SwipeableDrawer } from \"@material-ui/core\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 1\n\nvar useStyles1 = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n}); // Example 2\n\nvar useStyles2 = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\nexport default function DrawerExamplesPage(props) {\n  var _this = this;\n\n  // Example 1\n  var classes1 = useStyles1();\n\n  var _React$useState = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state1 = _React$useState2[0],\n      setState1 = _React$useState2[1];\n\n  var toggleDrawer1 = function toggleDrawer1(side, open) {\n    return function (event) {\n      if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n        return;\n      }\n\n      setState1(_objectSpread(_objectSpread({}, state1), {}, _defineProperty({}, side, open)));\n    };\n  };\n\n  var sideList1 = function sideList1(side) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes1.list,\n      role: \"presentation\",\n      onClick: toggleDrawer1(side, false),\n      onKeyDown: toggleDrawer1(side, false),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, [\"All mail\", \"Trash\", \"Spam\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }));\n    })));\n  };\n\n  var fullList1 = function fullList1(side) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes1.fullList,\n      role: \"presentation\",\n      onClick: toggleDrawer1(side, false),\n      onKeyDown: toggleDrawer1(side, false),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, [\"All mail\", \"Trash\", \"Spam\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }));\n    })));\n  }; // Example 2\n\n\n  var classes2 = useStyles2();\n\n  var _React$useState3 = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state2 = _React$useState4[0],\n      setState2 = _React$useState4[1];\n\n  var toggleDrawer2 = function toggleDrawer2(side, open) {\n    return function (event) {\n      if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n        return;\n      }\n\n      setState2(_objectSpread(_objectSpread({}, state2), {}, _defineProperty({}, side, open)));\n    };\n  };\n\n  var sideList2 = function sideList2(side) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes2.list,\n      role: \"presentation\",\n      onClick: toggleDrawer2(side, false),\n      onKeyDown: toggleDrawer2(side, false),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, [\"All mail\", \"Trash\", \"Spam\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }));\n    })));\n  };\n\n  var fullList2 = function fullList2(side) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes2.fullList,\n      role: \"presentation\",\n      onClick: toggleDrawer2(side, false),\n      onKeyDown: toggleDrawer2(side, false),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }\n    }, [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, [\"All mail\", \"Trash\", \"Spam\"].map(function (text, index) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 50\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }));\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, \"Navigation drawers provide access to destinations in your app. Side sheets are surfaces containing supplementary content that are anchored to the left or right edge of the screen.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/drawers/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Temporary drawer\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, \"Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer1(\"left\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, \"Open Left\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer1(\"right\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, \"Open Right\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer1(\"top\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, \"Open Top\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer1(\"bottom\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, \"Open Bottom\"), /*#__PURE__*/React.createElement(Drawer, {\n    open: state1.left,\n    onClose: toggleDrawer1(\"left\", false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }, sideList1(\"left\")), /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"top\",\n    open: state1.top,\n    onClose: toggleDrawer1(\"top\", false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, fullList1(\"top\")), /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"bottom\",\n    open: state1.bottom,\n    onClose: toggleDrawer1(\"bottom\", false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, fullList1(\"bottom\")), /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"right\",\n    open: state1.right,\n    onClose: toggleDrawer1(\"right\", false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }, sideList1(\"right\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Swipeable Temporary drawer\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, \"You can make the drawer swipeable with the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, \"SwipeableDrawer\"), \" component.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer2(\"left\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  }, \"Open Left\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer2(\"right\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }, \"Open Right\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer2(\"top\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, \"Open Top\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer2(\"bottom\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }, \"Open Bottom\"), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    open: state2.left,\n    onClose: toggleDrawer2(\"left\", false),\n    onOpen: toggleDrawer2(\"left\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }, sideList2(\"left\")), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    anchor: \"top\",\n    open: state2.top,\n    onClose: toggleDrawer2(\"top\", false),\n    onOpen: toggleDrawer2(\"top\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }, fullList2(\"top\")), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    anchor: \"bottom\",\n    open: state2.bottom,\n    onClose: toggleDrawer2(\"bottom\", false),\n    onOpen: toggleDrawer2(\"bottom\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, fullList2(\"bottom\")), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    anchor: \"right\",\n    open: state2.right,\n    onClose: toggleDrawer2(\"right\", false),\n    onOpen: toggleDrawer2(\"right\", true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }, sideList2(\"right\")))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Drawer from '@material-ui/core/Drawer';\\nimport Button from '@material-ui/core/Button';\\nimport List from '@material-ui/core/List';\\nimport Divider from '@material-ui/core/Divider';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\\nimport MailIcon from '@material-ui/icons/Mail';\\n\\nconst useStyles = makeStyles({\\n  list: {\\n    width: 250,\\n  },\\n  fullList: {\\n    width: 'auto',\\n  },\\n});\\n\\nexport default function TemporaryDrawer() {\\n  const classes = useStyles();\\n  const [state, setState] = React.useState({\\n    top: false,\\n    left: false,\\n    bottom: false,\\n    right: false,\\n  });\\n\\n  const toggleDrawer = (side, open) => event => {\\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\\n      return;\\n    }\\n\\n    setState({ ...state, [side]: open });\\n  };\\n\\n  const sideList = side => (\\n    <div\\n      className={classes.list}\\n      role=\\\"presentation\\\"\\n      onClick={toggleDrawer(side, false)}\\n      onKeyDown={toggleDrawer(side, false)}\\n    >\\n      <List>\\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n      <Divider />\\n      <List>\\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n    </div>\\n  );\\n\\n  const fullList = side => (\\n    <div\\n      className={classes.fullList}\\n      role=\\\"presentation\\\"\\n      onClick={toggleDrawer(side, false)}\\n      onKeyDown={toggleDrawer(side, false)}\\n    >\\n      <List>\\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n      <Divider />\\n      <List>\\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n    </div>\\n  );\\n\\n  return (\\n    <div>\\n      <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\\n      <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\\n      <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\\n      <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\\n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\\n        {sideList('left')}\\n      </Drawer>\\n      <Drawer anchor=\\\"top\\\" open={state.top} onClose={toggleDrawer('top', false)}>\\n        {fullList('top')}\\n      </Drawer>\\n      <Drawer anchor=\\\"bottom\\\" open={state.bottom} onClose={toggleDrawer('bottom', false)}>\\n        {fullList('bottom')}\\n      </Drawer>\\n      <Drawer anchor=\\\"right\\\" open={state.right} onClose={toggleDrawer('right', false)}>\\n        {sideList('right')}\\n      </Drawer>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\\nimport Button from '@material-ui/core/Button';\\nimport List from '@material-ui/core/List';\\nimport Divider from '@material-ui/core/Divider';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\\nimport MailIcon from '@material-ui/icons/Mail';\\n\\nconst useStyles = makeStyles({\\n  list: {\\n    width: 250,\\n  },\\n  fullList: {\\n    width: 'auto',\\n  },\\n});\\n\\nexport default function SwipeableTemporaryDrawer() {\\n  const classes = useStyles();\\n  const [state, setState] = React.useState({\\n    top: false,\\n    left: false,\\n    bottom: false,\\n    right: false,\\n  });\\n\\n  const toggleDrawer = (side, open) => event => {\\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\\n      return;\\n    }\\n\\n    setState({ ...state, [side]: open });\\n  };\\n\\n  const sideList = side => (\\n    <div\\n      className={classes.list}\\n      role=\\\"presentation\\\"\\n      onClick={toggleDrawer(side, false)}\\n      onKeyDown={toggleDrawer(side, false)}\\n    >\\n      <List>\\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n      <Divider />\\n      <List>\\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n    </div>\\n  );\\n\\n  const fullList = side => (\\n    <div\\n      className={classes.fullList}\\n      role=\\\"presentation\\\"\\n      onClick={toggleDrawer(side, false)}\\n      onKeyDown={toggleDrawer(side, false)}\\n    >\\n      <List>\\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n      <Divider />\\n      <List>\\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\\n          <ListItem button key={text}>\\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\\n            <ListItemText primary={text} />\\n          </ListItem>\\n        ))}\\n      </List>\\n    </div>\\n  );\\n\\n  return (\\n    <div>\\n      <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\\n      <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\\n      <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\\n      <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\\n      <SwipeableDrawer\\n        open={state.left}\\n        onClose={toggleDrawer('left', false)}\\n        onOpen={toggleDrawer('left', true)}\\n      >\\n        {sideList('left')}\\n      </SwipeableDrawer>\\n      <SwipeableDrawer\\n        anchor=\\\"top\\\"\\n        open={state.top}\\n        onClose={toggleDrawer('top', false)}\\n        onOpen={toggleDrawer('top', true)}\\n      >\\n        {fullList('top')}\\n      </SwipeableDrawer>\\n      <SwipeableDrawer\\n        anchor=\\\"bottom\\\"\\n        open={state.bottom}\\n        onClose={toggleDrawer('bottom', false)}\\n        onOpen={toggleDrawer('bottom', true)}\\n      >\\n        {fullList('bottom')}\\n      </SwipeableDrawer>\\n      <SwipeableDrawer\\n        anchor=\\\"right\\\"\\n        open={state.right}\\n        onClose={toggleDrawer('right', false)}\\n        onOpen={toggleDrawer('right', true)}\\n      >\\n        {sideList('right')}\\n      </SwipeableDrawer>\\n    </div>\\n  );\\n}\\n\";","map":{"version":3,"names":["React","makeStyles","List","ListItem","Divider","ListItemText","ListItemIcon","Button","Drawer","SwipeableDrawer","MailIcon","InboxIcon","Notice","KTCodeExample","useStyles1","list","width","fullList","useStyles2","DrawerExamplesPage","props","classes1","useState","top","left","bottom","right","state1","setState1","toggleDrawer1","side","open","event","type","key","sideList1","map","text","index","fullList1","classes2","state2","setState2","toggleDrawer2","sideList2","fullList2","jsCode1","jsCode2"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/GoogleMaterialExamples/navigation/DrawerExamplesPage.js"],"sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Button,\r\n  Drawer,\r\n  SwipeableDrawer\r\n} from \"@material-ui/core\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles({\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  }\r\n});\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles({\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  }\r\n});\r\n\r\nexport default function DrawerExamplesPage(props) {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const [state1, setState1] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false\r\n  });\r\n\r\n  const toggleDrawer1 = (side, open) => event => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState1({ ...state1, [side]: open });\r\n  };\r\n\r\n  const sideList1 = side => (\r\n    <div\r\n      className={classes1.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer1(side, false)}\r\n      onKeyDown={toggleDrawer1(side, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const fullList1 = side => (\r\n    <div\r\n      className={classes1.fullList}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer1(side, false)}\r\n      onKeyDown={toggleDrawer1(side, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [state2, setState2] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false\r\n  });\r\n\r\n  const toggleDrawer2 = (side, open) => event => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState2({ ...state2, [side]: open });\r\n  };\r\n\r\n  const sideList2 = side => (\r\n    <div\r\n      className={classes2.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer2(side, false)}\r\n      onKeyDown={toggleDrawer2(side, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const fullList2 = side => (\r\n    <div\r\n      className={classes2.fullList}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer2(side, false)}\r\n      onKeyDown={toggleDrawer2(side, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Navigation drawers provide access to destinations in your app. Side\r\n          sheets are surfaces containing supplementary content that are anchored\r\n          to the left or right edge of the screen.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/drawers/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Temporary drawer\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Temporary navigation drawers can toggle open or closed. Closed by\r\n              default, the drawer opens temporarily above all other content\r\n              until a section is selected.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={toggleDrawer1(\"left\", true)}>Open Left</Button>\r\n              <Button onClick={toggleDrawer1(\"right\", true)}>Open Right</Button>\r\n              <Button onClick={toggleDrawer1(\"top\", true)}>Open Top</Button>\r\n              <Button onClick={toggleDrawer1(\"bottom\", true)}>\r\n                Open Bottom\r\n              </Button>\r\n              <Drawer open={state1.left} onClose={toggleDrawer1(\"left\", false)}>\r\n                {sideList1(\"left\")}\r\n              </Drawer>\r\n              <Drawer\r\n                anchor=\"top\"\r\n                open={state1.top}\r\n                onClose={toggleDrawer1(\"top\", false)}\r\n              >\r\n                {fullList1(\"top\")}\r\n              </Drawer>\r\n              <Drawer\r\n                anchor=\"bottom\"\r\n                open={state1.bottom}\r\n                onClose={toggleDrawer1(\"bottom\", false)}\r\n              >\r\n                {fullList1(\"bottom\")}\r\n              </Drawer>\r\n              <Drawer\r\n                anchor=\"right\"\r\n                open={state1.right}\r\n                onClose={toggleDrawer1(\"right\", false)}\r\n              >\r\n                {sideList1(\"right\")}\r\n              </Drawer>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Swipeable Temporary drawer\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              You can make the drawer swipeable with the{\" \"}\r\n              <code>SwipeableDrawer</code> component.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={toggleDrawer2(\"left\", true)}>Open Left</Button>\r\n              <Button onClick={toggleDrawer2(\"right\", true)}>Open Right</Button>\r\n              <Button onClick={toggleDrawer2(\"top\", true)}>Open Top</Button>\r\n              <Button onClick={toggleDrawer2(\"bottom\", true)}>\r\n                Open Bottom\r\n              </Button>\r\n              <SwipeableDrawer\r\n                open={state2.left}\r\n                onClose={toggleDrawer2(\"left\", false)}\r\n                onOpen={toggleDrawer2(\"left\", true)}\r\n              >\r\n                {sideList2(\"left\")}\r\n              </SwipeableDrawer>\r\n              <SwipeableDrawer\r\n                anchor=\"top\"\r\n                open={state2.top}\r\n                onClose={toggleDrawer2(\"top\", false)}\r\n                onOpen={toggleDrawer2(\"top\", true)}\r\n              >\r\n                {fullList2(\"top\")}\r\n              </SwipeableDrawer>\r\n              <SwipeableDrawer\r\n                anchor=\"bottom\"\r\n                open={state2.bottom}\r\n                onClose={toggleDrawer2(\"bottom\", false)}\r\n                onOpen={toggleDrawer2(\"bottom\", true)}\r\n              >\r\n                {fullList2(\"bottom\")}\r\n              </SwipeableDrawer>\r\n              <SwipeableDrawer\r\n                anchor=\"right\"\r\n                open={state2.right}\r\n                onClose={toggleDrawer2(\"right\", false)}\r\n                onOpen={toggleDrawer2(\"right\", true)}\r\n              >\r\n                {sideList2(\"right\")}\r\n              </SwipeableDrawer>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = side => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const fullList = side => (\r\n    <div\r\n      className={classes.fullList}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\r\n      <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\r\n      <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\r\n      <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\r\n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\r\n        {sideList('left')}\r\n      </Drawer>\r\n      <Drawer anchor=\"top\" open={state.top} onClose={toggleDrawer('top', false)}>\r\n        {fullList('top')}\r\n      </Drawer>\r\n      <Drawer anchor=\"bottom\" open={state.bottom} onClose={toggleDrawer('bottom', false)}>\r\n        {fullList('bottom')}\r\n      </Drawer>\r\n      <Drawer anchor=\"right\" open={state.right} onClose={toggleDrawer('right', false)}>\r\n        {sideList('right')}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = side => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const fullList = side => (\r\n    <div\r\n      className={classes.fullList}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\r\n      <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\r\n      <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\r\n      <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\r\n      <SwipeableDrawer\r\n        open={state.left}\r\n        onClose={toggleDrawer('left', false)}\r\n        onOpen={toggleDrawer('left', true)}\r\n      >\r\n        {sideList('left')}\r\n      </SwipeableDrawer>\r\n      <SwipeableDrawer\r\n        anchor=\"top\"\r\n        open={state.top}\r\n        onClose={toggleDrawer('top', false)}\r\n        onOpen={toggleDrawer('top', true)}\r\n      >\r\n        {fullList('top')}\r\n      </SwipeableDrawer>\r\n      <SwipeableDrawer\r\n        anchor=\"bottom\"\r\n        open={state.bottom}\r\n        onClose={toggleDrawer('bottom', false)}\r\n        onOpen={toggleDrawer('bottom', true)}\r\n      >\r\n        {fullList('bottom')}\r\n      </SwipeableDrawer>\r\n      <SwipeableDrawer\r\n        anchor=\"right\"\r\n        open={state.right}\r\n        onClose={toggleDrawer('right', false)}\r\n        onOpen={toggleDrawer('right', true)}\r\n      >\r\n        {sideList('right')}\r\n      </SwipeableDrawer>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}