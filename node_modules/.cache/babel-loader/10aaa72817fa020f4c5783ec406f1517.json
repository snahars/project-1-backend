{"ast":null,"code":"import _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/_metronic/_partials/controls/code-examples/CodeBlockToolbar.js\";\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport copy from \"clipboard-copy\";\nimport { Tooltip } from \"@material-ui/core\";\nexport function CodeBlockToolbar(_ref) {\n  var _ref$showViewCode = _ref.showViewCode,\n      showViewCode = _ref$showViewCode === void 0 ? false : _ref$showViewCode,\n      code = _ref.code,\n      isCodeBlockShown = _ref.isCodeBlockShown,\n      setIsCodeBlockShown = _ref.setIsCodeBlockShown;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCopySucceed = _useState2[0],\n      setIsCopySucceed = _useState2[1];\n\n  var copyCode = function copyCode() {\n    copy(code).then(function () {\n      setIsCopySucceed(true);\n      setTimeout(function () {\n        setIsCopySucceed(false);\n      }, 2000);\n    });\n  };\n\n  var toggleShowCode = function toggleShowCode() {\n    setIsCodeBlockShown(!isCodeBlockShown);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showViewCode && /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"\".concat(isCodeBlockShown ? \"\" : \"View code\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"example-toggle \".concat(clsx({\n      \"example-toggled\": isCodeBlockShown\n    })),\n    onClick: toggleShowCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Copy code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"example-copy \".concat(clsx({\n      \"example-copied\": isCopySucceed\n    })),\n    onClick: copyCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","useState","clsx","copy","Tooltip","CodeBlockToolbar","showViewCode","code","isCodeBlockShown","setIsCodeBlockShown","isCopySucceed","setIsCopySucceed","copyCode","then","setTimeout","toggleShowCode"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/_metronic/_partials/controls/code-examples/CodeBlockToolbar.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport copy from \"clipboard-copy\";\r\nimport {Tooltip} from \"@material-ui/core\";\r\n\r\nexport function CodeBlockToolbar({\r\n  showViewCode = false,\r\n  code,\r\n  isCodeBlockShown,\r\n  setIsCodeBlockShown\r\n}) {\r\n  const [isCopySucceed, setIsCopySucceed] = useState(false);\r\n  const copyCode = () => {\r\n    copy(code).then(() => {\r\n      setIsCopySucceed(true);\r\n      setTimeout(() => {\r\n        setIsCopySucceed(false);\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const toggleShowCode = () => {\r\n    setIsCodeBlockShown(!isCodeBlockShown);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showViewCode && (\r\n        <Tooltip title={`${isCodeBlockShown ? \"\" : \"View code\"}`}>\r\n          <span\r\n            className={`example-toggle ${clsx({\r\n              \"example-toggled\": isCodeBlockShown\r\n            })}`}\r\n            onClick={toggleShowCode}\r\n          />\r\n        </Tooltip>\r\n      )}\r\n      <Tooltip title=\"Copy code\">\r\n        <span\r\n          className={`example-copy ${clsx({\r\n            \"example-copied\": isCopySucceed\r\n          })}`}\r\n          onClick={copyCode}\r\n        />\r\n      </Tooltip>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AAEA,OAAO,SAASC,gBAAT,OAKJ;EAAA,6BAJDC,YAIC;EAAA,IAJDA,YAIC,kCAJc,KAId;EAAA,IAHDC,IAGC,QAHDA,IAGC;EAAA,IAFDC,gBAEC,QAFDA,gBAEC;EAAA,IADDC,mBACC,QADDA,mBACC;;EACD,gBAA0CR,QAAQ,CAAC,KAAD,CAAlD;EAAA;EAAA,IAAOS,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACrBT,IAAI,CAACI,IAAD,CAAJ,CAAWM,IAAX,CAAgB,YAAM;MACpBF,gBAAgB,CAAC,IAAD,CAAhB;MACAG,UAAU,CAAC,YAAM;QACfH,gBAAgB,CAAC,KAAD,CAAhB;MACD,CAFS,EAEP,IAFO,CAAV;IAGD,CALD;EAMD,CAPD;;EASA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAC3BN,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;EACD,CAFD;;EAIA,oBACE,0CACGF,YAAY,iBACX,oBAAC,OAAD;IAAS,KAAK,YAAKE,gBAAgB,GAAG,EAAH,GAAQ,WAA7B,CAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IACE,SAAS,2BAAoBN,IAAI,CAAC;MAChC,mBAAmBM;IADa,CAAD,CAAxB,CADX;IAIE,OAAO,EAAEO,cAJX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAFJ,eAWE,oBAAC,OAAD;IAAS,KAAK,EAAC,WAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IACE,SAAS,yBAAkBb,IAAI,CAAC;MAC9B,kBAAkBQ;IADY,CAAD,CAAtB,CADX;IAIE,OAAO,EAAEE,QAJX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAXF,CADF;AAsBD"},"metadata":{},"sourceType":"module"}