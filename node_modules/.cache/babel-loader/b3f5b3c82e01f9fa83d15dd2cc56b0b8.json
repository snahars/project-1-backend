{"ast":null,"code":"import axios from \"axios\";\nexport var LOGIN_URL = \"\".concat(process.env.REACT_APP_API_URL, \"/auth/login\");\nexport var REGISTER_URL = \"api/auth/register\";\nexport var REQUEST_PASSWORD_URL = \"api/auth/forgot-password\";\nexport var ME_URL = \"\".concat(process.env.REACT_APP_API_URL, \"/auth/me\");\nexport function login(email, password) {\n  console.log(LOGIN_URL);\n  return axios.post(LOGIN_URL, {\n    email: email,\n    password: password\n  });\n}\nexport function register(email, fullname, username, password) {\n  return axios.post(REGISTER_URL, {\n    email: email,\n    fullname: fullname,\n    username: username,\n    password: password\n  });\n}\nexport function requestPassword(email) {\n  return axios.post(REQUEST_PASSWORD_URL, {\n    email: email\n  });\n}\nexport function getUserByToken() {\n  // Authorization head should be fulfilled in interceptor.\n  return axios.get(ME_URL);\n}","map":{"version":3,"names":["axios","LOGIN_URL","process","env","REACT_APP_API_URL","REGISTER_URL","REQUEST_PASSWORD_URL","ME_URL","login","email","password","console","log","post","register","fullname","username","requestPassword","getUserByToken","get"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Auth/_redux/authCrud.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const LOGIN_URL = `${process.env.REACT_APP_API_URL}/auth/login`;\r\nexport const REGISTER_URL = \"api/auth/register\";\r\nexport const REQUEST_PASSWORD_URL = \"api/auth/forgot-password\";\r\nexport const ME_URL = `${process.env.REACT_APP_API_URL}/auth/me`;\r\n\r\nexport function login(email, password) {\r\n  console.log(LOGIN_URL);\r\n  return axios.post(LOGIN_URL, { email, password });\r\n}\r\n\r\nexport function register(email, fullname, username, password) {\r\n  return axios.post(REGISTER_URL, { email, fullname, username, password });\r\n}\r\n\r\nexport function requestPassword(email) {\r\n  return axios.post(REQUEST_PASSWORD_URL, { email });\r\n}\r\n\r\nexport function getUserByToken() {\r\n  // Authorization head should be fulfilled in interceptor.\r\n  return axios.get(ME_URL);\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,SAAS,aAAMC,OAAO,CAACC,GAAR,CAAYC,iBAAlB,gBAAf;AACP,OAAO,IAAMC,YAAY,GAAG,mBAArB;AACP,OAAO,IAAMC,oBAAoB,GAAG,0BAA7B;AACP,OAAO,IAAMC,MAAM,aAAML,OAAO,CAACC,GAAR,CAAYC,iBAAlB,aAAZ;AAEP,OAAO,SAASI,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;EACrCC,OAAO,CAACC,GAAR,CAAYX,SAAZ;EACA,OAAOD,KAAK,CAACa,IAAN,CAAWZ,SAAX,EAAsB;IAAEQ,KAAK,EAALA,KAAF;IAASC,QAAQ,EAARA;EAAT,CAAtB,CAAP;AACD;AAED,OAAO,SAASI,QAAT,CAAkBL,KAAlB,EAAyBM,QAAzB,EAAmCC,QAAnC,EAA6CN,QAA7C,EAAuD;EAC5D,OAAOV,KAAK,CAACa,IAAN,CAAWR,YAAX,EAAyB;IAAEI,KAAK,EAALA,KAAF;IAASM,QAAQ,EAARA,QAAT;IAAmBC,QAAQ,EAARA,QAAnB;IAA6BN,QAAQ,EAARA;EAA7B,CAAzB,CAAP;AACD;AAED,OAAO,SAASO,eAAT,CAAyBR,KAAzB,EAAgC;EACrC,OAAOT,KAAK,CAACa,IAAN,CAAWP,oBAAX,EAAiC;IAAEG,KAAK,EAALA;EAAF,CAAjC,CAAP;AACD;AAED,OAAO,SAASS,cAAT,GAA0B;EAC/B;EACA,OAAOlB,KAAK,CAACmB,GAAN,CAAUZ,MAAV,CAAP;AACD"},"metadata":{},"sourceType":"module"}