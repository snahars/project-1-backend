{"ast":null,"code":"import _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/SalesAndCollectionForecastReport.js\";\nimport React, { useEffect, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport moment from \"moment\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IOSSwitch from '../../../../pages/IOSSwitch'; // IMPORT COMMON COMPONENT FILE\n\nimport ReportLocationTreeView from '../../../Common/ReportLocationTreeView';\nimport SalesOfficeList from \"../../../Common/SalesOfficeList\";\nimport DistributorList from \"../../../Common/DistributorList\";\nimport CommonDateComponent from '../../../Common/CommonDateComponent';\nimport CommonReportType from \"../../../Common/CommonReportType\";\nimport CommonReportFormat from \"../../../Common/CommonReportFormat\";\nexport default function SalesAndCollectionForecastReport() {\n  var fields = {\n    locationId: \"\",\n    salesOfficerId: \"\",\n    distributorId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    report: \"\"\n  };\n\n  var _useState = useState(fields),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var companyId = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var intl = useIntl();\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showReport = _useState4[0],\n      setShowReport = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      reportData = _useState6[0],\n      setReportData = _useState6[1]; // NATIONAL BUTTON STATE\n\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      nationalLocationChecked = _useState8[0],\n      setNationalLocationChecked = _useState8[1]; // LOCATION TREE COMPONENT USE STATE\n\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      nodes = _useState10[0],\n      setNodes = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      categoryLevel = _useState12[0],\n      setCategoryLevel = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      locationTree = _useState14[0],\n      setLocationTree = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      locationIds = _useState16[0],\n      setLocationIds = _useState16[1]; // SALES OFFICER COMPONENT USE STATE\n\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      salesOfficer = _useState18[0],\n      setSalesOfficer = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      salesOfficerList = _useState20[0],\n      setSalesOfficerList = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      salesOfficerIds = _useState22[0],\n      setSalesOfficerIds = _useState22[1]; // DISTRIBUTOR COMPONENT USE STATE\n\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      distributors = _useState24[0],\n      setDistributors = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      distributorList = _useState26[0],\n      setDistributorList = _useState26[1]; // FISCAL YEAR COMPONENT USE STATE\n\n\n  var _useState27 = useState(null),\n      _useState28 = _slicedToArray(_useState27, 2),\n      accountingYearId = _useState28[0],\n      setAccountingYearId = _useState28[1]; // DATE COMPONENT USE STATE\n\n\n  var _useState29 = useState({}),\n      _useState30 = _slicedToArray(_useState29, 2),\n      inputsDate = _useState30[0],\n      setInputsDate = _useState30[1];\n\n  var _useState31 = useState(\"Date\"),\n      _useState32 = _slicedToArray(_useState31, 2),\n      dateType = _useState32[0],\n      setDateType = _useState32[1]; // REPORT TYPE COMPONENT USE STATE\n\n\n  var _useState33 = useState(\"\"),\n      _useState34 = _slicedToArray(_useState33, 2),\n      reportType = _useState34[0],\n      setReportType = _useState34[1]; // REPORT FORMATE COMPONENT USE STATE\n\n\n  var _useState35 = useState(\"\"),\n      _useState36 = _slicedToArray(_useState35, 2),\n      reportFormat = _useState36[0],\n      setReportFormat = _useState36[1];\n\n  useEffect(function () {\n    //document.getElementById('reportShowIframe').style.display = \"none\";\n    getLocationTreeList(companyId);\n  }, [companyId]);\n  useEffect(function () {\n    nodes.map(function (node) {\n      getLocationIds(node);\n    });\n  }, [nodes]);\n  useEffect(function () {\n    getSalesOfficerIds(salesOfficer, salesOfficerList);\n  }, [salesOfficer, salesOfficerList]);\n\n  var getLocationTreeList = function getLocationTreeList(companyId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/location-tree/report-location-tree-info/\").concat(companyId);\n    axios.get(URL).then(function (response) {\n      var locationTree = response.data.data.locationAsTree;\n      setLocationTree(locationTree);\n    }).catch(function (err) {\n      showError(\"Cannot get Location Tree data.\");\n    });\n  };\n\n  var getLocationIds = function getLocationIds(node) {\n    var temp = _toConsumableArray(locationIds);\n\n    var index = temp.findIndex(function (id) {\n      return id === node.id;\n    });\n\n    if (index === -1) {\n      setLocationIds(function (current) {\n        return [].concat(_toConsumableArray(current), [node.id]);\n      });\n    }\n\n    node.children.map(function (nodeChild) {\n      getLocationIds(nodeChild);\n    });\n  };\n\n  var selectLocationTreeNode = function selectLocationTreeNode(node) {\n    locationIds.length = 0;\n\n    var temp = _toConsumableArray(nodes);\n\n    var index = temp.findIndex(function (data) {\n      return data.treeLevel == node.treeLevel;\n    });\n\n    if (index > -1) {\n      temp.splice(index, 1);\n      setNodes(temp);\n    } else {\n      temp.push(node);\n      setNodes(temp);\n    }\n\n    if (categoryLevel != \"\") {\n      setCategoryLevel(node.treeLevel);\n\n      if (categoryLevel.split('-').length == node.treeLevel.split('-').length) {\n        var id = \"report-location-tree-view-id-\" + node.id;\n        var getId = document.getElementById(id);\n\n        if (getId.className == \"d-flex justify-content-between tree-nav__item_demo tree-nav__item-title report-location-tree-selected\") {\n          getId.classList.remove('report-location-tree-selected');\n          salesOfficer.length = 0;\n          distributors.length = 0;\n        } else {\n          getId.classList.add('report-location-tree-selected');\n          setNationalLocationChecked(false);\n        }\n      } else {\n        var _id = \"report-location-tree-view-id-\" + node.id;\n\n        var _getId = document.getElementById(_id);\n\n        var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n        for (var i = 0; i < getElements.length; i++) {\n          getElements[i].classList.remove('report-location-tree-selected');\n          salesOfficer.length = 0;\n          distributors.length = 0;\n        }\n\n        if (_getId) {\n          _getId.classList.add('report-location-tree-selected');\n\n          setNationalLocationChecked(false);\n        }\n      }\n    } else {\n      setCategoryLevel(node.treeLevel);\n\n      var _id2 = \"report-location-tree-view-id-\" + node.id;\n\n      var _getId2 = document.getElementById(_id2);\n\n      if (_getId2.className == \"d-flex justify-content-between tree-nav__item_demo tree-nav__item-title report-location-tree-selected\") {\n        _getId2.classList.remove('report-location-tree-selected');\n\n        salesOfficer.length = 0;\n        distributors.length = 0;\n      } else {\n        _getId2.classList.add('report-location-tree-selected');\n\n        setNationalLocationChecked(false);\n      }\n    }\n  };\n\n  var handleActive = function handleActive() {\n    salesOfficerList.length = 0;\n    distributorList.length = 0;\n    distributors.length = 0;\n    var checked = document.getElementById('nationalId').checked;\n    setNationalLocationChecked(checked);\n\n    if (checked) {\n      nodes.length = 0;\n      locationIds.length = 0;\n      var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n      for (var i = 0; i < getElements.length; i++) {\n        getElements[i].classList.remove('report-location-tree-selected');\n      }\n    }\n  };\n\n  var getSalesOfficerIds = function getSalesOfficerIds(salesOfficer, salesOfficerList) {\n    salesOfficerIds.length = 0;\n\n    if (salesOfficerList.length > 0) {\n      salesOfficerList.map(function (data) {\n        var temp = _toConsumableArray(salesOfficerIds);\n\n        var index = temp.findIndex(function (id) {\n          return id === data.id;\n        });\n\n        if (index === -1) {\n          setSalesOfficerIds(function (current) {\n            return [].concat(_toConsumableArray(current), [data.id]);\n          });\n        }\n      });\n    } else {\n      salesOfficer.map(function (data) {\n        var temp = _toConsumableArray(salesOfficerIds);\n\n        var index = temp.findIndex(function (id) {\n          return id === data.id;\n        });\n\n        if (index === -1) {\n          setSalesOfficerIds(function (current) {\n            return [].concat(_toConsumableArray(current), [data.id]);\n          });\n        }\n      });\n    }\n  };\n\n  var getParamsDate = function getParamsDate() {\n    var startDate = '';\n    var endDate = '';\n\n    if (dateType === 'Date') {\n      startDate = inputsDate.startDate === undefined || inputsDate.startDate === null || inputsDate.startDate === '' ? '' : inputsDate.startDate; // 2023-03-01  yyyy-mm-dd\n\n      endDate = inputsDate.endDate === undefined || inputsDate.endDate === null || inputsDate.endDate === '' ? '' : inputsDate.endDate; // 2023-03-01  yyyy-mm-dd\n    } else if (dateType === 'Month') {\n      startDate = inputsDate.startMonth === undefined || inputsDate.startMonth === null || inputsDate.startMonth === '' ? '' : inputsDate.startMonth + '-01';\n      endDate = inputsDate.endMonth === undefined || inputsDate.endMonth === null || inputsDate.endMonth === '' ? '' : inputsDate.endMonth + '-' + moment(inputsDate.endMonth, \"YYYY-MM\").daysInMonth();\n    } else if (dateType === 'Year') {\n      startDate = inputsDate.fromYear === undefined || inputsDate.fromYear === null || inputsDate.fromYear === '' ? '' : inputsDate.fromYear + '-01-01';\n      endDate = inputsDate.toYear === undefined || inputsDate.toYear === null || inputsDate.toYear === '' ? '' : inputsDate.toYear + '-12-31';\n    }\n\n    return {\n      startDate: startDate,\n      endDate: endDate\n    };\n  };\n\n  var validate = function validate() {\n    var dates = getParamsDate();\n    var startDate = dates.startDate;\n    var endDate = dates.endDate;\n\n    if (nationalLocationChecked === false) {\n      if (locationIds.length === 0) {\n        showError('Please Select Location.');\n        return false;\n      } else if (endDate < startDate) {\n        showError(\"End \".concat(dateType, \" should be greater than Start \").concat(dateType, \".\"));\n        return false;\n      } else if (reportType === '') {\n        showError('Please Select Report Type.');\n        return false;\n      } else if (reportFormate === '') {\n        showError('Please Select Report Formate.');\n        return false;\n      }\n    } else if (endDate < startDate) {\n      showError(\"End \".concat(dateType, \" should be greater than Start \").concat(dateType, \".\"));\n      return false;\n    } else if (reportType === '') {\n      showError('Please Select Report Type.');\n      return false;\n    } else if (reportFormate === '') {\n      showError('Please Select Report Formate.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var download = function download() {\n    if (!validate()) {\n      return false;\n    }\n\n    var queryString = '?'; //queryString += 'depotId=' + parseInt(inputs.depotId);\n    //queryString += '&companyId=' + companyId;\n    //queryString += '&storeId=' + parseInt(inputs.storeId);\n\n    queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n    queryString += '&startDate=' + inputs.startDate;\n    queryString += '&endDate=' + inputs.endDate;\n    queryString += '&distributorId=' + parseInt(inputs.distributorId);\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/reports/stock-valuation\") + queryString;\n    axios.get(URL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var url = window.URL.createObjectURL(new Blob([response.data]));\n      var link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', \"salesAndCollection.pdf\");\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var previewValidate = function previewValidate() {\n    var dates = getParamsDate();\n    var startDate = dates.startDate;\n    var endDate = dates.endDate;\n\n    if (nationalLocationChecked === false) {\n      if (locationIds.length === 0) {\n        showError('Please Select Location.');\n        return false;\n      } else if (endDate < startDate) {\n        showError(\"End \".concat(dateType, \" should be greater than Start \").concat(dateType, \".\"));\n        return false;\n      } else if (reportType === '') {\n        showError('Please Select Report Type.');\n        return false;\n      }\n    } else if (endDate < startDate) {\n      showError(\"End \".concat(dateType, \" should be greater than Start \").concat(dateType, \".\"));\n      return false;\n    } else if (reportType === '') {\n      showError('Please Select Report Type.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var preview = function preview() {\n    if (!previewValidate()) {\n      return false;\n    }\n\n    setShowReport(inputs.reportType); // if(!validate()){\n    //     return false;\n    // }\n    // let queryString = \"?\";\n    // queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n    // queryString += '&startDate=' + inputs.startDate;\n    // queryString += '&endDate=' + inputs.endDate;\n    //const URL = `${process.env.REACT_APP_API_URL}/api/reports/distributor-ledger-view`+queryString;\n\n    axios.get(URL).then(function (response) {\n      setReportData(response.data.data);\n      setShowReport(true);\n    }).catch();\n  }; // console.log(inputs)\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MisReportBreadCrum, {\n    menuTitle: \"Sales And Collection Forecast Report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-5\",\n    style: {\n      borderRight: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottom: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc3.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginLeft: \"10px\",\n      color: \"#828282\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 41\n    }\n  }, intl.formatMessage({\n    id: \"COMMON.LOCATION_ALL\"\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(IOSSwitch, {\n      id: \"nationalId\",\n      checked: nationalLocationChecked,\n      onClick: handleActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 50\n      }\n    }),\n    label: \"National\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(ReportLocationTreeView, {\n    tree: locationTree,\n    selectLocationTreeNode: selectLocationTreeNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SalesOfficeList, {\n    companyIdPass: companyId,\n    locationsIdsPass: locationIds,\n    setSalesOfficerListPass: setSalesOfficerList,\n    salesOfficerListPass: salesOfficerList,\n    salesOfficer: salesOfficer,\n    setSalesOfficer: setSalesOfficer,\n    nationalLocationChecked: nationalLocationChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(DistributorList, {\n    companyIdPass: companyId,\n    salesOfficerIdsPass: salesOfficerIds,\n    setDistributorListPass: setDistributorList,\n    distributorListPass: distributorList,\n    distributors: distributors,\n    setDistributors: setDistributors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(CommonDateComponent, {\n    inputs: inputsDate,\n    setInputs: setInputsDate,\n    type: dateType,\n    setType: setDateType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(CommonReportType, {\n    setReportType: setReportType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(CommonReportFormat, {\n    setReportFormat: setReportFormat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: download,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 33\n    }\n  }, \"Download\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-5 mr-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 29\n    }\n  }, \"Preview\"))))))));\n}","map":{"version":3,"names":["React","useEffect","useState","toAbsoluteUrl","Card","CardBody","showError","axios","useIntl","shallowEqual","useSelector","Button","moment","MisReportBreadCrum","FormControlLabel","IOSSwitch","ReportLocationTreeView","SalesOfficeList","DistributorList","CommonDateComponent","CommonReportType","CommonReportFormat","SalesAndCollectionForecastReport","fields","locationId","salesOfficerId","distributorId","startDate","endDate","report","inputs","setInputs","companyId","state","auth","company","intl","showReport","setShowReport","reportData","setReportData","nationalLocationChecked","setNationalLocationChecked","nodes","setNodes","categoryLevel","setCategoryLevel","locationTree","setLocationTree","locationIds","setLocationIds","salesOfficer","setSalesOfficer","salesOfficerList","setSalesOfficerList","salesOfficerIds","setSalesOfficerIds","distributors","setDistributors","distributorList","setDistributorList","accountingYearId","setAccountingYearId","inputsDate","setInputsDate","dateType","setDateType","reportType","setReportType","reportFormat","setReportFormat","getLocationTreeList","map","node","getLocationIds","getSalesOfficerIds","URL","process","env","REACT_APP_API_URL","get","then","response","data","locationAsTree","catch","err","temp","index","findIndex","id","current","children","nodeChild","selectLocationTreeNode","length","treeLevel","splice","push","split","getId","document","getElementById","className","classList","remove","add","getElements","getElementsByClassName","i","handleActive","checked","getParamsDate","undefined","startMonth","endMonth","daysInMonth","fromYear","toYear","validate","dates","reportFormate","download","queryString","parseInt","responseType","url","window","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","removeChild","previewValidate","preview","borderRight","borderBottom","width","height","textAlign","marginLeft","color","formatMessage"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/SalesAndCollectionForecastReport.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport moment from \"moment\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IOSSwitch from '../../../../pages/IOSSwitch';\n\n// IMPORT COMMON COMPONENT FILE\nimport ReportLocationTreeView from '../../../Common/ReportLocationTreeView';\nimport SalesOfficeList from \"../../../Common/SalesOfficeList\";\nimport DistributorList from \"../../../Common/DistributorList\";\nimport CommonDateComponent from '../../../Common/CommonDateComponent';\nimport CommonReportType from \"../../../Common/CommonReportType\";\nimport CommonReportFormat from \"../../../Common/CommonReportFormat\";\n\nexport default function SalesAndCollectionForecastReport() {\n\n    const fields = {\n        locationId:\"\",\n        salesOfficerId: \"\",\n        distributorId: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        report: \"\"\n\n\n    };\n\n    const [inputs, setInputs] = useState(fields);\n    const companyId = useSelector((state) => state.auth.company, shallowEqual);\n    const intl = useIntl();\n    const [showReport, setShowReport] = useState('');\n    const [reportData, setReportData] = useState([]);\n\n     // NATIONAL BUTTON STATE\n     const [nationalLocationChecked, setNationalLocationChecked] = useState(false);\n\n     // LOCATION TREE COMPONENT USE STATE\n     const [nodes, setNodes] = useState([]);\n     const [categoryLevel, setCategoryLevel] = useState(\"\");\n     const [locationTree, setLocationTree] = useState([]);\n     const [locationIds, setLocationIds] = useState([]);\n \n     // SALES OFFICER COMPONENT USE STATE\n     const [salesOfficer, setSalesOfficer] = useState([]);\n     const [salesOfficerList, setSalesOfficerList] = useState([]);\n     const [salesOfficerIds, setSalesOfficerIds] = useState([]);\n \n     // DISTRIBUTOR COMPONENT USE STATE\n     const [distributors, setDistributors] = useState([]);\n     const [distributorList, setDistributorList] = useState([]);\n \n     // FISCAL YEAR COMPONENT USE STATE\n     const [accountingYearId, setAccountingYearId] = useState(null);\n \n     // DATE COMPONENT USE STATE\n     const [inputsDate, setInputsDate] = useState({});\n     const [dateType, setDateType] = useState(\"Date\");\n \n      // REPORT TYPE COMPONENT USE STATE\n      const [reportType, setReportType] = useState(\"\");\n \n      // REPORT FORMATE COMPONENT USE STATE\n      const [reportFormat, setReportFormat] = useState(\"\");\n \n     useEffect(() => {\n         //document.getElementById('reportShowIframe').style.display = \"none\";\n         getLocationTreeList(companyId)\n     }, [companyId]);\n \n     useEffect(() => {\n         nodes.map(node => {\n             getLocationIds(node)\n         })\n     }, [nodes]);\n \n     useEffect(() => {\n         getSalesOfficerIds(salesOfficer, salesOfficerList)\n     }, [salesOfficer, salesOfficerList]);\n \n     const getLocationTreeList = (companyId) => {\n         const URL = `${process.env.REACT_APP_API_URL}/api/location-tree/report-location-tree-info/${companyId}`;\n         axios.get(URL).then(response => {\n             const locationTree = response.data.data.locationAsTree;\n             setLocationTree(locationTree);\n         }).catch(err => {\n             showError(\"Cannot get Location Tree data.\");\n         });\n     }\n \n     const getLocationIds = (node) => {\n         let temp = [...locationIds]\n         let index = temp.findIndex(id => id === node.id)\n         if (index === -1) {\n             setLocationIds(current => [...current, node.id]);\n         }\n         node.children.map(nodeChild => {\n             getLocationIds(nodeChild)\n         })\n     }\n \n     const selectLocationTreeNode = (node) => {\n         locationIds.length = 0;\n         let temp = [...nodes]\n         let index = temp.findIndex(data => data.treeLevel == node.treeLevel)\n         if (index > -1) {\n             temp.splice(index, 1);\n             setNodes(temp)\n         } else {\n             temp.push(node)\n             setNodes(temp)\n         }\n         if (categoryLevel != \"\") {\n             setCategoryLevel(node.treeLevel)\n             if (categoryLevel.split('-').length == node.treeLevel.split('-').length) {\n                 let id = \"report-location-tree-view-id-\" + node.id;\n                 const getId = document.getElementById(id);\n                 if (getId.className == \"d-flex justify-content-between tree-nav__item_demo tree-nav__item-title report-location-tree-selected\") {\n                     getId.classList.remove('report-location-tree-selected');\n                     salesOfficer.length = 0;\n                     distributors.length = 0;\n                 } else {\n                     getId.classList.add('report-location-tree-selected');\n                     setNationalLocationChecked(false)\n                 }\n             } else {\n                 let id = \"report-location-tree-view-id-\" + node.id;\n                 const getId = document.getElementById(id);\n                 const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n                 for (var i = 0; i < getElements.length; i++) {\n                     getElements[i].classList.remove('report-location-tree-selected');\n                     salesOfficer.length = 0;\n                     distributors.length = 0;\n                 }\n                 if (getId) {\n                     getId.classList.add('report-location-tree-selected');\n                     setNationalLocationChecked(false)\n                 }\n             }\n \n         } else {\n             setCategoryLevel(node.treeLevel)\n             let id = \"report-location-tree-view-id-\" + node.id;\n             const getId = document.getElementById(id);\n             if (getId.className == \"d-flex justify-content-between tree-nav__item_demo tree-nav__item-title report-location-tree-selected\") {\n                 getId.classList.remove('report-location-tree-selected');\n                 salesOfficer.length = 0;\n                 distributors.length = 0;\n             } else {\n                 getId.classList.add('report-location-tree-selected');\n                 setNationalLocationChecked(false)\n             }\n         }\n     }\n \n     const handleActive = () => {\n         salesOfficerList.length = 0;\n         distributorList.length = 0;\n         distributors.length = 0;\n         let checked = document.getElementById('nationalId').checked;\n         setNationalLocationChecked(checked)\n         if (checked) {\n             nodes.length = 0;\n             locationIds.length = 0;\n             const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n             for (let i = 0; i < getElements.length; i++) {\n                 getElements[i].classList.remove('report-location-tree-selected');\n             }\n         }\n     }\n \n     const getSalesOfficerIds = (salesOfficer, salesOfficerList) => {\n         salesOfficerIds.length = 0;\n \n         if (salesOfficerList.length > 0) {\n             salesOfficerList.map((data) => {\n                 let temp = [...salesOfficerIds]\n                 let index = temp.findIndex(id => id === data.id)\n                 if (index === -1) {\n                     setSalesOfficerIds(current => [...current, data.id]);\n                 }\n             })\n         } else {\n             salesOfficer.map((data) => {\n                 let temp = [...salesOfficerIds]\n                 let index = temp.findIndex(id => id === data.id)\n                 if (index === -1) {\n                     setSalesOfficerIds(current => [...current, data.id]);\n                 }\n             })\n         }\n \n     }\n \n     const getParamsDate = () => {\n         let startDate = '';\n         let endDate = '';\n         if (dateType === 'Date') {\n             startDate = inputsDate.startDate === undefined || inputsDate.startDate === null || inputsDate.startDate === '' ? '' : inputsDate.startDate;   // 2023-03-01  yyyy-mm-dd\n             endDate = inputsDate.endDate === undefined || inputsDate.endDate === null || inputsDate.endDate === '' ? '' : inputsDate.endDate;   // 2023-03-01  yyyy-mm-dd\n         } else if (dateType === 'Month') {\n             startDate = inputsDate.startMonth === undefined || inputsDate.startMonth === null || inputsDate.startMonth === '' ? '' : (inputsDate.startMonth + '-01');\n             endDate = inputsDate.endMonth === undefined || inputsDate.endMonth === null || inputsDate.endMonth === '' ? '' : (inputsDate.endMonth + '-' + moment(inputsDate.endMonth, \"YYYY-MM\").daysInMonth());\n         } else if (dateType === 'Year') {\n             startDate = inputsDate.fromYear === undefined || inputsDate.fromYear === null || inputsDate.fromYear === '' ? '' : (inputsDate.fromYear + '-01-01');\n             endDate = inputsDate.toYear === undefined || inputsDate.toYear === null || inputsDate.toYear === '' ? '' : (inputsDate.toYear + '-12-31');\n         }\n         return {startDate: startDate, endDate: endDate};\n     }\n \n\n     const validate = () => {\n        let dates = getParamsDate();\n        let startDate = dates.startDate;\n        let endDate = dates.endDate;\n        \n        if (nationalLocationChecked === false) {\n            if (locationIds.length === 0) {\n                showError('Please Select Location.');\n                return false;\n            }else if (endDate < startDate) {\n                showError(`End ${dateType} should be greater than Start ${dateType}.`);\n                return false;\n            }else if (reportType === '') {\n                showError('Please Select Report Type.');\n                return false;\n            }else if (reportFormate === '') {\n                showError('Please Select Report Formate.');\n                return false;\n            }\n        }else if (endDate < startDate) {\n            showError(`End ${dateType} should be greater than Start ${dateType}.`);\n            return false;\n        }else if (reportType === '') {\n            showError('Please Select Report Type.');\n            return false;\n        }else if (reportFormate === '') {\n            showError('Please Select Report Formate.');\n            return false;\n        }\n        return true;\n    }\n\n    const download = () => {\n        if (!validate()) {\n            return false;\n        } \n        let queryString = '?';\n        //queryString += 'depotId=' + parseInt(inputs.depotId);\n        //queryString += '&companyId=' + companyId;\n        //queryString += '&storeId=' + parseInt(inputs.storeId);\n\n        queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n        queryString += '&startDate=' + inputs.startDate;\n        queryString += '&endDate=' + inputs.endDate;\n        queryString += '&distributorId=' + parseInt(inputs.distributorId);\n\n        const URL = `${process.env.REACT_APP_API_URL}/api/reports/stock-valuation` + queryString;\n        axios.get(URL, { responseType: 'blob' }).then(response => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', \"salesAndCollection.pdf\");\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n\n        }).catch(err => {\n            showError();\n        });\n\n    }\n\n    const previewValidate = () => {\n        let dates = getParamsDate();\n        let startDate = dates.startDate;\n        let endDate = dates.endDate;\n        if (nationalLocationChecked === false) {\n            if (locationIds.length === 0) {\n                showError('Please Select Location.');\n                return false;\n            }else if (endDate < startDate) {\n                showError(`End ${dateType} should be greater than Start ${dateType}.`);\n                return false;\n            }else if (reportType === '') {\n                showError('Please Select Report Type.');\n                return false;\n            }\n        }else if (endDate < startDate) {\n            showError(`End ${dateType} should be greater than Start ${dateType}.`);\n            return false;\n        }else if (reportType === '') {\n            showError('Please Select Report Type.');\n            return false;\n        }\n        return true;\n    }\n\n    const preview = () => {   \n        if(!previewValidate()){\n            return false;\n        }\n        setShowReport(inputs.reportType);\n        // if(!validate()){\n        //     return false;\n        // }\n        // let queryString = \"?\";\n        // queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n        // queryString += '&startDate=' + inputs.startDate;\n        // queryString += '&endDate=' + inputs.endDate;\n\n        //const URL = `${process.env.REACT_APP_API_URL}/api/reports/distributor-ledger-view`+queryString;\n        axios.get(URL).then((response) => {\n            setReportData(response.data.data);\n            setShowReport(true);\n        }).catch();\n    }\n    // console.log(inputs)\n    return (\n        <>\n            <div>\n            <MisReportBreadCrum menuTitle=\"Sales And Collection Forecast Report\"/>\n            </div>\n            <div>\n                {/* BREAD CRUM ROW */}\n                {/* <InventoryBreadCrum /> */}\n                {/* TODAY SALE ROW */}\n                {/* <InventoryStockHeader showStockData={true} /> */}\n                {/* <ReportsSubTabsHeader /> */}\n            </div>\n            <div>\n                <Card>\n                    <CardBody>\n                        <div className='row'>\n                            {/* LEFT SIDE TREE ROW */}\n                            <div className='col-xl-5' style={{ borderRight: \"1px solid #F2F2F2\" }}>\n                                <div style={{ borderBottom: \"1px solid #F2F2F2\" }}>\n                                    <label>\n                                        <img src={toAbsoluteUrl(\"/images/loc3.png\")}\n                                            style={{ width: \"20px\", height: \"20px\", textAlign: \"center\" }}\n                                            alt='Company Picture' />\n                                        <strong style={{ marginLeft: \"10px\", color: \"#828282\" }}>{intl.formatMessage({ id: \"COMMON.LOCATION_ALL\" })}</strong>\n                                    </label>\n                                </div>\n                               {/* NATIONAL BUTTON */}\n                               <div>\n                                    <FormControlLabel\n                                        control={<IOSSwitch id=\"nationalId\"\n                                            checked={nationalLocationChecked}\n                                            onClick={handleActive}\n                                        />}\n                                        label=\"National\"\n                                    />\n                                </div>\n                                {/* LOCATION TREE */}\n                                <ReportLocationTreeView tree={locationTree} selectLocationTreeNode={selectLocationTreeNode} />\n                            </div>\n                            {/* RIGHT SIDE LIST ROW */}\n                            <div className='col-xl-7'>\n                               {/* SALES OFFICER COMPONENT */}\n                               <SalesOfficeList\n                                    companyIdPass={companyId}\n                                    locationsIdsPass={locationIds}\n                                    setSalesOfficerListPass={setSalesOfficerList}\n                                    salesOfficerListPass={salesOfficerList}\n                                    salesOfficer={salesOfficer}\n                                    setSalesOfficer={setSalesOfficer}\n                                    nationalLocationChecked={nationalLocationChecked}\n                                />\n\n                                {/* DISTRIBUTOR COMPONENT */}\n                                <DistributorList\n                                    companyIdPass={companyId}\n                                    salesOfficerIdsPass={salesOfficerIds}\n                                    setDistributorListPass={setDistributorList}\n                                    distributorListPass={distributorList}\n                                    distributors={distributors} setDistributors={setDistributors}\n                                />\n\n                                {/* DATE COMPONENT */}\n                                <CommonDateComponent\n                                    inputs={inputsDate}\n                                    setInputs={setInputsDate}\n                                    type={dateType}\n                                    setType={setDateType}\n                                />\n\n                                {/* REPORT TYPE COMPONENT */}\n                                <CommonReportType\n                                    setReportType={setReportType}\n                                />\n\n                                {/* REPORT FORMATE COMPONENT */}\n                                <CommonReportFormat\n                                    setReportFormat={setReportFormat}\n                                />\n\n                                <Button className=\"float-right mt-5\" id=\"gotItBtn\" variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={download}\n                                >\n                                    Download\n                                </Button>\n\n                                <div className=\"float-right\">\n                            <Button className=\"mt-5 mr-5\" id=\"gotItBtn\" variant=\"contained\" color=\"primary\"  onClick={preview}>\n                                Preview\n                            </Button>                      \n                            </div>                         \n                            </div>\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}