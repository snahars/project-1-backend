{"ast":null,"code":"var _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/Routes.js\";\n\n/**\r\n * High level router.\r\n *\r\n * Note: It's recommended to compose related routes in internal router\r\n * components (e.g: `src/app/modules/Auth/pages/AuthPage`, `src/app/BasePage`).\r\n */\nimport React from \"react\";\nimport { Redirect, Switch, Route } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { Layout } from \"../_metronic/layout\";\nimport BasePage from \"./BasePage\";\nimport { Logout, AuthPage } from \"./modules/Auth\";\nimport ErrorsPage from \"./modules/ErrorsExamples/ErrorsPage\";\nexport function Routes() {\n  var _useSelector = useSelector(function (_ref) {\n    var auth = _ref.auth;\n    return {\n      isAuthorized: auth.user != null\n    };\n  }, shallowEqual),\n      isAuthorized = _useSelector.isAuthorized;\n\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, !isAuthorized ?\n  /*#__PURE__*/\n\n  /*Render auth page when user at `/auth` and not authorized.*/\n  React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AuthPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  })) :\n  /*#__PURE__*/\n\n  /*Otherwise redirect to root page (`/`)*/\n  React.createElement(Redirect, {\n    from: \"/auth\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/error\",\n    component: ErrorsPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/logout\",\n    component: Logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), !isAuthorized ?\n  /*#__PURE__*/\n\n  /*Redirect to `/auth` when user is not authorized*/\n  React.createElement(Redirect, {\n    to: \"/auth/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BasePage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"names":["React","Redirect","Switch","Route","shallowEqual","useSelector","Layout","BasePage","Logout","AuthPage","ErrorsPage","Routes","auth","isAuthorized","user"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/Routes.js"],"sourcesContent":["/**\r\n * High level router.\r\n *\r\n * Note: It's recommended to compose related routes in internal router\r\n * components (e.g: `src/app/modules/Auth/pages/AuthPage`, `src/app/BasePage`).\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Redirect, Switch, Route } from \"react-router-dom\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport {Layout} from \"../_metronic/layout\";\r\nimport BasePage from \"./BasePage\";\r\nimport { Logout, AuthPage } from \"./modules/Auth\";\r\nimport ErrorsPage from \"./modules/ErrorsExamples/ErrorsPage\";\r\n\r\nexport function Routes() {\r\n    const {isAuthorized} = useSelector(\r\n        ({auth}) => ({\r\n            isAuthorized: auth.user != null,\r\n        }),\r\n        shallowEqual\r\n    );\r\n\r\n    return (\r\n        <Switch>\r\n            {!isAuthorized ? (\r\n                /*Render auth page when user at `/auth` and not authorized.*/\r\n                <Route>\r\n                    <AuthPage />\r\n                </Route>\r\n            ) : (\r\n                /*Otherwise redirect to root page (`/`)*/\r\n                <Redirect from=\"/auth\" to=\"/\"/>\r\n            )}\r\n\r\n            <Route path=\"/error\" component={ErrorsPage}/>\r\n            <Route path=\"/logout\" component={Logout}/>\r\n\r\n\r\n            {!isAuthorized ? (\r\n                /*Redirect to `/auth` when user is not authorized*/\r\n                <Redirect to=\"/auth/login\"/>\r\n            ) : (\r\n                <Layout>\r\n                    <BasePage/>\r\n                </Layout>\r\n            )}\r\n        </Switch>\r\n    );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,KAA3B,QAAwC,kBAAxC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,gBAAjC;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,OAAO,SAASC,MAAT,GAAkB;EACrB,mBAAuBN,WAAW,CAC9B;IAAA,IAAEO,IAAF,QAAEA,IAAF;IAAA,OAAa;MACTC,YAAY,EAAED,IAAI,CAACE,IAAL,IAAa;IADlB,CAAb;EAAA,CAD8B,EAI9BV,YAJ8B,CAAlC;EAAA,IAAOS,YAAP,gBAAOA,YAAP;;EAOA,oBACI,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACK,CAACA,YAAD;EAAA;;EACG;EACA,oBAAC,KAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CAFH;EAAA;;EAMG;EACA,oBAAC,QAAD;IAAU,IAAI,EAAC,OAAf;IAAuB,EAAE,EAAC,GAA1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EARR,eAWI,oBAAC,KAAD;IAAO,IAAI,EAAC,QAAZ;IAAqB,SAAS,EAAEH,UAAhC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAXJ,eAYI,oBAAC,KAAD;IAAO,IAAI,EAAC,SAAZ;IAAsB,SAAS,EAAEF,MAAjC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAZJ,EAeK,CAACK,YAAD;EAAA;;EACG;EACA,oBAAC,QAAD;IAAU,EAAE,EAAC,aAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFH,gBAIG,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CAnBR,CADJ;AA0BH"},"metadata":{},"sourceType":"module"}