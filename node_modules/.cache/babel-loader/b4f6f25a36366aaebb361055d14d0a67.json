{"ast":null,"code":"/* eslint-disable */\n\"use strict\";\n\nimport { KTUtil } from \"./util\"; // Component Definition\n\nvar KTToggle = function KTToggle(toggleElement, targetElement, options) {\n  // Main object\n  var the = this;\n  var init = false; // Get element object\n\n  var element = toggleElement;\n  var target = targetElement;\n\n  if (!element) {\n    return;\n  } // Default options\n\n\n  var defaultOptions = {\n    targetToggleMode: 'class' // class|attribute\n\n  }; ////////////////////////////\n  // ** Private Methods  ** //\n  ////////////////////////////\n\n  var Plugin = {\n    /**\r\n     * Construct\r\n     */\n    construct: function construct(options) {\n      if (KTUtil.data(element).has('toggle')) {\n        the = KTUtil.data(element).get('toggle');\n      } else {\n        // reset menu\n        Plugin.init(options); // build menu\n\n        Plugin.build();\n        KTUtil.data(element).set('toggle', the);\n      }\n\n      return the;\n    },\n\n    /**\r\n     * Handles subtoggle click toggle\r\n     */\n    init: function init(options) {\n      the.element = element;\n      the.events = []; // Merge default and user defined options\n\n      the.options = KTUtil.deepExtend({}, defaultOptions, options); //alert(the.options.target.tagName);\n\n      the.target = target;\n      the.targetState = the.options.targetState;\n      the.toggleState = the.options.toggleState;\n\n      if (the.options.targetToggleMode == 'class') {\n        the.state = KTUtil.hasClasses(the.target, the.targetState) ? 'on' : 'off';\n      } else {\n        the.state = KTUtil.hasAttr(the.target, 'data-' + the.targetState) ? KTUtil.attr(the.target, 'data-' + the.targetState) : 'off';\n      }\n    },\n\n    /**\r\n     * Setup toggle\r\n     */\n    build: function build() {\n      KTUtil.addEvent(element, 'mouseup', Plugin.toggle);\n    },\n\n    /**\r\n     * Handles offcanvas click toggle\r\n     */\n    toggle: function toggle(e) {\n      Plugin.eventTrigger('beforeToggle');\n\n      if (the.state == 'off') {\n        Plugin.toggleOn();\n      } else {\n        Plugin.toggleOff();\n      }\n\n      Plugin.eventTrigger('afterToggle');\n      e.preventDefault();\n      return the;\n    },\n\n    /**\r\n     * Handles toggle click toggle\r\n     */\n    toggleOn: function toggleOn() {\n      Plugin.eventTrigger('beforeOn');\n\n      if (the.options.targetToggleMode == 'class') {\n        KTUtil.addClass(the.target, the.targetState);\n      } else {\n        KTUtil.attr(the.target, 'data-' + the.targetState, 'on');\n      }\n\n      if (the.toggleState) {\n        KTUtil.addClass(element, the.toggleState);\n      }\n\n      the.state = 'on';\n      Plugin.eventTrigger('afterOn');\n      Plugin.eventTrigger('toggle');\n      return the;\n    },\n\n    /**\r\n     * Handles toggle click toggle\r\n     */\n    toggleOff: function toggleOff() {\n      Plugin.eventTrigger('beforeOff');\n\n      if (the.options.targetToggleMode == 'class') {\n        KTUtil.removeClass(the.target, the.targetState);\n      } else {\n        KTUtil.removeAttr(the.target, 'data-' + the.targetState);\n      }\n\n      if (the.toggleState) {\n        KTUtil.removeClass(element, the.toggleState);\n      }\n\n      the.state = 'off';\n      Plugin.eventTrigger('afterOff');\n      Plugin.eventTrigger('toggle');\n      return the;\n    },\n\n    /**\r\n     * Trigger events\r\n     */\n    eventTrigger: function eventTrigger(name) {\n      for (var i = 0; i < the.events.length; i++) {\n        var event = the.events[i];\n\n        if (event.name == name) {\n          if (event.one == true) {\n            if (event.fired == false) {\n              the.events[i].fired = true;\n              return event.handler.call(this, the);\n            }\n          } else {\n            return event.handler.call(this, the);\n          }\n        }\n      }\n    },\n    addEvent: function addEvent(name, handler, one) {\n      the.events.push({\n        name: name,\n        handler: handler,\n        one: one,\n        fired: false\n      });\n      return the;\n    }\n  }; //////////////////////////\n  // ** Public Methods ** //\n  //////////////////////////\n\n  /**\r\n   * Set default options\r\n   */\n\n  the.setDefaults = function (options) {\n    defaultOptions = options;\n  };\n  /**\r\n   * Get toggle state\r\n   */\n\n\n  the.getState = function () {\n    return the.state;\n  };\n  /**\r\n   * Toggle\r\n   */\n\n\n  the.toggle = function () {\n    return Plugin.toggle();\n  };\n  /**\r\n   * Toggle on\r\n   */\n\n\n  the.toggleOn = function () {\n    return Plugin.toggleOn();\n  };\n  /**\r\n   * Toggle off\r\n   */\n\n\n  the.toggleOff = function () {\n    return Plugin.toggleOff();\n  };\n  /**\r\n   * Attach event\r\n   * @returns {KTToggle}\r\n   */\n\n\n  the.on = function (name, handler) {\n    return Plugin.addEvent(name, handler);\n  };\n  /**\r\n   * Attach event that will be fired once\r\n   * @returns {KTToggle}\r\n   */\n\n\n  the.one = function (name, handler) {\n    return Plugin.addEvent(name, handler, true);\n  }; // Construct plugin\n\n\n  Plugin.construct.apply(the, [options]);\n  return the;\n}; // webpack support\n\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {// module.exports = KTToggle;\n}\n\nexport default KTToggle;","map":{"version":3,"names":["KTUtil","KTToggle","toggleElement","targetElement","options","the","init","element","target","defaultOptions","targetToggleMode","Plugin","construct","data","has","get","build","set","events","deepExtend","targetState","toggleState","state","hasClasses","hasAttr","attr","addEvent","toggle","e","eventTrigger","toggleOn","toggleOff","preventDefault","addClass","removeClass","removeAttr","name","i","length","event","one","fired","handler","call","push","setDefaults","getState","on","apply","module","exports"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/_metronic/_assets/js/components/toggle.js"],"sourcesContent":["/* eslint-disable */\n\"use strict\";\n\nimport { KTUtil } from \"./util\";\r\n\r\n// Component Definition\r\nvar KTToggle = function(toggleElement, targetElement, options) {\r\n    // Main object\r\n    var the = this;\r\n    var init = false;\r\n\r\n    // Get element object\r\n    var element = toggleElement;\r\n    var target = targetElement;\r\n\r\n    if (!element) {\r\n        return;\r\n    }\r\n\r\n    // Default options\r\n    var defaultOptions = {\r\n        targetToggleMode: 'class' // class|attribute\r\n    };\r\n\r\n    ////////////////////////////\r\n    // ** Private Methods  ** //\r\n    ////////////////////////////\r\n\r\n    var Plugin = {\r\n        /**\r\n         * Construct\r\n         */\r\n\r\n        construct: function(options) {\r\n            if (KTUtil.data(element).has('toggle')) {\r\n                the = KTUtil.data(element).get('toggle');\r\n            } else {\r\n                // reset menu\r\n                Plugin.init(options);\r\n\r\n                // build menu\r\n                Plugin.build();\r\n\r\n                KTUtil.data(element).set('toggle', the);\r\n            }\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles subtoggle click toggle\r\n         */\r\n        init: function(options) {\r\n            the.element = element;\r\n            the.events = [];\r\n\r\n            // Merge default and user defined options\r\n            the.options = KTUtil.deepExtend({}, defaultOptions, options);\r\n\r\n            //alert(the.options.target.tagName);\r\n            the.target = target;\r\n\r\n            the.targetState = the.options.targetState;\r\n            the.toggleState = the.options.toggleState;\r\n\r\n            if (the.options.targetToggleMode == 'class') {\r\n                the.state = KTUtil.hasClasses(the.target, the.targetState) ? 'on' : 'off';\r\n            } else {\r\n                the.state = KTUtil.hasAttr(the.target, 'data-' + the.targetState) ? KTUtil.attr(the.target, 'data-' + the.targetState) : 'off';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Setup toggle\r\n         */\r\n        build: function() {\r\n            KTUtil.addEvent(element, 'mouseup', Plugin.toggle);\r\n        },\r\n\r\n        /**\r\n         * Handles offcanvas click toggle\r\n         */\r\n        toggle: function(e) {\r\n            Plugin.eventTrigger('beforeToggle');\r\n\r\n            if (the.state == 'off') {\r\n                Plugin.toggleOn();\r\n            } else {\r\n                Plugin.toggleOff();\r\n            }\r\n\r\n            Plugin.eventTrigger('afterToggle');\r\n\r\n            e.preventDefault();\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles toggle click toggle\r\n         */\r\n        toggleOn: function() {\r\n            Plugin.eventTrigger('beforeOn');\r\n\r\n            if (the.options.targetToggleMode == 'class') {\r\n                KTUtil.addClass(the.target, the.targetState);\r\n            } else {\r\n                KTUtil.attr(the.target, 'data-' + the.targetState, 'on');\r\n            }\r\n\r\n            if (the.toggleState) {\r\n                KTUtil.addClass(element, the.toggleState);\r\n            }\r\n\r\n            the.state = 'on';\r\n\r\n            Plugin.eventTrigger('afterOn');\r\n\r\n            Plugin.eventTrigger('toggle');\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Handles toggle click toggle\r\n         */\r\n        toggleOff: function() {\r\n            Plugin.eventTrigger('beforeOff');\r\n\r\n            if (the.options.targetToggleMode == 'class') {\r\n                KTUtil.removeClass(the.target, the.targetState);\r\n            } else {\r\n                KTUtil.removeAttr(the.target, 'data-' + the.targetState);\r\n            }\r\n\r\n            if (the.toggleState) {\r\n                KTUtil.removeClass(element, the.toggleState);\r\n            }\r\n\r\n            the.state = 'off';\r\n\r\n            Plugin.eventTrigger('afterOff');\r\n\r\n            Plugin.eventTrigger('toggle');\r\n\r\n            return the;\r\n        },\r\n\r\n        /**\r\n         * Trigger events\r\n         */\r\n        eventTrigger: function(name) {\r\n            for (var i = 0; i < the.events.length; i++) {\r\n                var event = the.events[i];\r\n\r\n                if (event.name == name) {\r\n                    if (event.one == true) {\r\n                        if (event.fired == false) {\r\n                            the.events[i].fired = true;\r\n                            return event.handler.call(this, the);\r\n                        }\r\n                    } else {\r\n                        return event.handler.call(this, the);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        addEvent: function(name, handler, one) {\r\n            the.events.push({\r\n                name: name,\r\n                handler: handler,\r\n                one: one,\r\n                fired: false\r\n            });\r\n\r\n            return the;\r\n        }\r\n    };\r\n\r\n    //////////////////////////\r\n    // ** Public Methods ** //\r\n    //////////////////////////\r\n\r\n    /**\r\n     * Set default options\r\n     */\r\n\r\n    the.setDefaults = function(options) {\r\n        defaultOptions = options;\r\n    };\r\n\r\n    /**\r\n     * Get toggle state\r\n     */\r\n    the.getState = function() {\r\n        return the.state;\r\n    };\r\n\r\n    /**\r\n     * Toggle\r\n     */\r\n    the.toggle = function() {\r\n        return Plugin.toggle();\r\n    };\r\n\r\n    /**\r\n     * Toggle on\r\n     */\r\n    the.toggleOn = function() {\r\n        return Plugin.toggleOn();\r\n    };\r\n\r\n    /**\r\n     * Toggle off\r\n     */\r\n    the.toggleOff = function() {\r\n        return Plugin.toggleOff();\r\n    };\r\n\r\n    /**\r\n     * Attach event\r\n     * @returns {KTToggle}\r\n     */\r\n    the.on = function(name, handler) {\r\n        return Plugin.addEvent(name, handler);\r\n    };\r\n\r\n    /**\r\n     * Attach event that will be fired once\r\n     * @returns {KTToggle}\r\n     */\r\n    the.one = function(name, handler) {\r\n        return Plugin.addEvent(name, handler, true);\r\n    };\r\n\r\n    // Construct plugin\r\n    Plugin.construct.apply(the, [options]);\r\n\r\n    return the;\r\n};\r\n\r\n// webpack support\r\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n    // module.exports = KTToggle;\r\n}\r\n\nexport default KTToggle;"],"mappings":"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"},"metadata":{},"sourceType":"module"}