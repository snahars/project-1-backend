{"ast":null,"code":"import _defineProperty from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/ProductTradePriceChangeHistory.js\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport ProductCategoryTreeView from '../../../SalesCollection/CommonComponents/ProductCategoryTreeView';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport { getDayDiff, getDaysCount } from \"../../../Util\";\nexport default function ProductTradePriceChangeHistory() {\n  var fields = {\n    salesOfficerId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    report: \"\"\n  };\n\n  var _useState = useState(fields),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      producCategoryTree = _useState4[0],\n      setProductCategoryTree = _useState4[1];\n\n  var selectedCompany = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var userLoginId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n  var intl = useIntl();\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      locationTree = _useState6[0],\n      setLocationTree = _useState6[1]; //const [company, setCompany] = useState([]);\n\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      accountingYearId = _useState8[0],\n      setAccountingYearId = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      locationId = _useState10[0],\n      setLocationId = _useState10[1]; //const [childCategoryList, setChildCategoryList] = useState([]);\n\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      productCategoryId = _useState12[0],\n      setProductCategoryId = _useState12[1]; // const [allAccountingYear, setAllAccountingYear] = useState([]);\n  // const [categoryName, setCategoryName] = useState('All');\n\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      salesOfficer = _useState14[0],\n      setSalesOfficer = _useState14[1]; // const [inputs, setInputs] = useState({});\n\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      salesOfficerValue = _useState16[0],\n      setSalesOfficerValue = _useState16[1];\n\n  var searchParams = useMemo(function () {\n    return {\n      userLoginId: userLoginId,\n      companyId: selectedCompany,\n      accountingYearId: accountingYearId,\n      locationId: locationId,\n      productCategoryId: productCategoryId\n    };\n  }, [userLoginId, selectedCompany, accountingYearId, locationId, productCategoryId]);\n\n  var _useState17 = useState({}),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedLocation = _useState18[0],\n      setSelectedLocation = _useState18[1];\n\n  var _useState19 = useState({\n    totalQuantity: 0,\n    totlaSalesAmount: 0\n  }),\n      _useState20 = _slicedToArray(_useState19, 2),\n      total = _useState20[0],\n      setTotal = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      salesDataList = _useState22[0],\n      setProductTradePriceChangeHistoryList = _useState22[1];\n\n  var history = useHistory();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      singleAll = _React$useState4[0],\n      setSingleAll = _React$useState4[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? 'simple-popper' : undefined; // useEffect(() => {\n  //     // document.getElementById('pills-inventory-stock-report-tab').classList.add('active')\n  //     // document.getElementById('pills-inventory-stock-sales-collection-report-tab').classList.add('active')\n  // }, []);\n\n  useEffect(function () {\n    getProductCategoryTreeList(selectedCompany);\n  }, [userLoginId, selectedCompany]);\n\n  var getProductCategoryTreeList = function getProductCategoryTreeList(params) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/product-category/list-info/\") + params;\n    axios.get(URL).then(function (response) {\n      setProductCategoryTree(response.data.data.childProductCategoryDtoList);\n    }).catch(function (err) {\n      showError(\"Can not get product category tree data.\");\n    });\n  };\n\n  var selectTreeNode = function selectTreeNode(node) {\n    var id = \"summary-id-\" + node.id;\n    var getId = document.getElementById(id);\n    var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n    for (var i = 0; i < getElements.length; i++) {\n      getElements[i].classList.remove('tree-nav-item');\n    }\n\n    if (getId) {\n      getId.classList.add('tree-nav-item');\n      setProductCategoryId(node);\n    }\n  };\n\n  var getSalesOfficerListByLocation = function getSalesOfficerListByLocation(locationId, companyId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/auth/get-sales-officer-location/\").concat(locationId, \"/\").concat(companyId);\n    axios.get(URL).then(function (response) {\n      if (response.data.data != undefined) {\n        console.log(response.data.data);\n        setSalesOfficer(response.data.data);\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Company data.\");\n    });\n  };\n\n  var handleChange = function handleChange(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    setInputs(function (values) {\n      return _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var validate = function validate() {\n    if (!inputs.salesOfficerId) {\n      showError('Sales Officer Name is required.');\n      return false;\n    } else if (!inputs.startDate) {\n      showError(\"Start date  is required\");\n    } else if (!inputs.endDate) {\n      showError(\"End date is required\");\n    } else if (inputs.endDate < inputs.startDate) {\n      showError(\"End Date should be greater than Start Date.\");\n      return false;\n    } else if (!inputs.report) {\n      showError('Report is required.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var previewProductTradePriceChangeHistory = function previewProductTradePriceChangeHistory() {\n    if (!validate()) {\n      return false;\n    }\n\n    var queryString = '?'; //queryString += 'depotId=' + parseInt(inputs.depotId);\n    //queryString += '&companyId=' + companyId;\n    //queryString += '&storeId=' + parseInt(inputs.storeId);\n\n    queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n    queryString += '&startDate=' + inputs.startDate;\n    queryString += '&endDate=' + inputs.endDate;\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/reports/stock-valuation\") + queryString;\n    axios.get(URL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var url = window.URL.createObjectURL(new Blob([response.data]));\n      var link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', \"salesAndCollection.pdf\");\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  console.log(inputs);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MisReportBreadCrum, {\n    menuTitle: \"Product Trade Price History\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-3\",\n    style: {\n      borderRight: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottom: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc3.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginLeft: \"10px\",\n      color: \"#828282\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 41\n    }\n  }, \"Product Category (All)\"))), /*#__PURE__*/React.createElement(ProductCategoryTreeView, {\n    tree: producCategoryTree,\n    selectProductCategoryTreeNode: selectTreeNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 25\n    }\n  }, \"Start Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 66\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"startDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"startDate\",\n    value: inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 33\n    }\n  }, \"End Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 72\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"endDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"endDate\",\n    value: inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    required: true,\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 76\n    }\n  }, \"Report\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 112\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"reportId\",\n    name: \"report\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 49\n    }\n  }, \"Select Report\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 49\n    }\n  }, \"Pdf\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 49\n    }\n  }, \"Excel\"))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: previewProductTradePriceChangeHistory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 33\n    }\n  }, \"Submit\")))))));\n}","map":{"version":3,"names":["React","useEffect","useMemo","useState","toAbsoluteUrl","Card","CardBody","useHistory","LocationTreeView","showError","axios","useIntl","shallowEqual","useSelector","ProductCategoryTreeView","Autocomplete","TextField","Button","typeOf","moment","Flatpickr","MisReportBreadCrum","getDayDiff","getDaysCount","ProductTradePriceChangeHistory","fields","salesOfficerId","startDate","endDate","report","inputs","setInputs","producCategoryTree","setProductCategoryTree","selectedCompany","state","auth","company","userLoginId","user","userId","intl","locationTree","setLocationTree","accountingYearId","setAccountingYearId","locationId","setLocationId","productCategoryId","setProductCategoryId","salesOfficer","setSalesOfficer","salesOfficerValue","setSalesOfficerValue","searchParams","companyId","selectedLocation","setSelectedLocation","totalQuantity","totlaSalesAmount","total","setTotal","salesDataList","setProductTradePriceChangeHistoryList","history","anchorEl","setAnchorEl","singleAll","setSingleAll","handleClick","event","currentTarget","open","Boolean","id","undefined","getProductCategoryTreeList","params","URL","process","env","REACT_APP_API_URL","get","then","response","data","childProductCategoryDtoList","catch","err","selectTreeNode","node","getId","document","getElementById","getElements","getElementsByClassName","i","length","classList","remove","add","getSalesOfficerListByLocation","console","log","handleChange","name","target","value","values","validate","previewProductTradePriceChangeHistory","queryString","parseInt","responseType","url","window","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","removeChild","borderRight","borderBottom","width","height","textAlign","marginLeft","color","format","dateFormat","Date","e"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/ProductTradePriceChangeHistory.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport ProductCategoryTreeView from '../../../SalesCollection/CommonComponents/ProductCategoryTreeView';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport {getDayDiff, getDaysCount} from \"../../../Util\"\n\n\nexport default function ProductTradePriceChangeHistory() {\n\n    const fields = {\n        salesOfficerId: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        report:\"\"\n        \n        \n    };\n\n    const [inputs, setInputs] = useState(fields);\n    const [producCategoryTree, setProductCategoryTree] = useState([]);\n    const selectedCompany = useSelector((state) => state.auth.company, shallowEqual);\n    const userLoginId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const intl = useIntl();\n    const [locationTree, setLocationTree] = useState([]);\n    //const [company, setCompany] = useState([]);\n    const [accountingYearId, setAccountingYearId] = useState('');\n    const [locationId, setLocationId] = useState('');\n    //const [childCategoryList, setChildCategoryList] = useState([]);\n    const [productCategoryId, setProductCategoryId] = useState('');\n    // const [allAccountingYear, setAllAccountingYear] = useState([]);\n    // const [categoryName, setCategoryName] = useState('All');\n    const [salesOfficer, setSalesOfficer] = useState([]);\n    // const [inputs, setInputs] = useState({});\n    const [salesOfficerValue, setSalesOfficerValue] = useState(null);\n    \n  \n    \n    const searchParams = useMemo(() => {\n        return {\n            userLoginId: userLoginId, companyId: selectedCompany, accountingYearId: accountingYearId\n            , locationId: locationId, productCategoryId: productCategoryId\n        }\n    }, [userLoginId, selectedCompany, accountingYearId, locationId, productCategoryId]);\n\n    const [selectedLocation, setSelectedLocation] = useState({});\n    const [total, setTotal] = useState({ totalQuantity: 0, totlaSalesAmount: 0 });\n    const [salesDataList, setProductTradePriceChangeHistoryList] = useState([]);\n\n    let history = useHistory();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    let [singleAll, setSingleAll] = React.useState([]);\n\n    const handleClick = (event) => {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popper' : undefined;\n    // useEffect(() => {\n    //     // document.getElementById('pills-inventory-stock-report-tab').classList.add('active')\n    //     // document.getElementById('pills-inventory-stock-sales-collection-report-tab').classList.add('active')\n    // }, []);\n\n    useEffect(() => {\n        getProductCategoryTreeList(selectedCompany);\n    }, [userLoginId, selectedCompany]);\n\n   \n    const getProductCategoryTreeList = (params) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/product-category/list-info/` + params;\n        axios.get(URL).then(response => {\n            setProductCategoryTree(response.data.data.childProductCategoryDtoList);\n        }).catch(err => {\n            showError(\"Can not get product category tree data.\");\n        });\n    }\n\n    const selectTreeNode = (node) => {\n        let id = \"summary-id-\"+node.id;\n        const getId = document.getElementById(id);\n        const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n        \n        for (var i = 0; i < getElements.length; i++) {\n            getElements[i].classList.remove('tree-nav-item');\n        }\n        if (getId) {\n            getId.classList.add('tree-nav-item');\n            setProductCategoryId(node); \n            \n        }\n         \n    }\n\n    const getSalesOfficerListByLocation = (locationId, companyId) => {\n        const URL = `${process.env.REACT_APP_API_URL}/auth/get-sales-officer-location/${locationId}/${companyId}`;\n        axios.get(URL).then(response => {\n            if (response.data.data != undefined) {\n                console.log(response.data.data)\n                setSalesOfficer(response.data.data);\n            }\n        }).catch(err => {\n            showError(\"Cannot get Company data.\");\n        });\n    }\n\n       const handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setInputs(values => ({ ...values, [name]: value }))\n    }\n\n    const validate = () => {\n\n        if (!inputs.salesOfficerId) {\n            showError('Sales Officer Name is required.');\n            return false;\n        }\n\n        else if(!inputs.startDate){\n            showError(\"Start date  is required\");\n        }\n        else if(!inputs.endDate ){\n            showError(\"End date is required\");\n        }\n\n        else if(inputs.endDate<inputs.startDate){\n            showError(\"End Date should be greater than Start Date.\");\n            return false;  \n        }\n\n        else if (!inputs.report) {\n            showError('Report is required.');\n            return false;\n        }\n        return true;\n    }\n\n\n    const previewProductTradePriceChangeHistory = () =>{\n        if(!validate()){\n            return false;\n        }\n        let queryString = '?';\n        //queryString += 'depotId=' + parseInt(inputs.depotId);\n        //queryString += '&companyId=' + companyId;\n        //queryString += '&storeId=' + parseInt(inputs.storeId);\n\n        queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n        queryString += '&startDate=' + inputs.startDate;\n        queryString += '&endDate=' + inputs.endDate;\n\n        const URL = `${process.env.REACT_APP_API_URL}/api/reports/stock-valuation`+queryString;\n        axios.get(URL, {responseType: 'blob'}).then(response => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', \"salesAndCollection.pdf\");\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n\n        }).catch(err => {\n            showError();\n        });\n        \n    }\n    console.log(inputs)\n    return (\n        <>\n        <div>\n        <MisReportBreadCrum menuTitle=\"Product Trade Price History\"/>\n        </div>\n            <div>\n                {/* BREAD CRUM ROW */}\n                {/* <InventoryBreadCrum /> */}\n                {/* TODAY SALE ROW */}\n                {/* <InventoryStockHeader showStockData={true} /> */}\n                {/* <ReportsSubTabsHeader /> */}\n            </div>\n            <div>\n                <Card>\n                    <CardBody>\n                        <div className='row'>\n                            {/* LEFT SIDE TREE ROW */}\n                            <div className='col-xl-3' style={{ borderRight: \"1px solid #F2F2F2\" }}>\n                                <div style={{ borderBottom: \"1px solid #F2F2F2\" }}>\n                                    <label>\n                                        <img src={toAbsoluteUrl(\"/images/loc3.png\")}\n                                            style={{ width: \"20px\", height: \"20px\", textAlign: \"center\" }}\n                                            alt='Company Picture' />\n\n                                        <strong style={{\n                                                marginLeft: \"10px\",\n                                                color: \"#828282\"\n                                            }}>Product Category (All)</strong>\n                                    </label>\n                                </div>\n                                {/* TREE */}\n                                <ProductCategoryTreeView\n                                            tree={producCategoryTree}\n                                            selectProductCategoryTreeNode={selectTreeNode}\n                                        />\n                            </div>\n                            {/* RIGHT SIDE LIST ROW */}\n                            <div className='col-xl-9'>\n                                <div className='mt-5 row'>\n                                    {/* <div className='col-xl-8'>\n                                        <div style={{ marginTop: \"5px\" }}>\n                                            <label className='level-title'>Category</label><br />\n                                            <Autocomplete\n                                                name=\"salesOfficerId\"\n                                                options={salesOfficer}\n                                                onKeyDown={getSalesOfficerListByLocation}\n                                                getOptionLabel={(option) => option.salesOfficerName}\n                                                value={salesOfficerValue}\n                                                onChange={(event, newValue) => {\n                                                    setSalesOfficerValue(newValue)\n                                                    if (newValue !== null) {\n                                                        setInputs({ ...inputs, salesOfficerId: newValue.id });\n                                                    }\n                                                }}\n                                                renderInput={(params) => (\n                                                    <TextField {...params} label=\"Category*\" />\n                                                )}\n                                            />\n                                        </div>\n                                    </div> */}\n                                </div>\n\n                        <div className='row'>\n                        <div className='form-group col-lg-8 first-level-top'>\n                        <label className='level-title'>Start Date<i style={{ color: \"red\" }}>*</i></label>\n                            <Flatpickr className=\"form-control\" id=\"startDate\" placeholder=\"dd-MM-yy\"\n                            name='startDate'\n                            value={inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                            options={{dateFormat: \"d-M-Y\"}}\n                            onChange={(value) => {\n                            setInputs({\n                                ...inputs,\"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                            })\n                            \n                            }}\n                            />\n                        </div>\n                    </div>\n\n\n                        <div className='row'>\n                            <div className='form-group col-lg-8 first-level-top'>\n                                <label className='level-title'>End Date<i style={{ color: \"red\" }}>*</i></label>\n                                    <Flatpickr className=\"form-control\" id=\"endDate\" placeholder=\"dd-MM-yy\"\n                                    name='endDate'\n                                    value={inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                    options={{dateFormat: \"d-M-Y\"}} required\n                                    onChange={(value) => {\n                                        setInputs({\n                                            ...inputs,\"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                        })\n                                    }}\n                                     />  \n                            </div>\n                        </div>\n\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span className=\"mr-1\">Report</span><span className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportId\" name=\"report\"\n                                            onChange={(e)=>handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report</option>\n                                                <option value=\"1\">Pdf</option>\n                                                <option value=\"2\">Excel</option>\n\n                                                {/* {\n                                                allReport.map((report)=>(\n                                                <option key={report.id} value={report.id}>\n                                                    {report.name}\n                                                </option> \n                                                ))\n                                            }    */}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <Button className=\"float-right mt-5\" id=\"gotItBtn\" variant=\"contained\"\n                                    color=\"primary\"\n                                onClick={previewProductTradePriceChangeHistory}\n                                >\n                                    Submit\n                                </Button>\n                            </div>\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}