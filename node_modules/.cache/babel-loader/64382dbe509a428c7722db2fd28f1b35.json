{"ast":null,"code":"import _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/GoogleMaterialExamples/data-displays/TablesExamplesPage.js\",\n    _this2 = this;\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, lighten, withStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, Checkbox, Toolbar, Typography, Tooltip, IconButton, TableSortLabel, TablePagination, Switch, FormControlLabel, TableFooter } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\";\nvar useStyles1 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n      overflowX: \"auto\"\n    },\n    table: {\n      minWidth: 650\n    }\n  };\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nvar rows = [createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0), createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3), createData(\"Eclair\", 262, 16.0, 24, 6.0), createData(\"Cupcake\", 305, 3.7, 67, 4.3), createData(\"Gingerbread\", 356, 16.0, 49, 3.9)]; // Example 2\n\nvar useStyles2 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\"\n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      width: \"100%\",\n      overflowX: \"auto\",\n      marginBottom: theme.spacing(2)\n    },\n    table: {\n      minWidth: 650\n    }\n  };\n}); // Example 3\n\nfunction desc3(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort3(array, cmp) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? function (a, b) {\n    return desc3(a, b, orderBy);\n  } : function (a, b) {\n    return -desc3(a, b, orderBy);\n  };\n}\n\nvar headRows3 = [{\n  id: \"name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Dessert (100g serving)\"\n}, {\n  id: \"calories\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Calories\"\n}, {\n  id: \"fat\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Fat (g)\"\n}, {\n  id: \"carbs\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Carbs (g)\"\n}, {\n  id: \"protein\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Protein (g)\"\n}];\n\nfunction EnhancedTableHead3(props) {\n  var _this = this;\n\n  var onSelectAllClick = props.onSelectAllClick,\n      order = props.order,\n      orderBy = props.orderBy,\n      numSelected = props.numSelected,\n      rowCount = props.rowCount,\n      onRequestSort = props.onRequestSort;\n\n  var createSortHandler = function createSortHandler(property) {\n    return function (event) {\n      onRequestSort(event, property);\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      \"aria-label\": \"Select all desserts\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), headRows3.map(function (row) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: row.id,\n      align: row.numeric ? \"right\" : \"left\",\n      padding: row.disablePadding ? \"none\" : \"default\",\n      sortDirection: orderBy === row.id ? order : false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableSortLabel, {\n      active: orderBy === row.id,\n      direction: order,\n      onClick: createSortHandler(row.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, row.label));\n  })));\n}\n\nEnhancedTableHead3.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nvar useToolbarStyles3 = makeStyles(function (theme) {\n  return {\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1)\n    },\n    highlight: theme.palette.type === \"light\" ? {\n      color: theme.palette.secondary.main,\n      backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    } : {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    spacer: {\n      flex: \"1 1 100%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      flex: \"0 0 auto\"\n    }\n  };\n});\n\nvar EnhancedTableToolbar3 = function EnhancedTableToolbar3(props) {\n  var classes = useToolbarStyles3();\n  var numSelected = props.numSelected;\n  return /*#__PURE__*/React.createElement(Toolbar, {\n    className: clsx(classes.root, _defineProperty({}, classes.highlight, numSelected > 0)),\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.title,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, numSelected > 0 ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, numSelected, \" selected\") : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Nutrition\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, numSelected > 0 ? /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Delete\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"Filter list\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FilterListIcon, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  })))));\n};\n\nEnhancedTableToolbar3.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nvar useStyles3 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3)\n    },\n    paper: {\n      width: \"100%\",\n      marginBottom: theme.spacing(2)\n    },\n    table: {\n      minWidth: 750\n    },\n    tableWrapper: {\n      overflowX: \"auto\"\n    }\n  };\n}); // Example 4\n\nvar useStyles4 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n      overflowX: \"auto\"\n    },\n    table: {\n      minWidth: 700\n    }\n  };\n});\nvar StyledTableCell4 = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\nvar StyledTableRow4 = withStyles(function (theme) {\n  return {\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  };\n})(TableRow); // Example 5\n\nvar useStyles52 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3)\n    },\n    table: {\n      minWidth: 500\n    },\n    tableWrapper: {\n      overflowX: \"auto\"\n    }\n  };\n});\nvar useStyles51 = makeStyles(function (theme) {\n  return {\n    root: {\n      flexShrink: 0,\n      color: theme.palette.text.secondary,\n      marginLeft: theme.spacing(2.5)\n    }\n  };\n});\n\nfunction TablePaginationActions5(props) {\n  var classes = useStyles51();\n  var theme = useTheme();\n  var count = props.count,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      onChangePage = props.onChangePage;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"First Page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }\n  }, theme.direction === \"rtl\" ? /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"Previous Page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }\n  }, theme.direction === \"rtl\" ? /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"Next Page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }\n  }, theme.direction === \"rtl\" ? /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"Last Page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }\n  }, theme.direction === \"rtl\" ? /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 58\n    }\n  })));\n}\n\nTablePaginationActions5.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction createData5(name, calories, fat) {\n  return {\n    name: name,\n    calories: calories,\n    fat: fat\n  };\n}\n\nvar rows5 = [createData5(\"Cupcake\", 305, 3.7), createData5(\"Donut\", 452, 25.0), createData5(\"Eclair\", 262, 16.0), createData5(\"Frozen yoghurt\", 159, 6.0), createData5(\"Gingerbread\", 356, 16.0), createData5(\"Honeycomb\", 408, 3.2), createData5(\"Ice cream sandwich\", 237, 9.0), createData5(\"Jelly Bean\", 375, 0.0), createData5(\"KitKat\", 518, 26.0), createData5(\"Lollipop\", 392, 0.2), createData5(\"Marshmallow\", 318, 0), createData5(\"Nougat\", 360, 19.0), createData5(\"Oreo\", 437, 18.0)].sort(function (a, b) {\n  return a.calories < b.calories ? -1 : 1;\n}); // Example 6\n\nvar TAX_RATE = 0.07;\nvar useStyles6 = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n      overflowX: \"auto\"\n    },\n    table: {\n      minWidth: 700\n    }\n  };\n});\n\nfunction ccyFormat6(num) {\n  return \"\".concat(num.toFixed(2));\n}\n\nfunction priceRow6(qty, unit) {\n  return qty * unit;\n}\n\nfunction createRow6(desc, qty, unit) {\n  var price = priceRow6(qty, unit);\n  return {\n    desc: desc,\n    qty: qty,\n    unit: unit,\n    price: price\n  };\n}\n\nfunction subtotal6(items) {\n  return items.map(function (_ref) {\n    var price = _ref.price;\n    return price;\n  }).reduce(function (sum, i) {\n    return sum + i;\n  }, 0);\n}\n\nvar rows6 = [createRow6(\"Paperclips (Box)\", 100, 1.15), createRow6(\"Paper (Case)\", 10, 45.99), createRow6(\"Waste Basket\", 2, 17.99)];\nvar invoiceSubtotal6 = subtotal6(rows6);\nvar invoiceTaxes6 = TAX_RATE * invoiceSubtotal6;\nvar invoiceTotal6 = invoiceTaxes6 + invoiceSubtotal6;\nexport default function TablesExamplesPage() {\n  var _this3 = this;\n\n  // Example 1\n  var classes1 = useStyles1(); // Example 2\n\n  var classes2 = useStyles2(); // Example 3\n\n  var classes3 = useStyles3();\n\n  var _React$useState = React.useState(\"asc\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      order3 = _React$useState2[0],\n      setOrder3 = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"calories\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      orderBy3 = _React$useState4[0],\n      setOrderBy3 = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      selected3 = _React$useState6[0],\n      setSelected3 = _React$useState6[1];\n\n  var _React$useState7 = React.useState(0),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      page3 = _React$useState8[0],\n      setPage3 = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      dense3 = _React$useState10[0],\n      setDense3 = _React$useState10[1];\n\n  var _React$useState11 = React.useState(5),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      rowsPerPage3 = _React$useState12[0],\n      setRowsPerPage3 = _React$useState12[1];\n\n  function handleRequestSort3(event, property) {\n    var isDesc = orderBy3 === property && order3 === \"desc\";\n    setOrder3(isDesc ? \"asc\" : \"desc\");\n    setOrderBy3(property);\n  }\n\n  function handleSelectAllClick3(event) {\n    if (event.target.checked) {\n      var newSelecteds = rows.map(function (n) {\n        return n.name;\n      });\n      setSelected3(newSelecteds);\n      return;\n    }\n\n    setSelected3([]);\n  }\n\n  function handleClick3(event, name) {\n    var selectedIndex = selected3.indexOf(name);\n    var newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected3, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected3.slice(1));\n    } else if (selectedIndex === selected3.length - 1) {\n      newSelected = newSelected.concat(selected3.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected3.slice(0, selectedIndex), selected3.slice(selectedIndex + 1));\n    }\n\n    setSelected3(newSelected);\n  }\n\n  function handleChangePage3(event, newPage) {\n    setPage3(newPage);\n  }\n\n  function handleChangeRowsPerPage3(event) {\n    setRowsPerPage3(+event.target.value);\n  }\n\n  function handleChangeDense3(event) {\n    setDense3(event.target.checked);\n  }\n\n  var isSelected3 = function isSelected3(name) {\n    return selected3.indexOf(name) !== -1;\n  };\n\n  var emptyRows3 = rowsPerPage3 - Math.min(rowsPerPage3, rows.length - page3 * rowsPerPage3); // Example 4\n\n  var classes4 = useStyles4(); // Example 5\n\n  var classes5 = useStyles52();\n\n  var _React$useState13 = React.useState(0),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      page5 = _React$useState14[0],\n      setPage5 = _React$useState14[1];\n\n  var _React$useState15 = React.useState(5),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      rowsPerPage5 = _React$useState16[0],\n      setRowsPerPage5 = _React$useState16[1];\n\n  var emptyRows5 = rowsPerPage5 - Math.min(rowsPerPage5, rows5.length - page5 * rowsPerPage5);\n\n  function handleChangePage5(event, newPage) {\n    setPage5(newPage);\n  }\n\n  function handleChangeRowsPerPage5(event) {\n    setRowsPerPage5(parseInt(event.target.value, 10));\n  } // Example 6\n\n\n  var classes6 = useStyles6();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }\n  }, \"Data tables display sets of data. They can be fully customized.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/tables/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Simple Table\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 13\n    }\n  }, \"A simple example with no frills.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes1.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes1.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 21\n    }\n  }, \"Dessert (100g serving)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 21\n    }\n  }, \"Calories\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 21\n    }\n  }, \"Fat\\xA0(g)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 21\n    }\n  }, \"Carbs\\xA0(g)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 21\n    }\n  }, \"Protein\\xA0(g)\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 17\n    }\n  }, rows.map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.name,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 23\n      }\n    }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 23\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 23\n      }\n    }, row.fat), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 23\n      }\n    }, row.carbs), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 23\n      }\n    }, row.protein));\n  }))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode3,\n    beforeCodeTitle: \"Sorting & Selecting\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 13\n    }\n  }, \"This example demonstrates the use of \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 52\n    }\n  }, \"Checkbox\"), \" and clickable rows for selection, with a custom \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 59\n    }\n  }, \"Toolbar\"), \". It uses the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 27\n    }\n  }, \"TableSortLabel\"), \" component to help style column headings.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes3.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes3.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableToolbar3, {\n    numSelected: selected3.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes3.tableWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes3.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense3 ? \"small\" : \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableHead3, {\n    numSelected: selected3.length,\n    order: order3,\n    orderBy: orderBy3,\n    onSelectAllClick: handleSelectAllClick3,\n    onRequestSort: handleRequestSort3,\n    rowCount: rows.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 21\n    }\n  }, stableSort3(rows, getSorting(order3, orderBy3)).slice(page3 * rowsPerPage3, page3 * rowsPerPage3 + rowsPerPage3).map(function (row, index) {\n    var isItemSelected = isSelected3(row.name);\n    var labelId = \"enhanced-table-checkbox-\".concat(index);\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      onClick: function onClick(event) {\n        return handleClick3(event, row.name);\n      },\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.name,\n      selected: isItemSelected,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isItemSelected,\n      inputProps: {\n        \"aria-labelledby\": labelId\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 31\n      }\n    }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 31\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 31\n      }\n    }, row.fat), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 31\n      }\n    }, row.carbs), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 31\n      }\n    }, row.protein));\n  }), emptyRows3 > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 49 * emptyRows3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 27\n    }\n  }))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage3,\n    page: page3,\n    backIconButtonProps: {\n      \"aria-label\": \"Previous Page\"\n    },\n    nextIconButtonProps: {\n      \"aria-label\": \"Next Page\"\n    },\n    onChangePage: handleChangePage3,\n    onChangeRowsPerPage: handleChangeRowsPerPage3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: dense3,\n      onChange: handleChangeDense3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 19\n      }\n    }),\n    label: \"Dense padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode5,\n    beforeCodeTitle: \"Custom Table Pagination Action\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 13\n    }\n  }, \"The \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 19\n    }\n  }, \"Action\"), \" property of the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 15\n    }\n  }, \"TablePagination\"), \" component allows the implementation of custom actions.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes5.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes5.tableWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes5.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 19\n    }\n  }, rows5.slice(page5 * rowsPerPage5, page5 * rowsPerPage5 + rowsPerPage5).map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.name,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 27\n      }\n    }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 27\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 27\n      }\n    }, row.fat));\n  }), emptyRows5 > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 48 * emptyRows5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    colSpan: 3,\n    count: rows5.length,\n    rowsPerPage: rowsPerPage5,\n    page: page5,\n    SelectProps: {\n      inputProps: {\n        \"aria-label\": \"Rows per page\"\n      },\n      native: true\n    },\n    onChangePage: handleChangePage5,\n    onChangeRowsPerPage: handleChangeRowsPerPage5,\n    ActionsComponent: TablePaginationActions5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 23\n    }\n  })))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Dense Table\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 13\n    }\n  }, \"A simple example of a dense table with no frills.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes2.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes2.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes2.table,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 23\n    }\n  }, \"Dessert (100g serving)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 23\n    }\n  }, \"Calories\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 23\n    }\n  }, \"Fat\\xA0(g)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 23\n    }\n  }, \"Carbs\\xA0(g)\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 23\n    }\n  }, \"Protein\\xA0(g)\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 19\n    }\n  }, rows.map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.name,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 25\n      }\n    }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 25\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 25\n      }\n    }, row.fat), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 25\n      }\n    }, row.carbs), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 25\n      }\n    }, row.protein));\n  })))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode4,\n    beforeCodeTitle: \"Customized tables\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 13\n    }\n  }, \"Here is an example of customizing the component.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes4.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes4.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell4, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 21\n    }\n  }, \"Dessert (100g serving)\"), /*#__PURE__*/React.createElement(StyledTableCell4, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 21\n    }\n  }, \"Calories\"), /*#__PURE__*/React.createElement(StyledTableCell4, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 21\n    }\n  }, \"Fat\\xA0(g)\"), /*#__PURE__*/React.createElement(StyledTableCell4, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 21\n    }\n  }, \"Carbs\\xA0(g)\"), /*#__PURE__*/React.createElement(StyledTableCell4, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 21\n    }\n  }, \"Protein\\xA0(g)\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 17\n    }\n  }, rows.map(function (row) {\n    return /*#__PURE__*/React.createElement(StyledTableRow4, {\n      key: row.name,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell4, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 23\n      }\n    }, row.name), /*#__PURE__*/React.createElement(StyledTableCell4, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 23\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(StyledTableCell4, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 23\n      }\n    }, row.fat), /*#__PURE__*/React.createElement(StyledTableCell4, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 23\n      }\n    }, row.carbs), /*#__PURE__*/React.createElement(StyledTableCell4, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 23\n      }\n    }, row.protein));\n  }))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode6,\n    beforeCodeTitle: \"Spanning Table\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 13\n    }\n  }, \"A simple example with spanning rows & columns.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes6.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes6.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 21\n    }\n  }, \"Desc\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 21\n    }\n  }, \"Qty.\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 21\n    }\n  }, \"@\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 21\n    }\n  }, \"Price\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 17\n    }\n  }, rows6.map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.desc,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 23\n      }\n    }, row.desc), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 23\n      }\n    }, row.qty), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 23\n      }\n    }, row.unit), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 23\n      }\n    }, ccyFormat6(row.price)));\n  }), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 869,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    rowSpan: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 21\n    }\n  }, \"Subtotal\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 21\n    }\n  }, ccyFormat6(invoiceSubtotal6))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 21\n    }\n  }, \"Tax\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 21\n    }\n  }, \"\".concat((TAX_RATE * 100).toFixed(0), \" %\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 21\n    }\n  }, ccyFormat6(invoiceTaxes6))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 21\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 21\n    }\n  }, ccyFormat6(invoiceTotal6))))))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Table from '@material-ui/core/Table';\\nimport TableBody from '@material-ui/core/TableBody';\\nimport TableCell from '@material-ui/core/TableCell';\\nimport TableHead from '@material-ui/core/TableHead';\\nimport TableRow from '@material-ui/core/TableRow';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    marginTop: theme.spacing(3),\\n    overflowX: 'auto',\\n  },\\n  table: {\\n    minWidth: 650,\\n  },\\n}));\\n\\nfunction createData(name, calories, fat, carbs, protein) {\\n  return { name, calories, fat, carbs, protein };\\n}\\n\\nconst rows = [\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\\n  createData('Eclair', 262, 16.0, 24, 6.0),\\n  createData('Cupcake', 305, 3.7, 67, 4.3),\\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\\n];\\n\\nexport default function SimpleTable() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Paper className={classes.root}>\\n      <Table className={classes.table}>\\n        <TableHead>\\n          <TableRow>\\n            <TableCell>Dessert (100g serving)</TableCell>\\n            <TableCell align=\\\"right\\\">Calories</TableCell>\\n            <TableCell align=\\\"right\\\">Fat&nbsp;(g)</TableCell>\\n            <TableCell align=\\\"right\\\">Carbs&nbsp;(g)</TableCell>\\n            <TableCell align=\\\"right\\\">Protein&nbsp;(g)</TableCell>\\n          </TableRow>\\n        </TableHead>\\n        <TableBody>\\n          {rows.map(row => (\\n            <TableRow key={row.name}>\\n              <TableCell component=\\\"th\\\" scope=\\\"row\\\">\\n                {row.name}\\n              </TableCell>\\n              <TableCell align=\\\"right\\\">{row.calories}</TableCell>\\n              <TableCell align=\\\"right\\\">{row.fat}</TableCell>\\n              <TableCell align=\\\"right\\\">{row.carbs}</TableCell>\\n              <TableCell align=\\\"right\\\">{row.protein}</TableCell>\\n            </TableRow>\\n          ))}\\n        </TableBody>\\n      </Table>\\n    </Paper>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Table from '@material-ui/core/Table';\\nimport TableBody from '@material-ui/core/TableBody';\\nimport TableCell from '@material-ui/core/TableCell';\\nimport TableHead from '@material-ui/core/TableHead';\\nimport TableRow from '@material-ui/core/TableRow';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n  },\\n  paper: {\\n    marginTop: theme.spacing(3),\\n    width: '100%',\\n    overflowX: 'auto',\\n    marginBottom: theme.spacing(2),\\n  },\\n  table: {\\n    minWidth: 650,\\n  },\\n}));\\n\\nfunction createData(name, calories, fat, carbs, protein) {\\n  return { name, calories, fat, carbs, protein };\\n}\\n\\nconst rows = [\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\\n  createData('Eclair', 262, 16.0, 24, 6.0),\\n  createData('Cupcake', 305, 3.7, 67, 4.3),\\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\\n];\\n\\nexport default function DenseTable() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Paper className={classes.paper}>\\n        <Table className={classes.table} size=\\\"small\\\">\\n          <TableHead>\\n            <TableRow>\\n              <TableCell>Dessert (100g serving)</TableCell>\\n              <TableCell align=\\\"right\\\">Calories</TableCell>\\n              <TableCell align=\\\"right\\\">Fat&nbsp;(g)</TableCell>\\n              <TableCell align=\\\"right\\\">Carbs&nbsp;(g)</TableCell>\\n              <TableCell align=\\\"right\\\">Protein&nbsp;(g)</TableCell>\\n            </TableRow>\\n          </TableHead>\\n          <TableBody>\\n            {rows.map(row => (\\n              <TableRow key={row.name}>\\n                <TableCell component=\\\"th\\\" scope=\\\"row\\\">\\n                  {row.name}\\n                </TableCell>\\n                <TableCell align=\\\"right\\\">{row.calories}</TableCell>\\n                <TableCell align=\\\"right\\\">{row.fat}</TableCell>\\n                <TableCell align=\\\"right\\\">{row.carbs}</TableCell>\\n                <TableCell align=\\\"right\\\">{row.protein}</TableCell>\\n              </TableRow>\\n            ))}\\n          </TableBody>\\n        </Table>\\n      </Paper>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode3 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport PropTypes from 'prop-types';\\nimport { lighten, makeStyles } from '@material-ui/core/styles';\\nimport Table from '@material-ui/core/Table';\\nimport TableBody from '@material-ui/core/TableBody';\\nimport TableCell from '@material-ui/core/TableCell';\\nimport TableHead from '@material-ui/core/TableHead';\\nimport TablePagination from '@material-ui/core/TablePagination';\\nimport TableRow from '@material-ui/core/TableRow';\\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\\nimport Toolbar from '@material-ui/core/Toolbar';\\nimport Typography from '@material-ui/core/Typography';\\nimport Paper from '@material-ui/core/Paper';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Tooltip from '@material-ui/core/Tooltip';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\nimport DeleteIcon from '@material-ui/icons/Delete';\\nimport FilterListIcon from '@material-ui/icons/FilterList';\\n\\nfunction createData(name, calories, fat, carbs, protein) {\\n  return { name, calories, fat, carbs, protein };\\n}\\n\\nconst rows = [\\n  createData('Cupcake', 305, 3.7, 67, 4.3),\\n  createData('Donut', 452, 25.0, 51, 4.9),\\n  createData('Eclair', 262, 16.0, 24, 6.0),\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\\n  createData('KitKat', 518, 26.0, 65, 7.0),\\n  createData('Lollipop', 392, 0.2, 98, 0.0),\\n  createData('Marshmallow', 318, 0, 81, 2.0),\\n  createData('Nougat', 360, 19.0, 9, 37.0),\\n  createData('Oreo', 437, 18.0, 63, 4.0),\\n];\\n\\nfunction desc(a, b, orderBy) {\\n  if (b[orderBy] < a[orderBy]) {\\n    return -1;\\n  }\\n  if (b[orderBy] > a[orderBy]) {\\n    return 1;\\n  }\\n  return 0;\\n}\\n\\nfunction stableSort(array, cmp) {\\n  const stabilizedThis = array.map((el, index) => [el, index]);\\n  stabilizedThis.sort((a, b) => {\\n    const order = cmp(a[0], b[0]);\\n    if (order !== 0) return order;\\n    return a[1] - b[1];\\n  });\\n  return stabilizedThis.map(el => el[0]);\\n}\\n\\nfunction getSorting(order, orderBy) {\\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\\n}\\n\\nconst headRows = [\\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\\n];\\n\\nfunction EnhancedTableHead(props) {\\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\\n  const createSortHandler = property => event => {\\n    onRequestSort(event, property);\\n  };\\n\\n  return (\\n    <TableHead>\\n      <TableRow>\\n        <TableCell padding=\\\"checkbox\\\">\\n          <Checkbox\\n            indeterminate={numSelected > 0 && numSelected < rowCount}\\n            checked={numSelected === rowCount}\\n            onChange={onSelectAllClick}\\n            inputProps={{ 'aria-label': 'Select all desserts' }}\\n          />\\n        </TableCell>\\n        {headRows.map(row => (\\n          <TableCell\\n            key={row.id}\\n            align={row.numeric ? 'right' : 'left'}\\n            padding={row.disablePadding ? 'none' : 'default'}\\n            sortDirection={orderBy === row.id ? order : false}\\n          >\\n            <TableSortLabel\\n              active={orderBy === row.id}\\n              direction={order}\\n              onClick={createSortHandler(row.id)}\\n            >\\n              {row.label}\\n            </TableSortLabel>\\n          </TableCell>\\n        ))}\\n      </TableRow>\\n    </TableHead>\\n  );\\n}\\n\\nEnhancedTableHead.propTypes = {\\n  numSelected: PropTypes.number.isRequired,\\n  onRequestSort: PropTypes.func.isRequired,\\n  onSelectAllClick: PropTypes.func.isRequired,\\n  order: PropTypes.string.isRequired,\\n  orderBy: PropTypes.string.isRequired,\\n  rowCount: PropTypes.number.isRequired,\\n};\\n\\nconst useToolbarStyles = makeStyles(theme => ({\\n  root: {\\n    paddingLeft: theme.spacing(2),\\n    paddingRight: theme.spacing(1),\\n  },\\n  highlight:\\n    theme.palette.type === 'light'\\n      ? {\\n          color: theme.palette.secondary.main,\\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\\n        }\\n      : {\\n          color: theme.palette.text.primary,\\n          backgroundColor: theme.palette.secondary.dark,\\n        },\\n  spacer: {\\n    flex: '1 1 100%',\\n  },\\n  actions: {\\n    color: theme.palette.text.secondary,\\n  },\\n  title: {\\n    flex: '0 0 auto',\\n  },\\n}));\\n\\nconst EnhancedTableToolbar = props => {\\n  const classes = useToolbarStyles();\\n  const { numSelected } = props;\\n\\n  return (\\n    <Toolbar\\n      className={clsx(classes.root, {\\n        [classes.highlight]: numSelected > 0,\\n      })}\\n    >\\n      <div className={classes.title}>\\n        {numSelected > 0 ? (\\n          <Typography color=\\\"inherit\\\" variant=\\\"subtitle1\\\">\\n            {numSelected} selected\\n          </Typography>\\n        ) : (\\n          <Typography variant=\\\"h6\\\" id=\\\"tableTitle\\\">\\n            Nutrition\\n          </Typography>\\n        )}\\n      </div>\\n      <div className={classes.spacer} />\\n      <div className={classes.actions}>\\n        {numSelected > 0 ? (\\n          <Tooltip title=\\\"Delete\\\">\\n            <IconButton aria-label=\\\"Delete\\\">\\n              <DeleteIcon />\\n            </IconButton>\\n          </Tooltip>\\n        ) : (\\n          <Tooltip title=\\\"Filter list\\\">\\n            <IconButton aria-label=\\\"Filter list\\\">\\n              <FilterListIcon />\\n            </IconButton>\\n          </Tooltip>\\n        )}\\n      </div>\\n    </Toolbar>\\n  );\\n};\\n\\nEnhancedTableToolbar.propTypes = {\\n  numSelected: PropTypes.number.isRequired,\\n};\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    marginTop: theme.spacing(3),\\n  },\\n  paper: {\\n    width: '100%',\\n    marginBottom: theme.spacing(2),\\n  },\\n  table: {\\n    minWidth: 750,\\n  },\\n  tableWrapper: {\\n    overflowX: 'auto',\\n  },\\n}));\\n\\nexport default function EnhancedTable() {\\n  const classes = useStyles();\\n  const [order, setOrder] = React.useState('asc');\\n  const [orderBy, setOrderBy] = React.useState('calories');\\n  const [selected, setSelected] = React.useState([]);\\n  const [page, setPage] = React.useState(0);\\n  const [dense, setDense] = React.useState(false);\\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\\n\\n  function handleRequestSort(event, property) {\\n    const isDesc = orderBy === property && order === 'desc';\\n    setOrder(isDesc ? 'asc' : 'desc');\\n    setOrderBy(property);\\n  }\\n\\n  function handleSelectAllClick(event) {\\n    if (event.target.checked) {\\n      const newSelecteds = rows.map(n => n.name);\\n      setSelected(newSelecteds);\\n      return;\\n    }\\n    setSelected([]);\\n  }\\n\\n  function handleClick(event, name) {\\n    const selectedIndex = selected.indexOf(name);\\n    let newSelected = [];\\n\\n    if (selectedIndex === -1) {\\n      newSelected = newSelected.concat(selected, name);\\n    } else if (selectedIndex === 0) {\\n      newSelected = newSelected.concat(selected.slice(1));\\n    } else if (selectedIndex === selected.length - 1) {\\n      newSelected = newSelected.concat(selected.slice(0, -1));\\n    } else if (selectedIndex > 0) {\\n      newSelected = newSelected.concat(\\n        selected.slice(0, selectedIndex),\\n        selected.slice(selectedIndex + 1),\\n      );\\n    }\\n\\n    setSelected(newSelected);\\n  }\\n\\n  function handleChangePage(event, newPage) {\\n    setPage(newPage);\\n  }\\n\\n  function handleChangeRowsPerPage(event) {\\n    setRowsPerPage(+event.target.value);\\n  }\\n\\n  function handleChangeDense(event) {\\n    setDense(event.target.checked);\\n  }\\n\\n  const isSelected = name => selected.indexOf(name) !== -1;\\n\\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\\n\\n  return (\\n    <div className={classes.root}>\\n      <Paper className={classes.paper}>\\n        <EnhancedTableToolbar numSelected={selected.length} />\\n        <div className={classes.tableWrapper}>\\n          <Table\\n            className={classes.table}\\n            aria-labelledby=\\\"tableTitle\\\"\\n            size={dense ? 'small' : 'medium'}\\n          >\\n            <EnhancedTableHead\\n              numSelected={selected.length}\\n              order={order}\\n              orderBy={orderBy}\\n              onSelectAllClick={handleSelectAllClick}\\n              onRequestSort={handleRequestSort}\\n              rowCount={rows.length}\\n            />\\n            <TableBody>\\n              {stableSort(rows, getSorting(order, orderBy))\\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\\n                .map((row, index) => {\\n                  const isItemSelected = isSelected(row.name);\\n                  const labelId = `enhanced-table-checkbox-${index}`;\\n\\n                  return (\\n                    <TableRow\\n                      hover\\n                      onClick={event => handleClick(event, row.name)}\\n                      role=\\\"checkbox\\\"\\n                      aria-checked={isItemSelected}\\n                      tabIndex={-1}\\n                      key={row.name}\\n                      selected={isItemSelected}\\n                    >\\n                      <TableCell padding=\\\"checkbox\\\">\\n                        <Checkbox\\n                          checked={isItemSelected}\\n                          inputProps={{ 'aria-labelledby': labelId }}\\n                        />\\n                      </TableCell>\\n                      <TableCell component=\\\"th\\\" id={labelId} scope=\\\"row\\\" padding=\\\"none\\\">\\n                        {row.name}\\n                      </TableCell>\\n                      <TableCell align=\\\"right\\\">{row.calories}</TableCell>\\n                      <TableCell align=\\\"right\\\">{row.fat}</TableCell>\\n                      <TableCell align=\\\"right\\\">{row.carbs}</TableCell>\\n                      <TableCell align=\\\"right\\\">{row.protein}</TableCell>\\n                    </TableRow>\\n                  );\\n                })}\\n              {emptyRows > 0 && (\\n                <TableRow style={{ height: 49 * emptyRows }}>\\n                  <TableCell colSpan={6} />\\n                </TableRow>\\n              )}\\n            </TableBody>\\n          </Table>\\n        </div>\\n        <TablePagination\\n          rowsPerPageOptions={[5, 10, 25]}\\n          component=\\\"div\\\"\\n          count={rows.length}\\n          rowsPerPage={rowsPerPage}\\n          page={page}\\n          backIconButtonProps={{\\n            'aria-label': 'Previous Page',\\n          }}\\n          nextIconButtonProps={{\\n            'aria-label': 'Next Page',\\n          }}\\n          onChangePage={handleChangePage}\\n          onChangeRowsPerPage={handleChangeRowsPerPage}\\n        />\\n      </Paper>\\n      <FormControlLabel\\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\\n        label=\\\"Dense padding\\\"\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode4 = \"\\nimport React from 'react';\\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\\nimport Table from '@material-ui/core/Table';\\nimport TableBody from '@material-ui/core/TableBody';\\nimport TableCell from '@material-ui/core/TableCell';\\nimport TableHead from '@material-ui/core/TableHead';\\nimport TableRow from '@material-ui/core/TableRow';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst StyledTableCell = withStyles(theme => ({\\n  head: {\\n    backgroundColor: theme.palette.common.black,\\n    color: theme.palette.common.white,\\n  },\\n  body: {\\n    fontSize: 14,\\n  },\\n}))(TableCell);\\n\\nconst StyledTableRow = withStyles(theme => ({\\n  root: {\\n    '&:nth-of-type(odd)': {\\n      backgroundColor: theme.palette.background.default,\\n    },\\n  },\\n}))(TableRow);\\n\\nfunction createData(name, calories, fat, carbs, protein) {\\n  return { name, calories, fat, carbs, protein };\\n}\\n\\nconst rows = [\\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\\n  createData('Eclair', 262, 16.0, 24, 6.0),\\n  createData('Cupcake', 305, 3.7, 67, 4.3),\\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\\n];\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    marginTop: theme.spacing(3),\\n    overflowX: 'auto',\\n  },\\n  table: {\\n    minWidth: 700,\\n  },\\n}));\\n\\nexport default function CustomizedTables() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Paper className={classes.root}>\\n      <Table className={classes.table}>\\n        <TableHead>\\n          <TableRow>\\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\\n            <StyledTableCell align=\\\"right\\\">Calories</StyledTableCell>\\n            <StyledTableCell align=\\\"right\\\">Fat&nbsp;(g)</StyledTableCell>\\n            <StyledTableCell align=\\\"right\\\">Carbs&nbsp;(g)</StyledTableCell>\\n            <StyledTableCell align=\\\"right\\\">Protein&nbsp;(g)</StyledTableCell>\\n          </TableRow>\\n        </TableHead>\\n        <TableBody>\\n          {rows.map(row => (\\n            <StyledTableRow key={row.name}>\\n              <StyledTableCell component=\\\"th\\\" scope=\\\"row\\\">\\n                {row.name}\\n              </StyledTableCell>\\n              <StyledTableCell align=\\\"right\\\">{row.calories}</StyledTableCell>\\n              <StyledTableCell align=\\\"right\\\">{row.fat}</StyledTableCell>\\n              <StyledTableCell align=\\\"right\\\">{row.carbs}</StyledTableCell>\\n              <StyledTableCell align=\\\"right\\\">{row.protein}</StyledTableCell>\\n            </StyledTableRow>\\n          ))}\\n        </TableBody>\\n      </Table>\\n    </Paper>\\n  );\\n}\\n\";\nvar jsCode5 = \"\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\\nimport Table from '@material-ui/core/Table';\\nimport TableBody from '@material-ui/core/TableBody';\\nimport TableCell from '@material-ui/core/TableCell';\\nimport TableFooter from '@material-ui/core/TableFooter';\\nimport TablePagination from '@material-ui/core/TablePagination';\\nimport TableRow from '@material-ui/core/TableRow';\\nimport Paper from '@material-ui/core/Paper';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\nimport LastPageIcon from '@material-ui/icons/LastPage';\\n\\nconst useStyles1 = makeStyles(theme => ({\\n  root: {\\n    flexShrink: 0,\\n    color: theme.palette.text.secondary,\\n    marginLeft: theme.spacing(2.5),\\n  },\\n}));\\n\\nfunction TablePaginationActions(props) {\\n  const classes = useStyles1();\\n  const theme = useTheme();\\n  const { count, page, rowsPerPage, onChangePage } = props;\\n\\n  function handleFirstPageButtonClick(event) {\\n    onChangePage(event, 0);\\n  }\\n\\n  function handleBackButtonClick(event) {\\n    onChangePage(event, page - 1);\\n  }\\n\\n  function handleNextButtonClick(event) {\\n    onChangePage(event, page + 1);\\n  }\\n\\n  function handleLastPageButtonClick(event) {\\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\\n  }\\n\\n  return (\\n    <div className={classes.root}>\\n      <IconButton\\n        onClick={handleFirstPageButtonClick}\\n        disabled={page === 0}\\n        aria-label=\\\"First Page\\\"\\n      >\\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\\n      </IconButton>\\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\\\"Previous Page\\\">\\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\\n      </IconButton>\\n      <IconButton\\n        onClick={handleNextButtonClick}\\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\\n        aria-label=\\\"Next Page\\\"\\n      >\\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\\n      </IconButton>\\n      <IconButton\\n        onClick={handleLastPageButtonClick}\\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\\n        aria-label=\\\"Last Page\\\"\\n      >\\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\\n      </IconButton>\\n    </div>\\n  );\\n}\\n\\nTablePaginationActions.propTypes = {\\n  count: PropTypes.number.isRequired,\\n  onChangePage: PropTypes.func.isRequired,\\n  page: PropTypes.number.isRequired,\\n  rowsPerPage: PropTypes.number.isRequired,\\n};\\n\\nfunction createData(name, calories, fat) {\\n  return { name, calories, fat };\\n}\\n\\nconst rows = [\\n  createData('Cupcake', 305, 3.7),\\n  createData('Donut', 452, 25.0),\\n  createData('Eclair', 262, 16.0),\\n  createData('Frozen yoghurt', 159, 6.0),\\n  createData('Gingerbread', 356, 16.0),\\n  createData('Honeycomb', 408, 3.2),\\n  createData('Ice cream sandwich', 237, 9.0),\\n  createData('Jelly Bean', 375, 0.0),\\n  createData('KitKat', 518, 26.0),\\n  createData('Lollipop', 392, 0.2),\\n  createData('Marshmallow', 318, 0),\\n  createData('Nougat', 360, 19.0),\\n  createData('Oreo', 437, 18.0),\\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\\n\\nconst useStyles2 = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    marginTop: theme.spacing(3),\\n  },\\n  table: {\\n    minWidth: 500,\\n  },\\n  tableWrapper: {\\n    overflowX: 'auto',\\n  },\\n}));\\n\\nexport default function CustomPaginationActionsTable() {\\n  const classes = useStyles2();\\n  const [page, setPage] = React.useState(0);\\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\\n\\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\\n\\n  function handleChangePage(event, newPage) {\\n    setPage(newPage);\\n  }\\n\\n  function handleChangeRowsPerPage(event) {\\n    setRowsPerPage(parseInt(event.target.value, 10));\\n  }\\n\\n  return (\\n    <Paper className={classes.root}>\\n      <div className={classes.tableWrapper}>\\n        <Table className={classes.table}>\\n          <TableBody>\\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\\n              <TableRow key={row.name}>\\n                <TableCell component=\\\"th\\\" scope=\\\"row\\\">\\n                  {row.name}\\n                </TableCell>\\n                <TableCell align=\\\"right\\\">{row.calories}</TableCell>\\n                <TableCell align=\\\"right\\\">{row.fat}</TableCell>\\n              </TableRow>\\n            ))}\\n\\n            {emptyRows > 0 && (\\n              <TableRow style={{ height: 48 * emptyRows }}>\\n                <TableCell colSpan={6} />\\n              </TableRow>\\n            )}\\n          </TableBody>\\n          <TableFooter>\\n            <TableRow>\\n              <TablePagination\\n                rowsPerPageOptions={[5, 10, 25]}\\n                colSpan={3}\\n                count={rows.length}\\n                rowsPerPage={rowsPerPage}\\n                page={page}\\n                SelectProps={{\\n                  inputProps: { 'aria-label': 'Rows per page' },\\n                  native: true,\\n                }}\\n                onChangePage={handleChangePage}\\n                onChangeRowsPerPage={handleChangeRowsPerPage}\\n                ActionsComponent={TablePaginationActions}\\n              />\\n            </TableRow>\\n          </TableFooter>\\n        </Table>\\n      </div>\\n    </Paper>\\n  );\\n}\\n\";\nvar jsCode6 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Table from '@material-ui/core/Table';\\nimport TableBody from '@material-ui/core/TableBody';\\nimport TableCell from '@material-ui/core/TableCell';\\nimport TableHead from '@material-ui/core/TableHead';\\nimport TableRow from '@material-ui/core/TableRow';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst TAX_RATE = 0.07;\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    marginTop: theme.spacing(3),\\n    overflowX: 'auto',\\n  },\\n  table: {\\n    minWidth: 700,\\n  },\\n}));\\n\\nfunction ccyFormat(num) {\\n  return `${num.toFixed(2)}`;\\n}\\n\\nfunction priceRow(qty, unit) {\\n  return qty * unit;\\n}\\n\\nfunction createRow(desc, qty, unit) {\\n  const price = priceRow(qty, unit);\\n  return { desc, qty, unit, price };\\n}\\n\\nfunction subtotal(items) {\\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\\n}\\n\\nconst rows = [\\n  createRow('Paperclips (Box)', 100, 1.15),\\n  createRow('Paper (Case)', 10, 45.99),\\n  createRow('Waste Basket', 2, 17.99),\\n];\\n\\nconst invoiceSubtotal = subtotal(rows);\\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\\n\\nexport default function SpanningTable() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Paper className={classes.root}>\\n      <Table className={classes.table}>\\n        <TableHead>\\n          <TableRow>\\n            <TableCell>Desc</TableCell>\\n            <TableCell align=\\\"right\\\">Qty.</TableCell>\\n            <TableCell align=\\\"right\\\">@</TableCell>\\n            <TableCell align=\\\"right\\\">Price</TableCell>\\n          </TableRow>\\n        </TableHead>\\n        <TableBody>\\n          {rows.map(row => (\\n            <TableRow key={row.desc}>\\n              <TableCell>{row.desc}</TableCell>\\n              <TableCell align=\\\"right\\\">{row.qty}</TableCell>\\n              <TableCell align=\\\"right\\\">{row.unit}</TableCell>\\n              <TableCell align=\\\"right\\\">{ccyFormat(row.price)}</TableCell>\\n            </TableRow>\\n          ))}\\n\\n          <TableRow>\\n            <TableCell rowSpan={3} />\\n            <TableCell colSpan={2}>Subtotal</TableCell>\\n            <TableCell align=\\\"right\\\">{ccyFormat(invoiceSubtotal)}</TableCell>\\n          </TableRow>\\n          <TableRow>\\n            <TableCell>Tax</TableCell>\\n            <TableCell align=\\\"right\\\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\\n            <TableCell align=\\\"right\\\">{ccyFormat(invoiceTaxes)}</TableCell>\\n          </TableRow>\\n          <TableRow>\\n            <TableCell colSpan={2}>Total</TableCell>\\n            <TableCell align=\\\"right\\\">{ccyFormat(invoiceTotal)}</TableCell>\\n          </TableRow>\\n        </TableBody>\\n      </Table>\\n    </Paper>\\n  );\\n}\\n\";","map":{"version":3,"names":["React","clsx","PropTypes","makeStyles","lighten","withStyles","useTheme","Paper","Table","TableHead","TableRow","TableCell","TableBody","Checkbox","Toolbar","Typography","Tooltip","IconButton","TableSortLabel","TablePagination","Switch","FormControlLabel","TableFooter","DeleteIcon","FilterListIcon","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","Notice","KTCodeExample","useStyles1","theme","root","width","marginTop","spacing","overflowX","table","minWidth","createData","name","calories","fat","carbs","protein","rows","useStyles2","paper","marginBottom","desc3","a","b","orderBy","stableSort3","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","headRows3","id","numeric","disablePadding","label","EnhancedTableHead3","props","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","row","propTypes","number","isRequired","func","string","useToolbarStyles3","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","EnhancedTableToolbar3","classes","useStyles3","tableWrapper","useStyles4","StyledTableCell4","head","common","black","white","body","fontSize","StyledTableRow4","background","default","useStyles52","useStyles51","flexShrink","marginLeft","TablePaginationActions5","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","createData5","rows5","TAX_RATE","useStyles6","ccyFormat6","num","toFixed","priceRow6","qty","unit","createRow6","desc","price","subtotal6","items","reduce","sum","i","rows6","invoiceSubtotal6","invoiceTaxes6","invoiceTotal6","TablesExamplesPage","classes1","classes2","classes3","useState","order3","setOrder3","orderBy3","setOrderBy3","selected3","setSelected3","page3","setPage3","dense3","setDense3","rowsPerPage3","setRowsPerPage3","handleRequestSort3","isDesc","handleSelectAllClick3","target","checked","newSelecteds","n","handleClick3","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage3","newPage","handleChangeRowsPerPage3","value","handleChangeDense3","isSelected3","emptyRows3","min","classes4","classes5","page5","setPage5","rowsPerPage5","setRowsPerPage5","emptyRows5","handleChangePage5","handleChangeRowsPerPage5","parseInt","classes6","jsCode1","jsCode3","isItemSelected","labelId","height","jsCode5","inputProps","native","jsCode2","jsCode4","jsCode6"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/GoogleMaterialExamples/data-displays/TablesExamplesPage.js"],"sourcesContent":["/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  makeStyles,\r\n  lighten,\r\n  withStyles,\r\n  useTheme\r\n} from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Checkbox,\r\n  Toolbar,\r\n  Typography,\r\n  Tooltip,\r\n  IconButton,\r\n  TableSortLabel,\r\n  TablePagination,\r\n  Switch,\r\n  FormControlLabel,\r\n  TableFooter\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9)\r\n];\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    width: \"100%\",\r\n    overflowX: \"auto\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\n// Example 3\r\nfunction desc3(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort3(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc3(a, b, orderBy)\r\n    : (a, b) => -desc3(a, b, orderBy);\r\n}\r\n\r\nconst headRows3 = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Dessert (100g serving)\"\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" }\r\n];\r\n\r\nfunction EnhancedTableHead3(props) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"Select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headRows3.map(row => (\r\n          <TableCell\r\n            key={row.id}\r\n            align={row.numeric ? \"right\" : \"left\"}\r\n            padding={row.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === row.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === row.id}\r\n              direction={order}\r\n              onClick={createSortHandler(row.id)}\r\n            >\r\n              {row.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead3.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst useToolbarStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  spacer: {\r\n    flex: \"1 1 100%\"\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary\r\n  },\r\n  title: {\r\n    flex: \"0 0 auto\"\r\n  }\r\n}));\r\n\r\nconst EnhancedTableToolbar3 = props => {\r\n  const classes = useToolbarStyles3();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"Filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar3.propTypes = {\r\n  numSelected: PropTypes.number.isRequired\r\n};\r\n\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 750\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  }\r\n}));\r\n\r\nconst StyledTableCell4 = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow4 = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.background.default\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\n// Example 5\r\nconst useStyles52 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  table: {\r\n    minWidth: 500\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  }\r\n}));\r\n\r\nconst useStyles51 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5)\r\n  }\r\n}));\r\n\r\nfunction TablePaginationActions5(props) {\r\n  const classes = useStyles51();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"First Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"Previous Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Next Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Last Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions5.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired\r\n};\r\n\r\nfunction createData5(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows5 = [\r\n  createData5(\"Cupcake\", 305, 3.7),\r\n  createData5(\"Donut\", 452, 25.0),\r\n  createData5(\"Eclair\", 262, 16.0),\r\n  createData5(\"Frozen yoghurt\", 159, 6.0),\r\n  createData5(\"Gingerbread\", 356, 16.0),\r\n  createData5(\"Honeycomb\", 408, 3.2),\r\n  createData5(\"Ice cream sandwich\", 237, 9.0),\r\n  createData5(\"Jelly Bean\", 375, 0.0),\r\n  createData5(\"KitKat\", 518, 26.0),\r\n  createData5(\"Lollipop\", 392, 0.2),\r\n  createData5(\"Marshmallow\", 318, 0),\r\n  createData5(\"Nougat\", 360, 19.0),\r\n  createData5(\"Oreo\", 437, 18.0)\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\n// Example 6\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles6 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  }\r\n}));\r\n\r\nfunction ccyFormat6(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow6(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow6(desc, qty, unit) {\r\n  const price = priceRow6(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\nfunction subtotal6(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows6 = [\r\n  createRow6(\"Paperclips (Box)\", 100, 1.15),\r\n  createRow6(\"Paper (Case)\", 10, 45.99),\r\n  createRow6(\"Waste Basket\", 2, 17.99)\r\n];\r\n\r\nconst invoiceSubtotal6 = subtotal6(rows6);\r\nconst invoiceTaxes6 = TAX_RATE * invoiceSubtotal6;\r\nconst invoiceTotal6 = invoiceTaxes6 + invoiceSubtotal6;\r\n\r\nexport default function TablesExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [order3, setOrder3] = React.useState(\"asc\");\r\n  const [orderBy3, setOrderBy3] = React.useState(\"calories\");\r\n  const [selected3, setSelected3] = React.useState([]);\r\n  const [page3, setPage3] = React.useState(0);\r\n  const [dense3, setDense3] = React.useState(false);\r\n  const [rowsPerPage3, setRowsPerPage3] = React.useState(5);\r\n\r\n  function handleRequestSort3(event, property) {\r\n    const isDesc = orderBy3 === property && order3 === \"desc\";\r\n    setOrder3(isDesc ? \"asc\" : \"desc\");\r\n    setOrderBy3(property);\r\n  }\r\n\r\n  function handleSelectAllClick3(event) {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected3(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected3([]);\r\n  }\r\n\r\n  function handleClick3(event, name) {\r\n    const selectedIndex = selected3.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected3, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected3.slice(1));\r\n    } else if (selectedIndex === selected3.length - 1) {\r\n      newSelected = newSelected.concat(selected3.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected3.slice(0, selectedIndex),\r\n        selected3.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected3(newSelected);\r\n  }\r\n\r\n  function handleChangePage3(event, newPage) {\r\n    setPage3(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage3(event) {\r\n    setRowsPerPage3(+event.target.value);\r\n  }\r\n\r\n  function handleChangeDense3(event) {\r\n    setDense3(event.target.checked);\r\n  }\r\n\r\n  const isSelected3 = name => selected3.indexOf(name) !== -1;\r\n\r\n  const emptyRows3 =\r\n    rowsPerPage3 - Math.min(rowsPerPage3, rows.length - page3 * rowsPerPage3);\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n\r\n  // Example 5\r\n  const classes5 = useStyles52();\r\n  const [page5, setPage5] = React.useState(0);\r\n  const [rowsPerPage5, setRowsPerPage5] = React.useState(5);\r\n\r\n  const emptyRows5 =\r\n    rowsPerPage5 - Math.min(rowsPerPage5, rows5.length - page5 * rowsPerPage5);\r\n\r\n  function handleChangePage5(event, newPage) {\r\n    setPage5(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage5(event) {\r\n    setRowsPerPage5(parseInt(event.target.value, 10));\r\n  }\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Data tables display sets of data. They can be fully customized.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/tables/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple Table\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A simple example with no frills.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes1.root}>\r\n              <Table className={classes1.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Dessert (100g serving)</TableCell>\r\n                    <TableCell align=\"right\">Calories</TableCell>\r\n                    <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                    <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                    <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.map(row => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Sorting & Selecting\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              This example demonstrates the use of <code>Checkbox</code> and\r\n              clickable rows for selection, with a custom <code>Toolbar</code>.\r\n              It uses the <code>TableSortLabel</code> component to help style\r\n              column headings.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes3.root}>\r\n              <Paper className={classes3.paper}>\r\n                <EnhancedTableToolbar3 numSelected={selected3.length} />\r\n                <div className={classes3.tableWrapper}>\r\n                  <Table\r\n                    className={classes3.table}\r\n                    aria-labelledby=\"tableTitle\"\r\n                    size={dense3 ? \"small\" : \"medium\"}\r\n                  >\r\n                    <EnhancedTableHead3\r\n                      numSelected={selected3.length}\r\n                      order={order3}\r\n                      orderBy={orderBy3}\r\n                      onSelectAllClick={handleSelectAllClick3}\r\n                      onRequestSort={handleRequestSort3}\r\n                      rowCount={rows.length}\r\n                    />\r\n                    <TableBody>\r\n                      {stableSort3(rows, getSorting(order3, orderBy3))\r\n                        .slice(\r\n                          page3 * rowsPerPage3,\r\n                          page3 * rowsPerPage3 + rowsPerPage3\r\n                        )\r\n                        .map((row, index) => {\r\n                          const isItemSelected = isSelected3(row.name);\r\n                          const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              onClick={event => handleClick3(event, row.name)}\r\n                              role=\"checkbox\"\r\n                              aria-checked={isItemSelected}\r\n                              tabIndex={-1}\r\n                              key={row.name}\r\n                              selected={isItemSelected}\r\n                            >\r\n                              <TableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                  checked={isItemSelected}\r\n                                  inputProps={{\r\n                                    \"aria-labelledby\": labelId\r\n                                  }}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell\r\n                                component=\"th\"\r\n                                id={labelId}\r\n                                scope=\"row\"\r\n                                padding=\"none\"\r\n                              >\r\n                                {row.name}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">\r\n                                {row.calories}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">{row.fat}</TableCell>\r\n                              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                              <TableCell align=\"right\">{row.protein}</TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                      {emptyRows3 > 0 && (\r\n                        <TableRow style={{ height: 49 * emptyRows3 }}>\r\n                          <TableCell colSpan={6} />\r\n                        </TableRow>\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </div>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={rows.length}\r\n                  rowsPerPage={rowsPerPage3}\r\n                  page={page3}\r\n                  backIconButtonProps={{\r\n                    \"aria-label\": \"Previous Page\"\r\n                  }}\r\n                  nextIconButtonProps={{\r\n                    \"aria-label\": \"Next Page\"\r\n                  }}\r\n                  onChangePage={handleChangePage3}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage3}\r\n                />\r\n              </Paper>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch checked={dense3} onChange={handleChangeDense3} />\r\n                }\r\n                label=\"Dense padding\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Custom Table Pagination Action\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              The <code>Action</code> property of the{\" \"}\r\n              <code>TablePagination</code> component allows the implementation\r\n              of custom actions.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes5.root}>\r\n              <div className={classes5.tableWrapper}>\r\n                <Table className={classes5.table}>\r\n                  <TableBody>\r\n                    {rows5\r\n                      .slice(\r\n                        page5 * rowsPerPage5,\r\n                        page5 * rowsPerPage5 + rowsPerPage5\r\n                      )\r\n                      .map(row => (\r\n                        <TableRow key={row.name}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{row.calories}</TableCell>\r\n                          <TableCell align=\"right\">{row.fat}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n\r\n                    {emptyRows5 > 0 && (\r\n                      <TableRow style={{ height: 48 * emptyRows5 }}>\r\n                        <TableCell colSpan={6} />\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                  <TableFooter>\r\n                    <TableRow>\r\n                      <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        colSpan={3}\r\n                        count={rows5.length}\r\n                        rowsPerPage={rowsPerPage5}\r\n                        page={page5}\r\n                        SelectProps={{\r\n                          inputProps: { \"aria-label\": \"Rows per page\" },\r\n                          native: true\r\n                        }}\r\n                        onChangePage={handleChangePage5}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage5}\r\n                        ActionsComponent={TablePaginationActions5}\r\n                      />\r\n                    </TableRow>\r\n                  </TableFooter>\r\n                </Table>\r\n              </div>\r\n            </Paper>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Dense Table\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A simple example of a dense table with no frills.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              <Paper className={classes2.paper}>\r\n                <Table className={classes2.table} size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Dessert (100g serving)</TableCell>\r\n                      <TableCell align=\"right\">Calories</TableCell>\r\n                      <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                      <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                      <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {rows.map(row => (\r\n                      <TableRow key={row.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.calories}</TableCell>\r\n                        <TableCell align=\"right\">{row.fat}</TableCell>\r\n                        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                        <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </Paper>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Customized tables\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Here is an example of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes4.root}>\r\n              <Table className={classes4.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell4>Dessert (100g serving)</StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">Calories</StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">\r\n                      Fat&nbsp;(g)\r\n                    </StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">\r\n                      Carbs&nbsp;(g)\r\n                    </StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">\r\n                      Protein&nbsp;(g)\r\n                    </StyledTableCell4>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.map(row => (\r\n                    <StyledTableRow4 key={row.name}>\r\n                      <StyledTableCell4 component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.calories}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.fat}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.carbs}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.protein}\r\n                      </StyledTableCell4>\r\n                    </StyledTableRow4>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Spanning Table\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A simple example with spanning rows & columns.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes6.root}>\r\n              <Table className={classes6.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Desc</TableCell>\r\n                    <TableCell align=\"right\">Qty.</TableCell>\r\n                    <TableCell align=\"right\">@</TableCell>\r\n                    <TableCell align=\"right\">Price</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows6.map(row => (\r\n                    <TableRow key={row.desc}>\r\n                      <TableCell>{row.desc}</TableCell>\r\n                      <TableCell align=\"right\">{row.qty}</TableCell>\r\n                      <TableCell align=\"right\">{row.unit}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {ccyFormat6(row.price)}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n\r\n                  <TableRow>\r\n                    <TableCell rowSpan={3} />\r\n                    <TableCell colSpan={2}>Subtotal</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {ccyFormat6(invoiceSubtotal6)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Tax</TableCell>\r\n                    <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(\r\n                      0\r\n                    )} %`}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {ccyFormat6(invoiceTaxes6)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell colSpan={2}>Total</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {ccyFormat6(invoiceTotal6)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function SimpleTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function DenseTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Table className={classes.table} size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell align=\"right\">Calories</TableCell>\r\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst headRows = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'Select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headRows.map(row => (\r\n          <TableCell\r\n            key={row.id}\r\n            align={row.numeric ? 'right' : 'left'}\r\n            padding={row.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === row.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === row.id}\r\n              direction={order}\r\n              onClick={createSortHandler(row.id)}\r\n            >\r\n              {row.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"Filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  function handleRequestSort(event, property) {\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    setOrder(isDesc ? 'asc' : 'desc');\r\n    setOrderBy(property);\r\n  }\r\n\r\n  function handleSelectAllClick(event) {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }\r\n\r\n  function handleClick(event, name) {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  }\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(+event.target.value);\r\n  }\r\n\r\n  function handleChangeDense(event) {\r\n    setDense(event.target.checked);\r\n  }\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = \\`enhanced-table-checkbox-\\${index}\\`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedTables() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Calories</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"First Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"Previous Page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Next Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Last Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7),\r\n  createData('Donut', 452, 25.0),\r\n  createData('Eclair', 262, 16.0),\r\n  createData('Frozen yoghurt', 159, 6.0),\r\n  createData('Gingerbread', 356, 16.0),\r\n  createData('Honeycomb', 408, 3.2),\r\n  createData('Ice cream sandwich', 237, 9.0),\r\n  createData('Jelly Bean', 375, 0.0),\r\n  createData('KitKat', 518, 26.0),\r\n  createData('Lollipop', 392, 0.2),\r\n  createData('Marshmallow', 318, 0),\r\n  createData('Nougat', 360, 19.0),\r\n  createData('Oreo', 437, 18.0),\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                colSpan={3}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'Rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nfunction ccyFormat(num) {\r\n  return \\`\\${num.toFixed(2)}\\`;\r\n}\r\n\r\nfunction priceRow(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow(desc, qty, unit) {\r\n  const price = priceRow(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\nfunction subtotal(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows = [\r\n  createRow('Paperclips (Box)', 100, 1.15),\r\n  createRow('Paper (Case)', 10, 45.99),\r\n  createRow('Waste Basket', 2, 17.99),\r\n];\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\nexport default function SpanningTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Desc</TableCell>\r\n            <TableCell align=\"right\">Qty.</TableCell>\r\n            <TableCell align=\"right\">@</TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.desc}>\r\n              <TableCell>{row.desc}</TableCell>\r\n              <TableCell align=\"right\">{row.qty}</TableCell>\r\n              <TableCell align=\"right\">{row.unit}</TableCell>\r\n              <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          <TableRow>\r\n            <TableCell rowSpan={3} />\r\n            <TableCell colSpan={2}>Subtotal</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Tax</TableCell>\r\n            <TableCell align=\"right\">{\\`\\${(TAX_RATE * 100).toFixed(0)} %\\`}</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Total</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}