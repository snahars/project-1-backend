{"ast":null,"code":"import _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/master-config/reportingManagerSetup/ReportingManagerList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport { CardBody, CardHeaderToolbar } from \"../../../../_metronic/_partials/controls\";\nimport { CommonDeleteModal } from \"../../Common/CommonDeleteModal\";\nimport { ActionsColumnFormatter } from \"../ActionsColumnFormatter\";\nimport MasterConfigBreadCrum from \"../MasterConfigBreadCrum\";\nimport * as XLSX from \"xlsx\";\nimport { showError, showSuccess } from \"../../../pages/Alert\";\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\nimport SVG from \"react-inlinesvg\";\nimport axios from \"axios\";\nimport moment from 'moment';\nimport { useSelector, shallowEqual } from \"react-redux\";\nexport default function ReportingManagerList() {\n  var _this = this;\n\n  var history = useHistory();\n  var companyId = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var userLoginId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      reportingManagerList = _useState2[0],\n      setReportingManagerList = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reportingManagerListSearch = _useState4[0],\n      setReportingManagerListSearch = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedRows = _useState6[0],\n      setSelectedRows = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deleteId = _useState8[0],\n      setDeleteId = _useState8[1];\n\n  useEffect(function () {\n    getAllReportingManager();\n  }, [companyId]);\n\n  var openViewPage = function openViewPage(data) {//console.log(data);\n    // history.push('/master-config/pack-size-setup-new', { state: data });\n  };\n\n  var createNewReportingManager = function createNewReportingManager() {\n    history.push('/master-config/reporting-manager-setup-new');\n  };\n\n  var openEditPage = function openEditPage(data) {\n    history.push({\n      pathname: '/master-config/reporting-manager-setup-new',\n      state: {\n        data: data\n      }\n    });\n  };\n\n  var openDeleteDialog = function openDeleteDialog(data) {\n    setDeleteId(data.id);\n    history.push('/master-config/reporting-manager-setup/delete');\n  };\n\n  var getAllReportingManager = function getAllReportingManager() {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/reporting-manager/get-all-by-company-id/\").concat(companyId);\n    axios.get(URL).then(function (response) {\n      if (response.data.success == true) {\n        //console.log(response.data.data)\n        setReportingManagerList(response.data.data);\n        setReportingManagerListSearch(response.data.data);\n      } else {\n        showError(response.data.message);\n      }\n    }).catch(function (err) {\n      showError(err);\n    });\n  };\n\n  var deleteReportingManager = function deleteReportingManager() {\n    // alert('delete' + deleteId);\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/reporting-manager/\").concat(companyId, \"/\").concat(deleteId);\n    axios.delete(URL).then(function (response) {\n      if (response.data.success == true) {\n        showSuccess(response.data.message);\n\n        var tempReportingManagerList = _toConsumableArray(reportingManagerList);\n\n        var pIndex = tempReportingManagerList.findIndex(function (obj) {\n          return obj.id == deleteId;\n        });\n        tempReportingManagerList.splice(pIndex, 1);\n        setReportingManagerList(tempReportingManagerList);\n        setDeleteId(null);\n      } else {\n        showError(response.data.message);\n      }\n    }).catch(function (err) {\n      showError(err);\n    });\n    history.push('/master-config/reporting-manager-setup');\n  };\n\n  var singleRowSelectHandler = function singleRowSelectHandler(data, isSelect) {\n    if (isSelect == true) {\n      var temp = _toConsumableArray(selectedRows);\n\n      temp.push(data);\n      setSelectedRows(temp);\n    } else {\n      if (selectedRows.length >= 0) {\n        var _temp = _toConsumableArray(selectedRows);\n\n        var index = _temp.findIndex(function (obj) {\n          return obj.id == data.id;\n        });\n\n        _temp.splice(index, 1);\n\n        setSelectedRows(_temp);\n      }\n    }\n  };\n\n  var allRowSelectHandler = function allRowSelectHandler(allData, isSelect) {\n    if (isSelect == true) {\n      setSelectedRows(allData);\n    } else {\n      setSelectedRows([]);\n    }\n  };\n\n  var handleSearchChange = function handleSearchChange(event) {\n    var value = event.target.value;\n    getSearchList(value);\n  };\n\n  var getSearchList = function getSearchList(searchText) {\n    var searchTextValue = searchText.toLowerCase();\n    var tp = [];\n    console.log(reportingManagerListSearch);\n\n    for (var i = 0; i < reportingManagerListSearch.length; i++) {\n      var applicationUser = reportingManagerListSearch[i].applicationUser.name.toLowerCase();\n\n      if (applicationUser.includes(searchTextValue)) {\n        tp.push(reportingManagerListSearch[i]);\n      }\n    }\n\n    setReportingManagerList(tp);\n  };\n\n  var exportData = function exportData(e) {\n    handleExport();\n  };\n\n  var handleExport = function handleExport() {\n    var data = _toConsumableArray(selectedRows);\n\n    if (data.length === 0) {\n      showError(\"No row is selected for export data\");\n      return;\n    }\n\n    var exportData = [];\n    data.map(function (row) {\n      var obj = {};\n      obj.applicationUser = row.applicationUser.name;\n      obj.reportingTo = row.reportingTo ? row.reportingTo.name : null;\n      obj.fromDate = moment(row.fromDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\");\n      exportData.push(obj); //setSelectedRows([]);\n    });\n    var workbook = XLSX.utils.book_new();\n    var Heading = [[\"USER\", \"REPORTING TO\", \"REPORTING FROM (DATE)\"]];\n    var worksheet = XLSX.utils.json_to_sheet(exportData, {\n      origin: 'A2',\n      skipHeader: true\n    }); // creating sheet and adding data from 2nd row of column A.\n    // Leaving first row to add Heading\n\n    XLSX.utils.sheet_add_aoa(worksheet, Heading, {\n      origin: 'A1'\n    });\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n    XLSX.writeFile(workbook, \"Reporting Manager List.xlsx\");\n  };\n\n  var columns = [{\n    dataField: \"applicationUser\",\n    text: \"User\",\n    formatter: function formatter(cellContent, row) {\n      return row.applicationUser.name;\n    }\n  }, {\n    dataField: \"reportingTo\",\n    text: \"Reporting To\",\n    formatter: function formatter(cellContent, row) {\n      return row.reportingTo ? row.reportingTo.name : null;\n    }\n  }, {\n    dataField: \"fromDate\",\n    text: \"Reporting From (Date)\",\n    formatter: function formatter(cellContent, row) {\n      return moment(row.fromDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\");\n    }\n  }, {\n    dataField: \"action\",\n    text: \"Actions\",\n    formatter: ActionsColumnFormatter,\n    formatExtraData: {\n      openViewPage: openViewPage,\n      openEditPage: openEditPage,\n      openDeleteDialog: openDeleteDialog\n    },\n    classes: \"text-center\",\n    headerClasses: \"text-center\",\n    style: {\n      minWidth: \"8.5rem\"\n    }\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MasterConfigBreadCrum, {\n    menuTitle: \"Reporting Manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"create-field-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 37\n    }\n  }, \"Reporting Manager List\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8 d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      padding: \"7px\",\n      marginTop: \"3px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/search.png\"),\n    width: \"20px\",\n    height: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form form-label-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"searchText\",\n    placeholder: \"Search Here\",\n    style: {\n      paddingLeft: \"28px\"\n    },\n    onChange: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CardHeaderToolbar, {\n    title: \"Create New Reporting Manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    /* tree={categoryTypeTree} */\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: createNewReportingManager,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 45\n    }\n  }, \"+ New Reporting Manager\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginRight: \"20px\",\n      background: \"#F9F9F9\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    title: \"Download excel data\",\n    className: \"btn float-right export-btn\",\n    onClick: exportData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(SVG, {\n    src: toAbsoluteUrl(\"/media/svg/icons/project-svg/download.svg\"),\n    width: \"15px\",\n    height: \"15px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 45\n    }\n  }))))))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/master-config/reporting-manager-setup/delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }, function (_ref) {\n    var history = _ref.history,\n        match = _ref.match;\n    return /*#__PURE__*/React.createElement(CommonDeleteModal, {\n      show: match != null,\n      id: deleteId,\n      deleteAction: deleteReportingManager,\n      onHide: function onHide() {\n        history.push(\"/master-config/reporting-manager-setup\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 29\n      }\n    });\n  }), /*#__PURE__*/React.createElement(BootstrapTable, {\n    wrapperClasses: \"table-responsive\",\n    classes: \"table table-head-custom table-vertical-center overflow-hidden\",\n    bootstrap4: true,\n    bordered: false,\n    keyField: \"id\",\n    data: reportingManagerList,\n    columns: columns,\n    selectRow: {\n      mode: 'checkbox',\n      onSelect: function onSelect(row, isSelect, rowIndex, e) {\n        singleRowSelectHandler(row, isSelect);\n      },\n      onSelectAll: function onSelectAll(isSelect, rows, e) {\n        allRowSelectHandler(rows, isSelect);\n      }\n    },\n    pagination: paginationFactory({\n      sizePerPage: 10,\n      showTotal: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"names":["React","useEffect","useState","Card","BootstrapTable","paginationFactory","Route","useHistory","CardBody","CardHeaderToolbar","CommonDeleteModal","ActionsColumnFormatter","MasterConfigBreadCrum","XLSX","showError","showSuccess","toAbsoluteUrl","SVG","axios","moment","useSelector","shallowEqual","ReportingManagerList","history","companyId","state","auth","company","userLoginId","user","userId","reportingManagerList","setReportingManagerList","reportingManagerListSearch","setReportingManagerListSearch","selectedRows","setSelectedRows","deleteId","setDeleteId","getAllReportingManager","openViewPage","data","createNewReportingManager","push","openEditPage","pathname","openDeleteDialog","id","URL","process","env","REACT_APP_API_URL","get","then","response","success","message","catch","err","deleteReportingManager","delete","tempReportingManagerList","pIndex","findIndex","obj","splice","singleRowSelectHandler","isSelect","temp","length","index","allRowSelectHandler","allData","handleSearchChange","event","value","target","getSearchList","searchText","searchTextValue","toLowerCase","tp","console","log","i","applicationUser","name","includes","exportData","e","handleExport","map","row","reportingTo","fromDate","format","workbook","utils","book_new","Heading","worksheet","json_to_sheet","origin","skipHeader","sheet_add_aoa","book_append_sheet","writeFile","columns","dataField","text","formatter","cellContent","formatExtraData","classes","headerClasses","style","minWidth","position","padding","marginTop","paddingLeft","marginRight","background","match","mode","onSelect","rowIndex","onSelectAll","rows","sizePerPage","showTotal"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/master-config/reportingManagerSetup/ReportingManagerList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Card } from \"react-bootstrap\"\nimport BootstrapTable from \"react-bootstrap-table-next\"\nimport paginationFactory from \"react-bootstrap-table2-paginator\"\nimport { Route, useHistory } from \"react-router-dom\"\nimport { CardBody, CardHeaderToolbar } from \"../../../../_metronic/_partials/controls\"\nimport { CommonDeleteModal } from \"../../Common/CommonDeleteModal\"\nimport { ActionsColumnFormatter } from \"../ActionsColumnFormatter\"\nimport MasterConfigBreadCrum from \"../MasterConfigBreadCrum\"\nimport * as XLSX from \"xlsx\";\nimport { showError, showSuccess } from \"../../../pages/Alert\"\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\"\nimport SVG from \"react-inlinesvg\";\nimport axios from \"axios\"\nimport moment from 'moment';\nimport { useSelector, shallowEqual } from \"react-redux\";\n\nexport default function ReportingManagerList() {\n    let history = useHistory();\n    const companyId = useSelector((state) => state.auth.company, shallowEqual);\n    const userLoginId = useSelector((state) => state.auth.user.userId, shallowEqual);\n\n    const [reportingManagerList, setReportingManagerList] = useState([]);\n    const [reportingManagerListSearch, setReportingManagerListSearch] = useState([]);\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [deleteId, setDeleteId] = useState(null);\n\n    useEffect(() => {\n        getAllReportingManager();\n    }, [companyId])\n\n    const openViewPage = (data) => {\n        //console.log(data);\n        // history.push('/master-config/pack-size-setup-new', { state: data });\n    }\n\n    const createNewReportingManager = () => {\n        history.push('/master-config/reporting-manager-setup-new');\n    }\n\n    const openEditPage = (data) => {\n        history.push({ pathname: '/master-config/reporting-manager-setup-new', state: { data } });\n    }\n\n    const openDeleteDialog = (data) => {\n        setDeleteId(data.id)\n        history.push('/master-config/reporting-manager-setup/delete');\n    }\n\n    const getAllReportingManager = () => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/reporting-manager/get-all-by-company-id/${companyId}`;\n        axios.get(URL).then(response => {\n            if (response.data.success == true) {\n                //console.log(response.data.data)\n                setReportingManagerList(response.data.data)\n                setReportingManagerListSearch(response.data.data)\n            }\n            else {\n                showError(response.data.message);\n            }\n        }).catch(err => {\n            showError(err);\n        });\n    }\n\n    const deleteReportingManager = () => {\n        // alert('delete' + deleteId);\n        const URL = `${process.env.REACT_APP_API_URL}/api/reporting-manager/${companyId}/${deleteId}`;\n        axios.delete(URL).then(response => {\n            if (response.data.success == true) {\n                showSuccess(response.data.message)\n                const tempReportingManagerList = [...reportingManagerList]\n                const pIndex = tempReportingManagerList.findIndex(obj => obj.id == deleteId);\n                tempReportingManagerList.splice(pIndex, 1);\n                setReportingManagerList(tempReportingManagerList);\n                setDeleteId(null);\n            }\n            else {\n                showError(response.data.message);\n            }\n        }).catch(err => {\n            showError(err);\n        });\n\n        history.push('/master-config/reporting-manager-setup');\n    }\n\n    const singleRowSelectHandler = (data, isSelect) => {\n        if (isSelect == true) {\n            let temp = [...selectedRows]\n            temp.push(data)\n            setSelectedRows(temp)\n        } else {\n            if (selectedRows.length >= 0) {\n                let temp = [...selectedRows]\n                const index = temp.findIndex(obj => obj.id == data.id);\n                temp.splice(index, 1);\n                setSelectedRows(temp)\n            }\n        }\n    }\n\n    const allRowSelectHandler = (allData, isSelect) => {\n        if (isSelect == true) {\n            setSelectedRows(allData)\n        } else {\n            setSelectedRows([])\n        }\n    }\n\n    const handleSearchChange = (event) => {\n        let value = event.target.value;\n        getSearchList(value);\n    }\n    const getSearchList = (searchText) => {\n        let searchTextValue = searchText.toLowerCase();\n        let tp = [];\n        console.log(reportingManagerListSearch)\n        for (let i = 0; i < reportingManagerListSearch.length; i++) {\n            let applicationUser = reportingManagerListSearch[i].applicationUser.name.toLowerCase();\n          \n            if (applicationUser.includes(searchTextValue)) {\n                tp.push(reportingManagerListSearch[i]);\n            }\n        }\n        setReportingManagerList(tp);\n    }\n\n    const exportData = (e) => {\n        handleExport();\n    }\n\n    const handleExport = () => {\n        const data = [...selectedRows];\n        if (data.length === 0) {\n            showError(\"No row is selected for export data\");\n            return;\n        }\n        let exportData = [];\n        data.map(row => {\n            let obj = {};\n            obj.applicationUser = row.applicationUser.name;\n            obj.reportingTo = row.reportingTo?row.reportingTo.name:null;\n            obj.fromDate = moment(row.fromDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\");\n            exportData.push(obj);\n            //setSelectedRows([]);\n        })\n        const workbook = XLSX.utils.book_new();\n        const Heading = [\n            [\"USER\", \"REPORTING TO\", \"REPORTING FROM (DATE)\"]\n        ];\n        const worksheet = XLSX.utils.json_to_sheet(exportData, { origin: 'A2', skipHeader: true });\n\n        // creating sheet and adding data from 2nd row of column A.\n        // Leaving first row to add Heading\n        XLSX.utils.sheet_add_aoa(worksheet, Heading, { origin: 'A1' });\n\n        XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n        XLSX.writeFile(workbook, \"Reporting Manager List.xlsx\");\n    }\n\n    const columns = [\n        {\n            dataField: \"applicationUser\",\n            text: \"User\",\n            formatter: (cellContent, row) => {\n                return row.applicationUser.name;\n            }\n        },\n        {\n            dataField: \"reportingTo\",\n            text: \"Reporting To\",\n            formatter: (cellContent, row) => {\n                return row.reportingTo?row.reportingTo.name:null;\n            }\n        },\n        {\n            dataField: \"fromDate\",\n            text: \"Reporting From (Date)\",\n            formatter: (cellContent, row) => {\n                return moment(row.fromDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\");\n            }\n        },\n        {\n            dataField: \"action\",\n            text: \"Actions\",\n            formatter: ActionsColumnFormatter,\n            formatExtraData: {\n                openViewPage: openViewPage,\n                openEditPage: openEditPage,\n                openDeleteDialog: openDeleteDialog\n            },\n            classes: \"text-center\",\n            headerClasses: \"text-center\",\n            style: {\n                minWidth: \"8.5rem\",\n            }\n        }\n    ];\n\n    return (\n        <>\n            {/* BREAD CRUM ROW */}\n            <MasterConfigBreadCrum menuTitle=\"Reporting Manager\" />\n\n            <Card>\n                <CardBody>\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n\n                            <div className=\"row\">\n                                <div className=\"col-xl-4\">\n                                    <span className=\"create-field-title\">Reporting Manager List</span>\n                                    {/* <p style={{ color: \"#B6B6B6\" }}>Total {productProfileList.length} products </p> */}\n                                </div>\n                                <div className=\"col-xl-8 d-flex justify-content-end\">\n                                     {/* SEARCH BOX ROW */}\n                                    <div className=\"col-xl-3\">\n                                        <div style={{ position: \"absolute\", padding: \"7px\", marginTop: \"3px\" }}>\n                                            <img src={toAbsoluteUrl(\"/images/search.png\")} width=\"20px\" height=\"20px\" />\n                                        </div>\n                                        <form className=\"form form-label-right\">\n                                            <input type=\"text\" className=\"form-control\" name=\"searchText\"\n                                            placeholder=\"Search Here\" style={{ paddingLeft: \"28px\" }}\n                                            onChange={handleSearchChange}\n                                            />\n                                        </form>\n                                    </div>\n                                    <div className=\"mr-5\">\n                                        <CardHeaderToolbar\n                                            title=\"Create New Reporting Manager\"\n                                        >\n\n                                            <button\n                                                /* tree={categoryTypeTree} */\n                                                type=\"button\"\n                                                className=\"btn btn-primary\"\n                                                onClick={createNewReportingManager}\n                                            >\n                                                + New Reporting Manager\n                                            </button>\n                                        </CardHeaderToolbar>\n                                    </div>\n                                    <div style={{ marginRight: \"20px\", background: \"#F9F9F9\" }}>\n                                        <button title=\"Download excel data\" className=\"btn float-right export-btn\"\n                                            onClick={exportData}\n                                        >\n                                            <SVG src={toAbsoluteUrl(\"/media/svg/icons/project-svg/download.svg\")} width=\"15px\" height=\"15px\" />\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <Route path=\"/master-config/reporting-manager-setup/delete\">\n                        {({ history, match }) => (\n                            <CommonDeleteModal\n                                show={match != null}\n                                id={deleteId}\n                                deleteAction={deleteReportingManager}\n                                onHide={() => {\n                                    history.push(\"/master-config/reporting-manager-setup\");\n                                }}\n                            />\n                        )}\n                    </Route>\n\n                    <BootstrapTable\n                        wrapperClasses=\"table-responsive\"\n                        classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n                        bootstrap4\n                        bordered={false}\n                        keyField=\"id\"\n                        data={reportingManagerList}\n                        columns={columns}\n                        selectRow={\n                            {\n                                mode: 'checkbox',\n                                onSelect: (row, isSelect, rowIndex, e) => {\n                                    singleRowSelectHandler(row, isSelect);\n                                },\n                                onSelectAll: (isSelect, rows, e) => {\n                                    allRowSelectHandler(rows, isSelect);\n                                }\n\n                            }\n                        }\n\n                        pagination={paginationFactory({ sizePerPage: 10, showTotal: true })}\n                    />\n                </CardBody>\n            </Card>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}