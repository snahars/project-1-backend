{"ast":null,"code":"import _regeneratorRuntime from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(saga);\n\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { put, takeLatest } from \"redux-saga/effects\";\nimport { getUserByToken } from \"./authCrud\";\nexport var actionTypes = {\n  Login: \"[Login] Action\",\n  Logout: \"[Logout] Action\",\n  Register: \"[Register] Action\",\n  UserRequested: \"[Request User] Action\",\n  UserLoaded: \"[Load User] Auth API\",\n  SetUser: \"[Set User] Action\",\n  SetCompany: \"[Set Company] Action\"\n};\nvar initialAuthState = {\n  user: undefined,\n  authToken: undefined\n};\nexport var reducer = persistReducer({\n  storage: storage,\n  key: \"v726-demo1-auth\",\n  whitelist: [\"authToken\"]\n}, function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialAuthState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.Login:\n      {\n        var authToken = action.payload.authToken;\n        return {\n          authToken: authToken,\n          user: undefined\n        };\n      }\n\n    case actionTypes.Register:\n      {\n        var _authToken = action.payload.authToken;\n        return {\n          authToken: _authToken,\n          user: undefined\n        };\n      }\n\n    case actionTypes.Logout:\n      {\n        // TODO: Change this code. Actions in reducer aren't allowed.\n        return initialAuthState;\n      }\n\n    case actionTypes.UserLoaded:\n      {\n        var user = action.payload.user;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          user: user\n        });\n      }\n\n    case actionTypes.SetUser:\n      {\n        var _user = action.payload.user;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          user: _user\n        });\n      }\n\n    case actionTypes.SetCompany:\n      {\n        // debugger\n        var company = action.payload.company;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          company: company\n        });\n      }\n\n    default:\n      return state;\n  }\n});\nexport var actions = {\n  login: function login(authToken) {\n    return {\n      type: actionTypes.Login,\n      payload: {\n        authToken: authToken\n      }\n    };\n  },\n  register: function register(authToken) {\n    return {\n      type: actionTypes.Register,\n      payload: {\n        authToken: authToken\n      }\n    };\n  },\n  logout: function logout() {\n    return {\n      type: actionTypes.Logout\n    };\n  },\n  requestUser: function requestUser(user) {\n    return {\n      type: actionTypes.UserRequested,\n      payload: {\n        user: user\n      }\n    };\n  },\n  fulfillUser: function fulfillUser(user) {\n    return {\n      type: actionTypes.UserLoaded,\n      payload: {\n        user: user\n      }\n    };\n  },\n  setUser: function setUser(user) {\n    return {\n      type: actionTypes.SetUser,\n      payload: {\n        user: user\n      }\n    };\n  } // setCompany: (company) => ({ type: actionTypes.SetCompany, payload: { company } }),\n\n};\nexport function saga() {\n  return _regeneratorRuntime.wrap(function saga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(actionTypes.Login, /*#__PURE__*/_regeneratorRuntime.mark(function loginSaga() {\n            return _regeneratorRuntime.wrap(function loginSaga$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return put(actions.requestUser());\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, loginSaga);\n          }));\n\n        case 2:\n          _context4.next = 4;\n          return takeLatest(actionTypes.Register, /*#__PURE__*/_regeneratorRuntime.mark(function registerSaga() {\n            return _regeneratorRuntime.wrap(function registerSaga$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return put(actions.requestUser());\n\n                  case 2:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, registerSaga);\n          }));\n\n        case 4:\n          _context4.next = 6;\n          return takeLatest(actionTypes.UserRequested, /*#__PURE__*/_regeneratorRuntime.mark(function userRequested() {\n            var _yield$getUserByToken, user;\n\n            return _regeneratorRuntime.wrap(function userRequested$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return getUserByToken();\n\n                  case 2:\n                    _yield$getUserByToken = _context3.sent;\n                    user = _yield$getUserByToken.data;\n                    _context3.next = 6;\n                    return put(actions.fulfillUser(user));\n\n                  case 6:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, userRequested);\n          }));\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"names":["saga","persistReducer","storage","put","takeLatest","getUserByToken","actionTypes","Login","Logout","Register","UserRequested","UserLoaded","SetUser","SetCompany","initialAuthState","user","undefined","authToken","reducer","key","whitelist","state","action","type","payload","company","actions","login","register","logout","requestUser","fulfillUser","setUser","loginSaga","registerSaga","userRequested","data"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Auth/_redux/authRedux.js"],"sourcesContent":["import { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { put, takeLatest } from \"redux-saga/effects\";\r\nimport { getUserByToken } from \"./authCrud\";\r\n\r\nexport const actionTypes = {\r\n  Login: \"[Login] Action\",\r\n  Logout: \"[Logout] Action\",\r\n  Register: \"[Register] Action\",\r\n  UserRequested: \"[Request User] Action\",\r\n  UserLoaded: \"[Load User] Auth API\",\r\n  SetUser: \"[Set User] Action\",\r\n  SetCompany: \"[Set Company] Action\",\r\n};\r\n\r\nconst initialAuthState = {\r\n  user: undefined,\r\n  authToken: undefined,\r\n};\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: \"v726-demo1-auth\", whitelist: [\"authToken\"] },\r\n  (state = initialAuthState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.Login: {\r\n        const { authToken } = action.payload;\r\n\r\n        return { authToken, user: undefined };\r\n      }\r\n\r\n      case actionTypes.Register: {\r\n        const { authToken } = action.payload;\r\n\r\n        return { authToken, user: undefined };\r\n      }\r\n\r\n      case actionTypes.Logout: {\r\n        // TODO: Change this code. Actions in reducer aren't allowed.\r\n        return initialAuthState;\r\n      }\r\n\r\n      case actionTypes.UserLoaded: {\r\n        const { user } = action.payload;\r\n        return { ...state, user };\r\n      }\r\n\r\n      case actionTypes.SetUser: {\r\n        const { user } = action.payload;\r\n        return { ...state, user };\r\n      }\r\n      \r\n      case actionTypes.SetCompany: {\r\n        // debugger\r\n        const { company } = action.payload;\r\n        return { ...state, company };\r\n      }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport const actions = {\r\n  login: (authToken) => ({ type: actionTypes.Login, payload: { authToken } }),\r\n  register: (authToken) => ({\r\n    type: actionTypes.Register,\r\n    payload: { authToken },\r\n  }),\r\n  logout: () => ({ type: actionTypes.Logout }),\r\n  requestUser: (user) => ({\r\n    type: actionTypes.UserRequested,\r\n    payload: { user },\r\n  }),\r\n  fulfillUser: (user) => ({ type: actionTypes.UserLoaded, payload: { user } }),\r\n  setUser: (user) => ({ type: actionTypes.SetUser, payload: { user } }),\r\n  // setCompany: (company) => ({ type: actionTypes.SetCompany, payload: { company } }),\r\n};\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.Login, function* loginSaga() {\r\n    yield put(actions.requestUser());\r\n  });\r\n\r\n  yield takeLatest(actionTypes.Register, function* registerSaga() {\r\n    yield put(actions.requestUser());\r\n  });\r\n\r\n  yield takeLatest(actionTypes.UserRequested, function* userRequested() {\r\n    const { data: user } = yield getUserByToken();\r\n\r\n    yield put(actions.fulfillUser(user));\r\n  });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}