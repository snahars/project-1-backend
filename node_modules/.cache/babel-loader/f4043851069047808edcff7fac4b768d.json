{"ast":null,"code":"import _regeneratorRuntime from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Auth/_redux/AuthInit.js\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { shallowEqual, useSelector, connect, useDispatch } from \"react-redux\";\nimport { LayoutSplashScreen } from \"../../../../_metronic/layout\";\nimport * as auth from \"./authRedux\";\nimport { getUserByToken } from \"./authCrud\";\n\nfunction AuthInit(props) {\n  var didRequest = useRef(false);\n  var dispatch = useDispatch();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showSplashScreen = _useState2[0],\n      setShowSplashScreen = _useState2[1];\n\n  var _useSelector = useSelector(function (_ref) {\n    var auth = _ref.auth;\n    return {\n      authToken: auth.authToken\n    };\n  }, shallowEqual),\n      authToken = _useSelector.authToken; // We should request user by authToken before rendering the application\n\n\n  useEffect(function () {\n    var requestUser = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$getUserByToken, user;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (didRequest.current) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return getUserByToken();\n\n              case 4:\n                _yield$getUserByToken = _context.sent;\n                user = _yield$getUserByToken.data;\n                dispatch(props.fulfillUser(user));\n\n              case 7:\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n                if (!didRequest.current) {\n                  dispatch(props.logout());\n                }\n\n              case 13:\n                _context.prev = 13;\n                setShowSplashScreen(false);\n                return _context.finish(13);\n\n              case 16:\n                return _context.abrupt(\"return\", function () {\n                  return didRequest.current = true;\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9, 13, 16]]);\n      }));\n\n      return function requestUser() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (authToken) {\n      requestUser();\n    } else {\n      dispatch(props.fulfillUser(undefined));\n      setShowSplashScreen(false);\n    } // eslint-disable-next-line\n\n  }, []);\n  return showSplashScreen ? /*#__PURE__*/React.createElement(LayoutSplashScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, props.children);\n}\n\nexport default connect(null, auth.actions)(AuthInit);","map":{"version":3,"names":["React","useRef","useEffect","useState","shallowEqual","useSelector","connect","useDispatch","LayoutSplashScreen","auth","getUserByToken","AuthInit","props","didRequest","dispatch","showSplashScreen","setShowSplashScreen","authToken","requestUser","current","user","data","fulfillUser","console","error","logout","undefined","children","actions"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Auth/_redux/AuthInit.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { shallowEqual, useSelector, connect, useDispatch } from \"react-redux\";\r\nimport { LayoutSplashScreen } from \"../../../../_metronic/layout\";\r\nimport * as auth from \"./authRedux\";\r\nimport { getUserByToken } from \"./authCrud\";\r\n\r\nfunction AuthInit(props) {\r\n  const didRequest = useRef(false);\r\n  const dispatch = useDispatch();\r\n  const [showSplashScreen, setShowSplashScreen] = useState(true);\r\n  const { authToken } = useSelector(\r\n    ({ auth }) => ({\r\n      authToken: auth.authToken,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // We should request user by authToken before rendering the application\r\n  useEffect(() => {\r\n    const requestUser = async () => {\r\n      try {\r\n        if (!didRequest.current) {\r\n          const { data: user } = await getUserByToken();\r\n          dispatch(props.fulfillUser(user));\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (!didRequest.current) {\r\n          dispatch(props.logout());\r\n        }\r\n      } finally {\r\n        setShowSplashScreen(false);\r\n      }\r\n\r\n      return () => (didRequest.current = true);\r\n    };\r\n\r\n    if (authToken) {\r\n      requestUser();\r\n    } else {\r\n      dispatch(props.fulfillUser(undefined));\r\n      setShowSplashScreen(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return showSplashScreen ? <LayoutSplashScreen /> : <>{props.children}</>;\r\n}\r\n\r\nexport default connect(null, auth.actions)(AuthInit);\r\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,OAApC,EAA6CC,WAA7C,QAAgE,aAAhE;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,OAAO,KAAKC,IAAZ,MAAsB,aAAtB;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EACvB,IAAMC,UAAU,GAAGZ,MAAM,CAAC,KAAD,CAAzB;EACA,IAAMa,QAAQ,GAAGP,WAAW,EAA5B;;EACA,gBAAgDJ,QAAQ,CAAC,IAAD,CAAxD;EAAA;EAAA,IAAOY,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,mBAAsBX,WAAW,CAC/B;IAAA,IAAGI,IAAH,QAAGA,IAAH;IAAA,OAAe;MACbQ,SAAS,EAAER,IAAI,CAACQ;IADH,CAAf;EAAA,CAD+B,EAI/Bb,YAJ+B,CAAjC;EAAA,IAAQa,SAAR,gBAAQA,SAAR,CAJuB,CAWvB;;;EACAf,SAAS,CAAC,YAAM;IACd,IAAMgB,WAAW;MAAA,qEAAG;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;;gBAAA,IAEXL,UAAU,CAACM,OAFA;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAGeT,cAAc,EAH7B;;cAAA;gBAAA;gBAGAU,IAHA,yBAGNC,IAHM;gBAIdP,QAAQ,CAACF,KAAK,CAACU,WAAN,CAAkBF,IAAlB,CAAD,CAAR;;cAJc;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAOhBG,OAAO,CAACC,KAAR;;gBACA,IAAI,CAACX,UAAU,CAACM,OAAhB,EAAyB;kBACvBL,QAAQ,CAACF,KAAK,CAACa,MAAN,EAAD,CAAR;gBACD;;cAVe;gBAAA;gBAYhBT,mBAAmB,CAAC,KAAD,CAAnB;gBAZgB;;cAAA;gBAAA,iCAeX;kBAAA,OAAOH,UAAU,CAACM,OAAX,GAAqB,IAA5B;gBAAA,CAfW;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAAXD,WAAW;QAAA;MAAA;IAAA,GAAjB;;IAkBA,IAAID,SAAJ,EAAe;MACbC,WAAW;IACZ,CAFD,MAEO;MACLJ,QAAQ,CAACF,KAAK,CAACU,WAAN,CAAkBI,SAAlB,CAAD,CAAR;MACAV,mBAAmB,CAAC,KAAD,CAAnB;IACD,CAxBa,CAyBd;;EACD,CA1BQ,EA0BN,EA1BM,CAAT;EA4BA,OAAOD,gBAAgB,gBAAG,oBAAC,kBAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAH,gBAA4B,0CAAGH,KAAK,CAACe,QAAT,CAAnD;AACD;;AAED,eAAerB,OAAO,CAAC,IAAD,EAAOG,IAAI,CAACmB,OAAZ,CAAP,CAA4BjB,QAA5B,CAAf"},"metadata":{},"sourceType":"module"}