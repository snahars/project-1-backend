{"ast":null,"code":"import _defineProperty from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/DebitCreditNoteReport.js\";\nimport React, { useEffect, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nexport default function DebitCreditNoteReport() {\n  var _this = this;\n\n  var fields = {\n    locationId: \"\",\n    salesOfficerId: \"\",\n    distributorId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    report: \"\",\n    reportType: \"\"\n  };\n  var intl = useIntl();\n\n  var _useState = useState(fields),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var selectedCompany = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var userLoginId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      locationTree = _useState4[0],\n      setLocationTree = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      locationIds = _useState6[0],\n      setLocationIds = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      salesOfficerList = _useState8[0],\n      setSalesOfficerList = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      salesOfficerValue = _useState10[0],\n      setSalesOfficerValue = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      distributorValue = _useState12[0],\n      setDistributorValue = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      distributorList = _useState14[0],\n      setDistributorList = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showReport = _useState16[0],\n      setShowReport = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      reportData = _useState18[0],\n      setReportData = _useState18[1];\n\n  useEffect(function () {\n    getLocationTreeList({\n      userLoginId: userLoginId,\n      companyId: selectedCompany\n    });\n  }, [userLoginId, selectedCompany]);\n\n  var getLocationTreeList = function getLocationTreeList(params) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/location-tree/locationTree/\").concat(params.userLoginId, \"/\").concat(params.companyId);\n    axios.get(URL).then(function (response) {\n      var locationTree = response.data.data;\n      setLocationTree(locationTree);\n    }).catch(function (err) {\n      showError(\"Cannot get Location Tree data.\");\n    });\n  };\n\n  var selectLocationTreeNode = function selectLocationTreeNode(node) {\n    var id = \"summary-id-\" + node.id;\n    var getId = document.getElementById(id);\n    var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n    for (var i = 0; i < getElements.length; i++) {\n      getElements[i].classList.remove('tree-nav-item');\n    }\n\n    if (getId) {\n      getId.classList.add('tree-nav-item');\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"locationId\": node.id\n      }));\n    }\n\n    if (locationIds.length !== 0) {\n      // for clear state\n      locationIds.length = 0;\n    }\n\n    getLocationIds(node);\n  };\n\n  var getLocationIds = function getLocationIds(node) {\n    var temp = _toConsumableArray(locationIds);\n\n    var index = temp.findIndex(function (id) {\n      return id === node.id;\n    });\n\n    if (index === -1) {\n      locationIds.push(node.id);\n    }\n\n    node.children.map(function (nodeChild) {\n      getLocationIds(nodeChild);\n    });\n  };\n\n  var getSalesOfficerListByLocation = function getSalesOfficerListByLocation(locationId, companyId) {\n    if (locationIds.length === 0) {\n      showError('Please Select Location');\n      return false;\n    }\n\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/auth/get-sales-officer-location/\").concat(locationId, \"/\").concat(companyId);\n    axios.get(URL).then(function (response) {\n      if (response.data.data != undefined) {\n        setSalesOfficerList(response.data.data);\n      } else {\n        setSalesOfficerList([]);\n        setSalesOfficerValue('');\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Sales Officer data.\");\n    });\n  };\n\n  var getAllDistributorList = function getAllDistributorList(userLoginId, locationId, companyId) {\n    if (locationIds.length === 0) {\n      showError('Please Select Location');\n      return false;\n    }\n\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/distributor/distributorList/\").concat(userLoginId, \"/\").concat(locationId, \"/\").concat(companyId); //API call from backend\n\n    axios.get(URL).then(function (response) {\n      //get data in response\n      if (response.data.data != undefined && response.data.data.length != 0) {\n        setDistributorList(response.data.data);\n      } else {\n        setDistributorList([]);\n        setDistributorValue('');\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Distributor data.\");\n    });\n  };\n\n  var handleChange = function handleChange(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    setInputs(function (values) {\n      return _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var validate = function validate() {\n    if (locationIds.length === 0) {\n      showError('Location is required');\n      return false;\n    } else if (!inputs.salesOfficerId) {\n      showError('Sales Officer is required');\n      return false;\n    } else if (!inputs.distributorId) {\n      showError('Distributor Name is required.');\n      return false;\n    } else if (!inputs.startDate) {\n      showError(\"Start date  is required\");\n      return false;\n    } else if (!inputs.endDate) {\n      showError(\"End date is required\");\n      return false;\n    } else if (inputs.endDate < inputs.startDate) {\n      showError(\"End Date should be greater than Start Date\");\n      return false;\n    } else if (!inputs.reportFormate) {\n      showError('Report Format is required');\n      return false;\n    }\n\n    return true;\n  };\n\n  var submit = function submit() {\n    if (!validate()) {\n      return false;\n    }\n\n    var queryParams = '?locationId=' + inputs.locationId;\n    queryParams += '&reportFormate=' + inputs.reportFormate;\n    queryParams += '&companyId=' + selectedCompany;\n    queryParams += '&locationIds=' + locationIds;\n    queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n    queryParams += '&distributorId=' + inputs.distributorId;\n    queryParams += '&startDate=' + inputs.startDate;\n    queryParams += '&endDate=' + inputs.endDate;\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/report/debit-credit-note\") + queryParams;\n    axios.get(URL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      if (inputs.reportFormate === \"PDF\") {\n        var url = window.URL.createObjectURL(new Blob([response.data]));\n        var link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', \"DebitCreditNoteDistributorWiseReport.pdf\");\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        var _url = window.URL.createObjectURL(new Blob([response.data]));\n\n        var _link = document.createElement('a');\n\n        _link.href = _url;\n\n        _link.setAttribute('download', \"Debit_Credit_Note_Report.xlsx\");\n\n        document.body.appendChild(_link);\n\n        _link.click();\n\n        document.body.removeChild(_link);\n      }\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MisReportBreadCrum, {\n    menuTitle: \"Debit Credit Note Report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-3\",\n    style: {\n      borderRight: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottom: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc3.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginLeft: \"10px\",\n      color: \"#828282\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 41\n    }\n  }, intl.formatMessage({\n    id: \"COMMON.LOCATION_ALL\"\n  })))), /*#__PURE__*/React.createElement(LocationTreeView, {\n    tree: locationTree,\n    selectLocationTreeNode: selectLocationTreeNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 45\n    }\n  }, \"Sales Officer\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 89\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 128\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    name: \"salesOfficerId\",\n    options: salesOfficerList,\n    onKeyDown: function onKeyDown(e) {\n      getSalesOfficerListByLocation(inputs.locationId, selectedCompany);\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.salesOfficerName;\n    },\n    value: salesOfficerValue,\n    onChange: function onChange(event, newValue) {\n      setSalesOfficerValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          salesOfficerId: newValue.id\n        }));\n      } else {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          salesOfficerId: ''\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Sales Officer*\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 53\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 72\n    }\n  }, \"Distributor\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 106\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(Autocomplete, {\n    name: \"distributorId\",\n    options: distributorList,\n    onKeyDown: function onKeyDown(e) {\n      getAllDistributorList(userLoginId, inputs.locationId, selectedCompany);\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.distributorName;\n    },\n    value: distributorValue,\n    onChange: function onChange(event, newValue) {\n      setDistributorValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          distributorId: newValue.distributorId\n        }));\n      } else {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          distributorId: ''\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Distributor*\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 49\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 41\n    }\n  }, \"Start Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 82\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"startDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"startDate\",\n    value: inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 41\n    }\n  }, \"End Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 80\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"endDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"endDate\",\n    value: inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    required: true,\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 76\n    }\n  }, \"Report Format\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 86\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"reportFormate\",\n    name: \"reportFormate\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 49\n    }\n  }, \"Select Report Format\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"PDF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 49\n    }\n  }, \"PDF\"))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 33\n    }\n  }, \"Submit\")))))));\n}","map":{"version":3,"names":["React","useEffect","useState","toAbsoluteUrl","Card","CardBody","LocationTreeView","showError","axios","useIntl","shallowEqual","useSelector","Autocomplete","TextField","Button","moment","Flatpickr","MisReportBreadCrum","DebitCreditNoteReport","fields","locationId","salesOfficerId","distributorId","startDate","endDate","report","reportType","intl","inputs","setInputs","selectedCompany","state","auth","company","userLoginId","user","userId","locationTree","setLocationTree","locationIds","setLocationIds","salesOfficerList","setSalesOfficerList","salesOfficerValue","setSalesOfficerValue","distributorValue","setDistributorValue","distributorList","setDistributorList","showReport","setShowReport","reportData","setReportData","getLocationTreeList","companyId","params","URL","process","env","REACT_APP_API_URL","get","then","response","data","catch","err","selectLocationTreeNode","node","id","getId","document","getElementById","getElements","getElementsByClassName","i","length","classList","remove","add","getLocationIds","temp","index","findIndex","push","children","map","nodeChild","getSalesOfficerListByLocation","undefined","getAllDistributorList","handleChange","event","name","target","value","values","validate","reportFormate","submit","queryParams","responseType","url","window","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","removeChild","borderRight","borderBottom","width","height","textAlign","marginLeft","color","formatMessage","marginTop","e","option","salesOfficerName","newValue","distributorName","format","dateFormat","Date"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/DebitCreditNoteReport.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {toAbsoluteUrl} from \"../../../../../_metronic/_helpers\";\nimport {Card, CardBody} from \"../../../../../_metronic/_partials/controls\";\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport {showError} from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport {useIntl} from \"react-intl\";\nimport {shallowEqual, useSelector} from \"react-redux\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {TextField} from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\n\n\nexport default function DebitCreditNoteReport() {\n\n    const fields = {\n        locationId: \"\",\n        salesOfficerId: \"\",\n        distributorId: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        report: \"\",\n        reportType: \"\"\n    };\n\n    const intl = useIntl();\n    const [inputs, setInputs] = useState(fields);\n    const selectedCompany = useSelector((state) => state.auth.company, shallowEqual);\n    const userLoginId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const [locationTree, setLocationTree] = useState([]);\n    const [locationIds, setLocationIds] = useState([]);\n    const [salesOfficerList, setSalesOfficerList] = useState([]);\n    const [salesOfficerValue, setSalesOfficerValue] = useState(null);\n    const [distributorValue, setDistributorValue] = useState(null);\n    const [distributorList, setDistributorList] = useState([]);\n    const [showReport, setShowReport] = useState('');\n    const [reportData, setReportData] = useState([]);\n\n    useEffect(() => {\n        getLocationTreeList({userLoginId: userLoginId, companyId: selectedCompany});\n    }, [userLoginId, selectedCompany]);\n\n    const getLocationTreeList = (params) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/location-tree/locationTree/${params.userLoginId}/${params.companyId}`;\n        axios.get(URL).then(response => {\n            const locationTree = response.data.data;\n            setLocationTree(locationTree);\n        }).catch(err => {\n            showError(\"Cannot get Location Tree data.\");\n        });\n    }\n\n    const selectLocationTreeNode = (node) => {\n        let id = \"summary-id-\" + node.id;\n        const getId = document.getElementById(id);\n        const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n        for (let i = 0; i < getElements.length; i++) {\n            getElements[i].classList.remove('tree-nav-item');\n        }\n        if (getId) {\n            getId.classList.add('tree-nav-item');\n            setInputs({...inputs, \"locationId\": node.id})\n        }\n        if (locationIds.length !== 0) { // for clear state\n            locationIds.length = 0;\n        }\n        getLocationIds(node);\n    }\n\n    const getLocationIds = (node) => {\n        let temp = [...locationIds]\n        let index = temp.findIndex(id => id === node.id)\n        if (index === -1) {\n            locationIds.push(node.id)\n        }\n        node.children.map(nodeChild => {\n            getLocationIds(nodeChild)\n        })\n    }\n\n    const getSalesOfficerListByLocation = (locationId, companyId) => {\n        if (locationIds.length === 0) {\n            showError('Please Select Location');\n            return false;\n        }\n\n        const URL = `${process.env.REACT_APP_API_URL}/auth/get-sales-officer-location/${locationId}/${companyId}`;\n        axios.get(URL).then(response => {\n            if (response.data.data != undefined) {\n                setSalesOfficerList(response.data.data);\n            } else {\n                setSalesOfficerList([]);\n                setSalesOfficerValue('');\n            }\n        }).catch(err => {\n            showError(\"Cannot get Sales Officer data.\");\n        });\n    }\n\n    const getAllDistributorList = (userLoginId, locationId, companyId) => {\n        if (locationIds.length === 0) {\n            showError('Please Select Location');\n            return false;\n        }\n        const URL = `${process.env.REACT_APP_API_URL}/api/distributor/distributorList/${userLoginId}/${locationId}/${companyId}`;//API call from backend\n        axios.get(URL).then(response => {//get data in response\n            if (response.data.data != undefined && response.data.data.length != 0) {\n                setDistributorList(response.data.data);\n            } else {\n                setDistributorList([]);\n                setDistributorValue('');\n            }\n        }).catch(err => {\n            showError(\"Cannot get Distributor data.\");\n        });\n    }\n\n    const handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setInputs(values => ({...values, [name]: value}))\n    }\n\n    const validate = () => {\n        if (locationIds.length === 0) {\n            showError('Location is required');\n            return false;\n        } else if (!inputs.salesOfficerId) {\n            showError('Sales Officer is required');\n            return false;\n        } else if (!inputs.distributorId) {\n            showError('Distributor Name is required.');\n            return false;\n        } else if (!inputs.startDate) {\n            showError(\"Start date  is required\");\n            return false;\n        } else if (!inputs.endDate) {\n            showError(\"End date is required\");\n            return false;\n        } else if (inputs.endDate < inputs.startDate) {\n            showError(\"End Date should be greater than Start Date\");\n            return false;\n        } else if (!inputs.reportFormate) {\n            showError('Report Format is required');\n            return false;\n        }\n        return true;\n    }\n\n    const submit = () => {\n        if (!validate()) {\n            return false;\n        }\n        let queryParams = '?locationId=' + inputs.locationId;\n        queryParams += '&reportFormate=' + inputs.reportFormate;\n        queryParams += '&companyId=' + selectedCompany;\n        queryParams += '&locationIds=' + locationIds;\n        queryParams += '&salesOfficerId=' + inputs.salesOfficerId;\n        queryParams += '&distributorId=' + inputs.distributorId;\n        queryParams += '&startDate=' + inputs.startDate;\n        queryParams += '&endDate=' + inputs.endDate;\n\n        const URL = `${process.env.REACT_APP_API_URL}/api/report/debit-credit-note` + queryParams;\n        axios.get(URL, {responseType: 'blob'}).then(response => {\n            if (inputs.reportFormate === \"PDF\") {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', \"DebitCreditNoteDistributorWiseReport.pdf\");\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            } else {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', \"Debit_Credit_Note_Report.xlsx\");\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            }\n        }).catch(err => {\n            showError();\n        });\n    }\n\n    return (\n        <>\n            <div>\n                <MisReportBreadCrum menuTitle=\"Debit Credit Note Report\"/>\n            </div>\n            <div>\n\n            </div>\n            <div>\n                <Card>\n                    <CardBody>\n                        <div className='row'>\n                            {/* LEFT SIDE TREE ROW */}\n                            <div className='col-xl-3' style={{borderRight: \"1px solid #F2F2F2\"}}>\n                                <div style={{borderBottom: \"1px solid #F2F2F2\"}}>\n                                    <label>\n                                        <img src={toAbsoluteUrl(\"/images/loc3.png\")}\n                                             style={{width: \"20px\", height: \"20px\", textAlign: \"center\"}}\n                                             alt='Company Picture'/>\n                                        <strong style={{\n                                            marginLeft: \"10px\",\n                                            color: \"#828282\"\n                                        }}>{intl.formatMessage({id: \"COMMON.LOCATION_ALL\"})}</strong>\n                                    </label>\n                                </div>\n                                {/* TREE */}\n                                <LocationTreeView tree={locationTree} selectLocationTreeNode={selectLocationTreeNode}/>\n                            </div>\n                            {/* RIGHT SIDE LIST ROW */}\n                            <div className='col-xl-9'>\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <div style={{marginTop: \"5px\"}}>\n                                            <label className='level-title'>Sales Officer<i style={{color: \"red\"}}>*</i></label><br/>\n                                            <Autocomplete\n                                                name=\"salesOfficerId\"\n                                                options={salesOfficerList}\n                                                onKeyDown={e => {\n                                                    getSalesOfficerListByLocation(inputs.locationId, selectedCompany)\n                                                }}\n                                                getOptionLabel={(option) => option.salesOfficerName}\n                                                value={salesOfficerValue}\n                                                onChange={(event, newValue) => {\n                                                    setSalesOfficerValue(newValue)\n                                                    if (newValue !== null) {\n                                                        setInputs({...inputs, salesOfficerId: newValue.id});\n                                                    } else {\n                                                        setInputs({...inputs, salesOfficerId: ''});\n                                                    }\n                                                }}\n                                                renderInput={(params) => (\n                                                    <TextField {...params} label=\"Select Sales Officer*\"/>\n                                                )}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <label className='level-title'><span className=\"mr-1\">Distributor<i\n                                            style={{color: \"red\"}}>*</i></span></label>\n                                        <Autocomplete\n                                            name=\"distributorId\"\n                                            options={distributorList}\n                                            onKeyDown={e => {\n                                                getAllDistributorList(userLoginId, inputs.locationId, selectedCompany)\n                                            }}\n                                            getOptionLabel={(option) => option.distributorName}\n                                            value={distributorValue}\n                                            onChange={(event, newValue) => {\n                                                setDistributorValue(newValue)\n                                                if (newValue !== null) {\n                                                    setInputs({...inputs, distributorId: newValue.distributorId});\n                                                } else {\n                                                    setInputs({...inputs, distributorId: ''});\n                                                }\n                                            }}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Select Distributor*\"/>\n                                            )}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>Start Date<i style={{color: \"red\"}}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"startDate\" placeholder=\"dd-MM-yy\"\n                                                   name='startDate'\n                                                   value={inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                                   options={{dateFormat: \"d-M-Y\"}}\n                                                   onChange={(value) => {\n                                                       setInputs({\n                                                           ...inputs,\n                                                           \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                       })\n                                                   }}\n                                        />\n                                    </div>\n                                </div>\n\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>End Date<i style={{color: \"red\"}}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"endDate\" placeholder=\"dd-MM-yy\"\n                                                   name='endDate'\n                                                   value={inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                                   options={{dateFormat: \"d-M-Y\"}} required\n                                                   onChange={(value) => {\n                                                       setInputs({\n                                                           ...inputs,\n                                                           \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                       })\n                                                   }}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span\n                                                className=\"mr-1\">Report Format</span><span\n                                                className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportFormate\" name=\"reportFormate\"\n                                                    onChange={(e) => handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report Format</option>\n                                                <option value=\"PDF\">PDF</option>\n                                                {/*<option value=\"EXCEL\">EXCEL</option>*/}\n\n                                                {/* {\n                                                allReport.map((report)=>(\n                                                <option key={report.id} value={report.id}>\n                                                    {report.name}\n                                                </option> \n                                                ))\n                                            }    */}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <Button className=\"float-right mt-5\" id=\"gotItBtn\" variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={submit}\n                                >\n                                    Submit\n                                </Button>\n                            </div>\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        </>\n    );\n}"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,aAAR,QAA4B,mCAA5B;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,6CAA7B;AACA,OAAOC,gBAAP,MAA6B,4DAA7B;AACA,SAAQC,SAAR,QAAwB,yBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,0CAAP;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AAGA,eAAe,SAASC,qBAAT,GAAiC;EAAA;;EAE5C,IAAMC,MAAM,GAAG;IACXC,UAAU,EAAE,EADD;IAEXC,cAAc,EAAE,EAFL;IAGXC,aAAa,EAAE,EAHJ;IAIXC,SAAS,EAAE,EAJA;IAKXC,OAAO,EAAE,EALE;IAMXC,MAAM,EAAE,EANG;IAOXC,UAAU,EAAE;EAPD,CAAf;EAUA,IAAMC,IAAI,GAAGlB,OAAO,EAApB;;EACA,gBAA4BP,QAAQ,CAACiB,MAAD,CAApC;EAAA;EAAA,IAAOS,MAAP;EAAA,IAAeC,SAAf;;EACA,IAAMC,eAAe,GAAGnB,WAAW,CAAC,UAACoB,KAAD;IAAA,OAAWA,KAAK,CAACC,IAAN,CAAWC,OAAtB;EAAA,CAAD,EAAgCvB,YAAhC,CAAnC;EACA,IAAMwB,WAAW,GAAGvB,WAAW,CAAC,UAACoB,KAAD;IAAA,OAAWA,KAAK,CAACC,IAAN,CAAWG,IAAX,CAAgBC,MAA3B;EAAA,CAAD,EAAoC1B,YAApC,CAA/B;;EACA,iBAAwCR,QAAQ,CAAC,EAAD,CAAhD;EAAA;EAAA,IAAOmC,YAAP;EAAA,IAAqBC,eAArB;;EACA,iBAAsCpC,QAAQ,CAAC,EAAD,CAA9C;EAAA;EAAA,IAAOqC,WAAP;EAAA,IAAoBC,cAApB;;EACA,iBAAgDtC,QAAQ,CAAC,EAAD,CAAxD;EAAA;EAAA,IAAOuC,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,iBAAkDxC,QAAQ,CAAC,IAAD,CAA1D;EAAA;EAAA,IAAOyC,iBAAP;EAAA,IAA0BC,oBAA1B;;EACA,kBAAgD1C,QAAQ,CAAC,IAAD,CAAxD;EAAA;EAAA,IAAO2C,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,kBAA8C5C,QAAQ,CAAC,EAAD,CAAtD;EAAA;EAAA,IAAO6C,eAAP;EAAA,IAAwBC,kBAAxB;;EACA,kBAAoC9C,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAO+C,UAAP;EAAA,IAAmBC,aAAnB;;EACA,kBAAoChD,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOiD,UAAP;EAAA,IAAmBC,aAAnB;;EAEAnD,SAAS,CAAC,YAAM;IACZoD,mBAAmB,CAAC;MAACnB,WAAW,EAAEA,WAAd;MAA2BoB,SAAS,EAAExB;IAAtC,CAAD,CAAnB;EACH,CAFQ,EAEN,CAACI,WAAD,EAAcJ,eAAd,CAFM,CAAT;;EAIA,IAAMuB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACE,MAAD,EAAY;IACpC,IAAMC,GAAG,aAAMC,OAAO,CAACC,GAAR,CAAYC,iBAAlB,6CAAsEJ,MAAM,CAACrB,WAA7E,cAA4FqB,MAAM,CAACD,SAAnG,CAAT;IACA9C,KAAK,CAACoD,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CAAoB,UAAAC,QAAQ,EAAI;MAC5B,IAAMzB,YAAY,GAAGyB,QAAQ,CAACC,IAAT,CAAcA,IAAnC;MACAzB,eAAe,CAACD,YAAD,CAAf;IACH,CAHD,EAGG2B,KAHH,CAGS,UAAAC,GAAG,EAAI;MACZ1D,SAAS,CAAC,gCAAD,CAAT;IACH,CALD;EAMH,CARD;;EAUA,IAAM2D,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,IAAD,EAAU;IACrC,IAAIC,EAAE,GAAG,gBAAgBD,IAAI,CAACC,EAA9B;IACA,IAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAd;IACA,IAAMI,WAAW,GAAGF,QAAQ,CAACG,sBAAT,CAAgC,0CAAhC,CAApB;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACG,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;MACzCF,WAAW,CAACE,CAAD,CAAX,CAAeE,SAAf,CAAyBC,MAAzB,CAAgC,eAAhC;IACH;;IACD,IAAIR,KAAJ,EAAW;MACPA,KAAK,CAACO,SAAN,CAAgBE,GAAhB,CAAoB,eAApB;MACAjD,SAAS,iCAAKD,MAAL;QAAa,cAAcuC,IAAI,CAACC;MAAhC,GAAT;IACH;;IACD,IAAI7B,WAAW,CAACoC,MAAZ,KAAuB,CAA3B,EAA8B;MAAE;MAC5BpC,WAAW,CAACoC,MAAZ,GAAqB,CAArB;IACH;;IACDI,cAAc,CAACZ,IAAD,CAAd;EACH,CAhBD;;EAkBA,IAAMY,cAAc,GAAG,SAAjBA,cAAiB,CAACZ,IAAD,EAAU;IAC7B,IAAIa,IAAI,sBAAOzC,WAAP,CAAR;;IACA,IAAI0C,KAAK,GAAGD,IAAI,CAACE,SAAL,CAAe,UAAAd,EAAE;MAAA,OAAIA,EAAE,KAAKD,IAAI,CAACC,EAAhB;IAAA,CAAjB,CAAZ;;IACA,IAAIa,KAAK,KAAK,CAAC,CAAf,EAAkB;MACd1C,WAAW,CAAC4C,IAAZ,CAAiBhB,IAAI,CAACC,EAAtB;IACH;;IACDD,IAAI,CAACiB,QAAL,CAAcC,GAAd,CAAkB,UAAAC,SAAS,EAAI;MAC3BP,cAAc,CAACO,SAAD,CAAd;IACH,CAFD;EAGH,CATD;;EAWA,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACnE,UAAD,EAAakC,SAAb,EAA2B;IAC7D,IAAIf,WAAW,CAACoC,MAAZ,KAAuB,CAA3B,EAA8B;MAC1BpE,SAAS,CAAC,wBAAD,CAAT;MACA,OAAO,KAAP;IACH;;IAED,IAAMiD,GAAG,aAAMC,OAAO,CAACC,GAAR,CAAYC,iBAAlB,8CAAuEvC,UAAvE,cAAqFkC,SAArF,CAAT;IACA9C,KAAK,CAACoD,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CAAoB,UAAAC,QAAQ,EAAI;MAC5B,IAAIA,QAAQ,CAACC,IAAT,CAAcA,IAAd,IAAsByB,SAA1B,EAAqC;QACjC9C,mBAAmB,CAACoB,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAnB;MACH,CAFD,MAEO;QACHrB,mBAAmB,CAAC,EAAD,CAAnB;QACAE,oBAAoB,CAAC,EAAD,CAApB;MACH;IACJ,CAPD,EAOGoB,KAPH,CAOS,UAAAC,GAAG,EAAI;MACZ1D,SAAS,CAAC,gCAAD,CAAT;IACH,CATD;EAUH,CAjBD;;EAmBA,IAAMkF,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACvD,WAAD,EAAcd,UAAd,EAA0BkC,SAA1B,EAAwC;IAClE,IAAIf,WAAW,CAACoC,MAAZ,KAAuB,CAA3B,EAA8B;MAC1BpE,SAAS,CAAC,wBAAD,CAAT;MACA,OAAO,KAAP;IACH;;IACD,IAAMiD,GAAG,aAAMC,OAAO,CAACC,GAAR,CAAYC,iBAAlB,8CAAuEzB,WAAvE,cAAsFd,UAAtF,cAAoGkC,SAApG,CAAT,CALkE,CAKuD;;IACzH9C,KAAK,CAACoD,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CAAoB,UAAAC,QAAQ,EAAI;MAAC;MAC7B,IAAIA,QAAQ,CAACC,IAAT,CAAcA,IAAd,IAAsByB,SAAtB,IAAmC1B,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBY,MAAnB,IAA6B,CAApE,EAAuE;QACnE3B,kBAAkB,CAACc,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAlB;MACH,CAFD,MAEO;QACHf,kBAAkB,CAAC,EAAD,CAAlB;QACAF,mBAAmB,CAAC,EAAD,CAAnB;MACH;IACJ,CAPD,EAOGkB,KAPH,CAOS,UAAAC,GAAG,EAAI;MACZ1D,SAAS,CAAC,8BAAD,CAAT;IACH,CATD;EAUH,CAhBD;;EAkBA,IAAMmF,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;IAC5B,IAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAAxB;IACA,IAAIE,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAAzB;IACAjE,SAAS,CAAC,UAAAkE,MAAM;MAAA,uCAASA,MAAT,2BAAkBH,IAAlB,EAAyBE,KAAzB;IAAA,CAAP,CAAT;EACH,CAJD;;EAMA,IAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACnB,IAAIzD,WAAW,CAACoC,MAAZ,KAAuB,CAA3B,EAA8B;MAC1BpE,SAAS,CAAC,sBAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHD,MAGO,IAAI,CAACqB,MAAM,CAACP,cAAZ,EAA4B;MAC/Bd,SAAS,CAAC,2BAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAI,CAACqB,MAAM,CAACN,aAAZ,EAA2B;MAC9Bf,SAAS,CAAC,+BAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAI,CAACqB,MAAM,CAACL,SAAZ,EAAuB;MAC1BhB,SAAS,CAAC,yBAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAI,CAACqB,MAAM,CAACJ,OAAZ,EAAqB;MACxBjB,SAAS,CAAC,sBAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAIqB,MAAM,CAACJ,OAAP,GAAiBI,MAAM,CAACL,SAA5B,EAAuC;MAC1ChB,SAAS,CAAC,4CAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHM,MAGA,IAAI,CAACqB,MAAM,CAACqE,aAAZ,EAA2B;MAC9B1F,SAAS,CAAC,2BAAD,CAAT;MACA,OAAO,KAAP;IACH;;IACD,OAAO,IAAP;EACH,CAxBD;;EA0BA,IAAM2F,MAAM,GAAG,SAATA,MAAS,GAAM;IACjB,IAAI,CAACF,QAAQ,EAAb,EAAiB;MACb,OAAO,KAAP;IACH;;IACD,IAAIG,WAAW,GAAG,iBAAiBvE,MAAM,CAACR,UAA1C;IACA+E,WAAW,IAAI,oBAAoBvE,MAAM,CAACqE,aAA1C;IACAE,WAAW,IAAI,gBAAgBrE,eAA/B;IACAqE,WAAW,IAAI,kBAAkB5D,WAAjC;IACA4D,WAAW,IAAI,qBAAqBvE,MAAM,CAACP,cAA3C;IACA8E,WAAW,IAAI,oBAAoBvE,MAAM,CAACN,aAA1C;IACA6E,WAAW,IAAI,gBAAgBvE,MAAM,CAACL,SAAtC;IACA4E,WAAW,IAAI,cAAcvE,MAAM,CAACJ,OAApC;IAEA,IAAMgC,GAAG,GAAG,UAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAf,qCAAkEwC,WAA9E;IACA3F,KAAK,CAACoD,GAAN,CAAUJ,GAAV,EAAe;MAAC4C,YAAY,EAAE;IAAf,CAAf,EAAuCvC,IAAvC,CAA4C,UAAAC,QAAQ,EAAI;MACpD,IAAIlC,MAAM,CAACqE,aAAP,KAAyB,KAA7B,EAAoC;QAChC,IAAMI,GAAG,GAAGC,MAAM,CAAC9C,GAAP,CAAW+C,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAAC1C,QAAQ,CAACC,IAAV,CAAT,CAA3B,CAAZ;QACA,IAAM0C,IAAI,GAAGnC,QAAQ,CAACoC,aAAT,CAAuB,GAAvB,CAAb;QACAD,IAAI,CAACE,IAAL,GAAYN,GAAZ;QACAI,IAAI,CAACG,YAAL,CAAkB,UAAlB,EAA8B,0CAA9B;QACAtC,QAAQ,CAACuC,IAAT,CAAcC,WAAd,CAA0BL,IAA1B;QACAA,IAAI,CAACM,KAAL;QACAzC,QAAQ,CAACuC,IAAT,CAAcG,WAAd,CAA0BP,IAA1B;MACH,CARD,MAQO;QACH,IAAMJ,IAAG,GAAGC,MAAM,CAAC9C,GAAP,CAAW+C,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAAC1C,QAAQ,CAACC,IAAV,CAAT,CAA3B,CAAZ;;QACA,IAAM0C,KAAI,GAAGnC,QAAQ,CAACoC,aAAT,CAAuB,GAAvB,CAAb;;QACAD,KAAI,CAACE,IAAL,GAAYN,IAAZ;;QACAI,KAAI,CAACG,YAAL,CAAkB,UAAlB,EAA8B,+BAA9B;;QACAtC,QAAQ,CAACuC,IAAT,CAAcC,WAAd,CAA0BL,KAA1B;;QACAA,KAAI,CAACM,KAAL;;QACAzC,QAAQ,CAACuC,IAAT,CAAcG,WAAd,CAA0BP,KAA1B;MACH;IACJ,CAlBD,EAkBGzC,KAlBH,CAkBS,UAAAC,GAAG,EAAI;MACZ1D,SAAS;IACZ,CApBD;EAqBH,CAnCD;;EAqCA,oBACI,uDACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,kBAAD;IAAoB,SAAS,EAAC,0BAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ,eAII;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJJ,eAOI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,IAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI;IAAK,SAAS,EAAC,UAAf;IAA0B,KAAK,EAAE;MAAC0G,WAAW,EAAE;IAAd,CAAjC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,KAAK,EAAE;MAACC,YAAY,EAAE;IAAf,CAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,GAAG,EAAE/G,aAAa,CAAC,kBAAD,CAAvB;IACK,KAAK,EAAE;MAACgH,KAAK,EAAE,MAAR;MAAgBC,MAAM,EAAE,MAAxB;MAAgCC,SAAS,EAAE;IAA3C,CADZ;IAEK,GAAG,EAAC,iBAFT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAII;IAAQ,KAAK,EAAE;MACXC,UAAU,EAAE,MADD;MAEXC,KAAK,EAAE;IAFI,CAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAGI5F,IAAI,CAAC6F,aAAL,CAAmB;IAACpD,EAAE,EAAE;EAAL,CAAnB,CAHJ,CAJJ,CADJ,CADJ,eAaI,oBAAC,gBAAD;IAAkB,IAAI,EAAE/B,YAAxB;IAAsC,sBAAsB,EAAE6B,sBAA9D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAbJ,CAFJ,eAkBI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,KAAK,EAAE;MAACuD,SAAS,EAAE;IAAZ,CAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iCAA4C;IAAG,KAAK,EAAE;MAACF,KAAK,EAAE;IAAR,CAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAA5C,CADJ,eACuF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADvF,eAEI,oBAAC,YAAD;IACI,IAAI,EAAC,gBADT;IAEI,OAAO,EAAE9E,gBAFb;IAGI,SAAS,EAAE,mBAAAiF,CAAC,EAAI;MACZnC,6BAA6B,CAAC3D,MAAM,CAACR,UAAR,EAAoBU,eAApB,CAA7B;IACH,CALL;IAMI,cAAc,EAAE,wBAAC6F,MAAD;MAAA,OAAYA,MAAM,CAACC,gBAAnB;IAAA,CANpB;IAOI,KAAK,EAAEjF,iBAPX;IAQI,QAAQ,EAAE,kBAACgD,KAAD,EAAQkC,QAAR,EAAqB;MAC3BjF,oBAAoB,CAACiF,QAAD,CAApB;;MACA,IAAIA,QAAQ,KAAK,IAAjB,EAAuB;QACnBhG,SAAS,iCAAKD,MAAL;UAAaP,cAAc,EAAEwG,QAAQ,CAACzD;QAAtC,GAAT;MACH,CAFD,MAEO;QACHvC,SAAS,iCAAKD,MAAL;UAAaP,cAAc,EAAE;QAA7B,GAAT;MACH;IACJ,CAfL;IAgBI,WAAW,EAAE,qBAACkC,MAAD;MAAA,oBACT,oBAAC,SAAD,oBAAeA,MAAf;QAAuB,KAAK,EAAC,uBAA7B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GADS;IAAA,CAhBjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CADJ,CADJ,CADJ,eA6BI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAA+B;IAAM,SAAS,EAAC,MAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,+BAAkC;IAC7D,KAAK,EAAE;MAACgE,KAAK,EAAE;IAAR,CADsD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAlC,CAA/B,CADJ,eAGI,oBAAC,YAAD;IACI,IAAI,EAAC,eADT;IAEI,OAAO,EAAExE,eAFb;IAGI,SAAS,EAAE,mBAAA2E,CAAC,EAAI;MACZjC,qBAAqB,CAACvD,WAAD,EAAcN,MAAM,CAACR,UAArB,EAAiCU,eAAjC,CAArB;IACH,CALL;IAMI,cAAc,EAAE,wBAAC6F,MAAD;MAAA,OAAYA,MAAM,CAACG,eAAnB;IAAA,CANpB;IAOI,KAAK,EAAEjF,gBAPX;IAQI,QAAQ,EAAE,kBAAC8C,KAAD,EAAQkC,QAAR,EAAqB;MAC3B/E,mBAAmB,CAAC+E,QAAD,CAAnB;;MACA,IAAIA,QAAQ,KAAK,IAAjB,EAAuB;QACnBhG,SAAS,iCAAKD,MAAL;UAAaN,aAAa,EAAEuG,QAAQ,CAACvG;QAArC,GAAT;MACH,CAFD,MAEO;QACHO,SAAS,iCAAKD,MAAL;UAAaN,aAAa,EAAE;QAA5B,GAAT;MACH;IACJ,CAfL;IAgBI,WAAW,EAAE,qBAACiC,MAAD;MAAA,oBACT,oBAAC,SAAD,oBAAeA,MAAf;QAAuB,KAAK,EAAC,qBAA7B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GADS;IAAA,CAhBjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHJ,CADJ,CA7BJ,eAwDI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,qCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAAyC;IAAG,KAAK,EAAE;MAACgE,KAAK,EAAE;IAAR,CAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAzC,CADJ,eAEI,oBAAC,SAAD;IAAW,SAAS,EAAC,cAArB;IAAoC,EAAE,EAAC,WAAvC;IAAmD,WAAW,EAAC,UAA/D;IACW,IAAI,EAAC,WADhB;IAEW,KAAK,EAAE3F,MAAM,CAACL,SAAP,GAAmBR,MAAM,CAACa,MAAM,CAACL,SAAR,EAAmB,YAAnB,CAAN,CAAuCwG,MAAvC,CAA8C,aAA9C,CAAnB,GAAkF,EAFpG;IAGW,OAAO,EAAE;MAACC,UAAU,EAAE;IAAb,CAHpB;IAIW,QAAQ,EAAE,kBAAClC,KAAD,EAAW;MACjBjE,SAAS,iCACFD,MADE;QAEL,aAAab,MAAM,CAAC,IAAIkH,IAAJ,CAASnC,KAAT,CAAD,CAAN,CAAwBiC,MAAxB,CAA+B,YAA/B;MAFR,GAAT;IAIH,CATZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CADJ,CAxDJ,eA0EI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,qCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4BAAuC;IAAG,KAAK,EAAE;MAACR,KAAK,EAAE;IAAR,CAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAvC,CADJ,eAEI,oBAAC,SAAD;IAAW,SAAS,EAAC,cAArB;IAAoC,EAAE,EAAC,SAAvC;IAAiD,WAAW,EAAC,UAA7D;IACW,IAAI,EAAC,SADhB;IAEW,KAAK,EAAE3F,MAAM,CAACJ,OAAP,GAAiBT,MAAM,CAACa,MAAM,CAACJ,OAAR,EAAiB,YAAjB,CAAN,CAAqCuG,MAArC,CAA4C,aAA5C,CAAjB,GAA8E,EAFhG;IAGW,OAAO,EAAE;MAACC,UAAU,EAAE;IAAb,CAHpB;IAG2C,QAAQ,MAHnD;IAIW,QAAQ,EAAE,kBAAClC,KAAD,EAAW;MACjBjE,SAAS,iCACFD,MADE;QAEL,WAAWb,MAAM,CAAC,IAAIkH,IAAJ,CAASnC,KAAT,CAAD,CAAN,CAAwBiC,MAAxB,CAA+B,YAA/B;MAFN,GAAT;IAIH,CATZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CADJ,CA1EJ,eA2FI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,qCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAA+B;IAC3B,SAAS,EAAC,MADiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAA/B,eACyC;IACrC,SAAS,EAAC,cAD2B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OADzC,CADJ,eAII;IAAQ,SAAS,EAAC,cAAlB;IAAiC,EAAE,EAAC,eAApC;IAAoD,IAAI,EAAC,eAAzD;IACQ,QAAQ,EAAE,kBAACL,CAAD;MAAA,OAAOhC,YAAY,CAACgC,CAAD,CAAnB;IAAA,CADlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAGI;IAAQ,KAAK,EAAC,EAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,0BAHJ,eAII;IAAQ,KAAK,EAAC,KAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SAJJ,CAJJ,CADJ,CADJ,CA3FJ,eAoHI,oBAAC,MAAD;IAAQ,SAAS,EAAC,kBAAlB;IAAqC,EAAE,EAAC,UAAxC;IAAmD,OAAO,EAAC,WAA3D;IACQ,KAAK,EAAC,SADd;IAEQ,OAAO,EAAExB,MAFjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YApHJ,CAlBJ,CADJ,CADJ,CADJ,CAPJ,CADJ;AA8JH"},"metadata":{},"sourceType":"module"}