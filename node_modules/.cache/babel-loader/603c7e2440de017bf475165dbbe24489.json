{"ast":null,"code":"import _classCallCheck from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/ReactBootstrapExamples/AlertExamplesPage.js\";\nimport React from \"react\";\nimport { Alert, Button } from \"react-bootstrap\";\nimport { Notice, KTCodeExample } from \"../../../_metronic/_partials/controls\";\n\nvar AlertDismissible = /*#__PURE__*/function (_React$Component) {\n  _inherits(AlertDismissible, _React$Component);\n\n  var _super = _createSuper(AlertDismissible);\n\n  function AlertDismissible(props) {\n    var _this;\n\n    _classCallCheck(this, AlertDismissible);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      show: true\n    };\n    return _this;\n  }\n\n  _createClass(AlertDismissible, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var handleHide = function handleHide() {\n        return _this2.setState({\n          show: false\n        });\n      };\n\n      var handleShow = function handleShow() {\n        return _this2.setState({\n          show: true\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Alert, {\n        show: this.state.show,\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Alert.Heading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, \"How's it going?!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras mattis consectetur purus sit amet fermentum.\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: handleHide,\n        variant: \"outline-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, \"Close me ya'll!\"))), !this.state.show && /*#__PURE__*/React.createElement(Button, {\n        onClick: handleShow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 30\n        }\n      }, \"Show Alert\"));\n    }\n  }]);\n\n  return AlertDismissible;\n}(React.Component);\n\nvar AlertDismissibleExample = /*#__PURE__*/function (_React$Component2) {\n  _inherits(AlertDismissibleExample, _React$Component2);\n\n  var _super2 = _createSuper(AlertDismissibleExample);\n\n  function AlertDismissibleExample(props) {\n    var _this3;\n\n    _classCallCheck(this, AlertDismissibleExample);\n\n    _this3 = _super2.call(this, props);\n    _this3.state = {\n      show: true\n    };\n    return _this3;\n  }\n\n  _createClass(AlertDismissibleExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var handleDismiss = function handleDismiss() {\n        return _this4.setState({\n          show: false\n        });\n      };\n\n      var handleShow = function handleShow() {\n        return _this4.setState({\n          show: true\n        });\n      };\n\n      if (this.state.show) {\n        return /*#__PURE__*/React.createElement(Alert, {\n          variant: \"danger\",\n          onClose: handleDismiss,\n          dismissible: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Alert.Heading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }\n        }, \"Oh snap! You got an error!\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }\n        }, \"Change this and that and try again. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras mattis consectetur purus sit amet fermentum.\"));\n      }\n\n      return /*#__PURE__*/React.createElement(Button, {\n        onClick: handleShow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 12\n        }\n      }, \"Show Alert\");\n    }\n  }]);\n\n  return AlertDismissibleExample;\n}(React.Component);\n\nvar AlertExamplesPage = /*#__PURE__*/function (_React$Component3) {\n  _inherits(AlertExamplesPage, _React$Component3);\n\n  var _super3 = _createSuper(AlertExamplesPage);\n\n  function AlertExamplesPage() {\n    _classCallCheck(this, AlertExamplesPage);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(AlertExamplesPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n        icon: \"flaticon-warning font-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, \"Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        className: \"font-weight-bold\",\n        rel: \"noopener noreferrer\",\n        href: \"https://react-bootstrap.github.io/components/alerts/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode1,\n        beforeCodeTitle: \"Examples\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, \"Alerts are available for any length of text, as well as an optional dismiss button. For proper styling, use one of the eight \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }\n      }, \"variant\"), \"s.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"dark\"].map(function (variant, idx) {\n        return /*#__PURE__*/React.createElement(Alert, {\n          key: idx,\n          variant: variant,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }\n        }, \"This is a \", variant, \" alert\\u2014check it out!\");\n      }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode3,\n        beforeCodeTitle: \"Additional content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      }, \"Alerts can contain whatever content you like. Headers, paragraphs, dividers, go crazy.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Alert, {\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Alert.Heading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, \"Hey, nice to see you\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\"))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode4,\n        beforeCodeTitle: \"Dismissing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      }, \"Add the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }\n      }, \"dismissible\"), \" prop to add a functioning dismiss button to the Alert.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(AlertDismissibleExample, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode2,\n        beforeCodeTitle: \"Links\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }, \"For links, use the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 36\n        }\n      }, \"<Alert.Link>\"), \" component to provide matching colored links within any alert.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }\n      }, [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"dark\"].map(function (variant, idx) {\n        return /*#__PURE__*/React.createElement(Alert, {\n          key: idx,\n          variant: variant,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }\n        }, \"This is a \", variant, \" alert with \\xA0\", /*#__PURE__*/React.createElement(Alert.Link, {\n          href: \"#\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }\n        }, \"an example link\"), \". Give it a click if you like.\");\n      }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode5,\n        beforeCodeTitle: \"Dismissing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      }, \"You can also control the visual state directly which is great if you want to build more complicated alerts.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(AlertDismissible, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return AlertExamplesPage;\n}(React.Component);\n\nexport { AlertExamplesPage as default };\nvar jsCode1 = \"\\n[\\n  'primary',\\n  'secondary',\\n  'success',\\n  'danger',\\n  'warning',\\n  'info',\\n  'light',\\n  'dark',\\n].map((variant, idx) => (\\n  <Alert key={idx} variant={variant}>\\n    This is a {variant} alert\\u2014check it out!\\n  </Alert>\\n));\\n\";\nvar jsCode2 = \"\\n[\\n  'primary',\\n  'secondary',\\n  'success',\\n  'danger',\\n  'warning',\\n  'info',\\n  'light',\\n  'dark',\\n].map((variant, idx) => (\\n  <Alert key={idx} variant={variant}>\\n    This is a {variant} alert with{' '}\\n    <Alert.Link href=\\\"#\\\">an example link</Alert.Link>. Give it a click if you\\n    like.\\n  </Alert>\\n));\\n\";\nvar jsCode3 = \"\\n<Alert variant=\\\"success\\\">\\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\\n  <p>\\n    Aww yeah, you successfully read this important alert message. This example\\n    text is going to run a bit longer so that you can see how spacing within an\\n    alert works with this kind of content.\\n  </p>\\n  <hr />\\n  <p className=\\\"mb-0\\\">\\n    Whenever you need to, be sure to use margin utilities to keep things nice\\n    and tidy.\\n  </p>\\n</Alert>\\n\";\nvar jsCode4 = \"\\nclass AlertDismissibleExample extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      show: true,\\n    };\\n  }\\n\\n  render() {\\n    const handleDismiss = () => this.setState({ show: false });\\n    const handleShow = () => this.setState({ show: true });\\n    if (this.state.show) {\\n      return (\\n        <Alert variant=\\\"danger\\\" onClose={handleDismiss} dismissible>\\n          <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\\n          <p>\\n            Change this and that and try again. Duis mollis, est non commodo\\n            luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\\n            Cras mattis consectetur purus sit amet fermentum.\\n          </p>\\n        </Alert>\\n      );\\n    }\\n    return <Button onClick={handleShow}>Show Alert</Button>;\\n  }\\n}\\n\\nrender(<AlertDismissibleExample />);\\n\";\nvar jsCode5 = \"\\nclass AlertDismissible extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = { show: true };\\n  }\\n\\n  render() {\\n    const handleHide = () => this.setState({ show: false });\\n    const handleShow = () => this.setState({ show: true });\\n    return (\\n      <>\\n        <Alert show={this.state.show} variant=\\\"success\\\">\\n          <Alert.Heading>How's it going?!</Alert.Heading>\\n          <p>\\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula,\\n            eget lacinia odio sem nec elit. Cras mattis consectetur purus sit\\n            amet fermentum.\\n          </p>\\n          <hr />\\n          <div className=\\\"d-flex justify-content-end\\\">\\n            <Button onClick={handleHide} variant=\\\"outline-success\\\">\\n              Close me ya'll!\\n            </Button>\\n          </div>\\n        </Alert>\\n\\n        {!this.state.show && <Button onClick={handleShow}>Show Alert</Button>}\\n      </>\\n    );\\n  }\\n}\\n\\nrender(<AlertDismissible />);\\n\";","map":{"version":3,"names":["React","Alert","Button","Notice","KTCodeExample","AlertDismissible","props","state","show","handleHide","setState","handleShow","Component","AlertDismissibleExample","handleDismiss","AlertExamplesPage","jsCode1","map","variant","idx","jsCode3","jsCode4","jsCode2","jsCode5"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/ReactBootstrapExamples/AlertExamplesPage.js"],"sourcesContent":["import React from \"react\";\r\nimport {Alert, Button} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nclass AlertDismissible extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { show: true };\r\n  }\r\n\r\n  render() {\r\n    const handleHide = () => this.setState({ show: false });\r\n    const handleShow = () => this.setState({ show: true });\r\n    return (\r\n      <>\r\n        <Alert show={this.state.show} variant=\"success\">\r\n          <Alert.Heading>How's it going?!</Alert.Heading>\r\n          <p>\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula,\r\n            eget lacinia odio sem nec elit. Cras mattis consectetur purus sit\r\n            amet fermentum.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button onClick={handleHide} variant=\"outline-success\">\r\n              Close me ya'll!\r\n            </Button>\r\n          </div>\r\n        </Alert>\r\n\r\n        {!this.state.show && <Button onClick={handleShow}>Show Alert</Button>}\r\n      </>\r\n    );\r\n  }\r\n}\r\nclass AlertDismissibleExample extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const handleDismiss = () => this.setState({ show: false });\r\n    const handleShow = () => this.setState({ show: true });\r\n    if (this.state.show) {\r\n      return (\r\n        <Alert variant=\"danger\" onClose={handleDismiss} dismissible>\r\n          <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n          <p>\r\n            Change this and that and try again. Duis mollis, est non commodo\r\n            luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\r\n            Cras mattis consectetur purus sit amet fermentum.\r\n          </p>\r\n        </Alert>\r\n      );\r\n    }\r\n    return <Button onClick={handleShow}>Show Alert</Button>;\r\n  }\r\n}\r\n\r\nexport default class AlertExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Provide contextual feedback messages for typical user actions with\r\n            the handful of available and flexible alert messages.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/alerts/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Examples\">\r\n              <span>\r\n                Alerts are available for any length of text, as well as an\r\n                optional dismiss button. For proper styling, use one of the\r\n                eight <code>variant</code>s.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                {[\r\n                  \"primary\",\r\n                  \"secondary\",\r\n                  \"success\",\r\n                  \"danger\",\r\n                  \"warning\",\r\n                  \"info\",\r\n                  \"light\",\r\n                  \"dark\"\r\n                ].map((variant, idx) => (\r\n                  <Alert key={idx} variant={variant}>\r\n                    This is a {variant} alert—check it out!\r\n                  </Alert>\r\n                ))}\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode3}\r\n              beforeCodeTitle=\"Additional content\"\r\n            >\r\n              <span>\r\n                Alerts can contain whatever content you like. Headers,\r\n                paragraphs, dividers, go crazy.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Alert variant=\"success\">\r\n                <Alert.Heading>Hey, nice to see you</Alert.Heading>\r\n                <span className=\"pb-4\">\r\n                  Aww yeah, you successfully read this important alert message.\r\n                  This example text is going to run a bit longer so that you can\r\n                  see how spacing within an alert works with this kind of\r\n                  content.\r\n                </span>\r\n                <span>\r\n                  Whenever you need to, be sure to use margin utilities to keep\r\n                  things nice and tidy.\r\n                </span>\r\n              </Alert>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Dismissing\">\r\n              <span>\r\n                Add the <code>dismissible</code> prop to add a functioning\r\n                dismiss button to the Alert.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <AlertDismissibleExample />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Links\">\r\n              <span>\r\n                For links, use the <code>&lt;Alert.Link&gt;</code> component to\r\n                provide matching colored links within any alert.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div>\r\n                {[\r\n                  \"primary\",\r\n                  \"secondary\",\r\n                  \"success\",\r\n                  \"danger\",\r\n                  \"warning\",\r\n                  \"info\",\r\n                  \"light\",\r\n                  \"dark\"\r\n                ].map((variant, idx) => (\r\n                  <Alert key={idx} variant={variant}>\r\n                    This is a {variant} alert with &nbsp;\r\n                    <Alert.Link href=\"#\">an example link</Alert.Link>. Give it a\r\n                    click if you like.\r\n                  </Alert>\r\n                ))}\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Dismissing\">\r\n              <span>\r\n                You can also control the visual state directly which is great if\r\n                you want to build more complicated alerts.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <AlertDismissible />\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n[\r\n  'primary',\r\n  'secondary',\r\n  'success',\r\n  'danger',\r\n  'warning',\r\n  'info',\r\n  'light',\r\n  'dark',\r\n].map((variant, idx) => (\r\n  <Alert key={idx} variant={variant}>\r\n    This is a {variant} alert—check it out!\r\n  </Alert>\r\n));\r\n`;\r\nconst jsCode2 = `\r\n[\r\n  'primary',\r\n  'secondary',\r\n  'success',\r\n  'danger',\r\n  'warning',\r\n  'info',\r\n  'light',\r\n  'dark',\r\n].map((variant, idx) => (\r\n  <Alert key={idx} variant={variant}>\r\n    This is a {variant} alert with{' '}\r\n    <Alert.Link href=\"#\">an example link</Alert.Link>. Give it a click if you\r\n    like.\r\n  </Alert>\r\n));\r\n`;\r\nconst jsCode3 = `\r\n<Alert variant=\"success\">\r\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\r\n  <p>\r\n    Aww yeah, you successfully read this important alert message. This example\r\n    text is going to run a bit longer so that you can see how spacing within an\r\n    alert works with this kind of content.\r\n  </p>\r\n  <hr />\r\n  <p className=\"mb-0\">\r\n    Whenever you need to, be sure to use margin utilities to keep things nice\r\n    and tidy.\r\n  </p>\r\n</Alert>\r\n`;\r\nconst jsCode4 = `\r\nclass AlertDismissibleExample extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const handleDismiss = () => this.setState({ show: false });\r\n    const handleShow = () => this.setState({ show: true });\r\n    if (this.state.show) {\r\n      return (\r\n        <Alert variant=\"danger\" onClose={handleDismiss} dismissible>\r\n          <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n          <p>\r\n            Change this and that and try again. Duis mollis, est non commodo\r\n            luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\r\n            Cras mattis consectetur purus sit amet fermentum.\r\n          </p>\r\n        </Alert>\r\n      );\r\n    }\r\n    return <Button onClick={handleShow}>Show Alert</Button>;\r\n  }\r\n}\r\n\r\nrender(<AlertDismissibleExample />);\r\n`;\r\nconst jsCode5 = `\r\nclass AlertDismissible extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { show: true };\r\n  }\r\n\r\n  render() {\r\n    const handleHide = () => this.setState({ show: false });\r\n    const handleShow = () => this.setState({ show: true });\r\n    return (\r\n      <>\r\n        <Alert show={this.state.show} variant=\"success\">\r\n          <Alert.Heading>How's it going?!</Alert.Heading>\r\n          <p>\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula,\r\n            eget lacinia odio sem nec elit. Cras mattis consectetur purus sit\r\n            amet fermentum.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button onClick={handleHide} variant=\"outline-success\">\r\n              Close me ya'll!\r\n            </Button>\r\n          </div>\r\n        </Alert>\r\n\r\n        {!this.state.show && <Button onClick={handleShow}>Show Alert</Button>}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<AlertDismissible />);\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}