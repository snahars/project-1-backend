{"ast":null,"code":"import _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/UserProfile/AccountInformation.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\nimport * as auth from \"../Auth\";\n\nfunction AccountInformation(props) {\n  // Fields\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setloading = _useState2[1];\n\n  var dispatch = useDispatch();\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  }, shallowEqual);\n  useEffect(function () {}, [user]); // Methods\n\n  var saveUser = function saveUser(values, setStatus, setSubmitting) {\n    setloading(true);\n    var updatedUser = Object.assign(user, {\n      username: values.username,\n      email: values.email,\n      language: values.language,\n      timeZone: values.timeZone,\n      communication: {\n        email: values.communicationEmail,\n        sms: values.communicationSMS,\n        phone: values.communicationPhone\n      }\n    }); // user for update preparation\n\n    dispatch(props.setUser(updatedUser));\n    setTimeout(function () {\n      setloading(false);\n      setSubmitting(false); // Do request to your server for user update, we just imitate user update there, For example:\n      // update(updatedUser)\n      //  .then(()) => {\n      //    setloading(false);\n      //  })\n      //  .catch((error) => {\n      //    setloading(false);\n      //    setSubmitting(false);\n      //    setStatus(error);\n      // });\n    }, 1000);\n  }; // UI Helpers\n\n\n  var initialValues = {\n    username: user.username,\n    email: user.email,\n    language: user.language,\n    timeZone: user.timeZone,\n    communicationEmail: user.communication.email,\n    communicationSMS: user.communication.sms,\n    communicationPhone: user.communication.phone\n  };\n  var Schema = Yup.object().shape({\n    username: Yup.string().required(\"Username is required\"),\n    email: Yup.string().email(\"Wrong email format\").required(\"Email is required\"),\n    language: Yup.string(),\n    timeZone: Yup.string(),\n    communicationEmail: Yup.bool(),\n    communicationSMS: Yup.bool(),\n    communicationPhone: Yup.bool()\n  });\n\n  var getInputClasses = function getInputClasses(fieldname) {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n\n    return \"\";\n  };\n\n  var formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: Schema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setStatus = _ref.setStatus,\n          setSubmitting = _ref.setSubmitting;\n      saveUser(values, setStatus, setSubmitting);\n    },\n    onReset: function onReset(values, _ref2) {\n      var resetForm = _ref2.resetForm;\n      resetForm();\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"card card-custom\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(ModalProgressBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title align-items-start flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card-label font-weight-bolder text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Account Information\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-muted font-weight-bold font-size-sm mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Change your account settings\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success mr-2\",\n    disabled: formik.isSubmitting || formik.touched && !formik.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Save Changes\", formik.isSubmitting), /*#__PURE__*/React.createElement(Link, {\n    to: \"/user-profile/profile-overview\",\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-weight-bold mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Account:\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    className: \"form-control form-control-lg form-control-solid \".concat(getInputClasses(\"username\")),\n    name: \"username\"\n  }, formik.getFieldProps(\"username\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  })), formik.touched.username && formik.errors.username ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, formik.errors.username) : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg input-group-solid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-at\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Email\",\n    className: \"form-control form-control-lg form-control-solid \".concat(getInputClasses(\"email\")),\n    name: \"email\"\n  }, formik.getFieldProps(\"email\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  })), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, formik.errors.email) : null), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, \"Email will not be publicly displayed.\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, \"Learn more\"), \".\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, \"Language\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", Object.assign({\n    className: \"form-control form-control-lg form-control-solid\",\n    name: \"language\"\n  }, formik.getFieldProps(\"language\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, \"Select Language...\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, \"Bahasa Indonesia - Indonesian\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"msa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, \"Bahasa Melayu - Malay\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ca\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, \"Catal\\xE0 - Catalan\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"cs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, \"\\u010Ce\\u0161tina - Czech\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"da\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, \"Dansk - Danish\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"de\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, \"Deutsch - German\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"en\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, \"English\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"en-gb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, \"English UK - British English\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"es\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, \"Espa\\xF1ol - Spanish\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"eu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, \"Euskara - Basque (beta)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"fil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, \"Filipino\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"fr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, \"Fran\\xE7ais - French\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"pt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, \"Portugu\\xEAs - Portuguese\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, \"Rom\\xE2n\\u0103 - Romanian\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ru\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439 - Russian\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, \"\\u0421\\u0440\\u043F\\u0441\\u043A\\u0438 - Serbian\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"uk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, \"\\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430 \\u043C\\u043E\\u0432\\u0430 - Ukrainian\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, \"Time Zone\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", Object.assign({\n    className: \"form-control form-control-lg form-control-solid\",\n    name: \"timeZone\"\n  }, formik.getFieldProps(\"timeZone\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"International Date Line West\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, \"(GMT-11:00) International Date Line West\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Midway Island\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \"(GMT-11:00) Midway Island\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Central America\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"(GMT-06:00) Central America\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Central Time (US & Canada)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, \"(GMT-05:00) Central Time (US & Canada)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Eastern Time (US & Canada)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, \"(GMT-04:00) Eastern Time (US & Canada)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Indiana (East)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, \"(GMT-04:00) Indiana (East)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Georgetown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, \"(GMT-04:00) Georgetown\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Buenos Aires\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, \"(GMT-03:00) Buenos Aires\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Newfoundland\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, \"(GMT-02:30) Newfoundland\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Mid-Atlantic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, \"(GMT-02:00) Mid-Atlantic\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Cape Verde Is.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, \"(GMT-01:00) Cape Verde Is.\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"UTC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, \"(GMT) UTC\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Dublin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, \"(GMT+01:00) Dublin\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Edinburgh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, \"(GMT+01:00) Edinburgh\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"London\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, \"(GMT+01:00) London\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Prague\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  }, \"(GMT+02:00) Prague\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Helsinki\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, \"(GMT+03:00) Helsinki\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Abu Dhabi\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, \"(GMT+04:00) Abu Dhabi\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Tehran\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, \"(GMT+04:30) Tehran\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Islamabad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, \"(GMT+05:00) Islamabad\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Karachi\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, \"(GMT+05:00) Karachi\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Tashkent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }, \"(GMT+05:00) Tashkent\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Kathmandu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, \"(GMT+05:45) Kathmandu\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Astana\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, \"(GMT+06:00) Astana\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"Communication\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"communicationEmail\",\n    checked: formik.values.communicationEmail,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }\n  }), \"Email\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"checkbox\",\n    name: \"communicationSMS\",\n    checked: formik.values.communicationSMS\n  }, formik.getFieldProps(\"communicationSMS\"), {\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 19\n    }\n  }), \"SMS\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"checkbox\",\n    name: \"communicationPhone\",\n    checked: formik.values.communicationPhone\n  }, formik.getFieldProps(\"communicationPhone\"), {\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 19\n    }\n  }), \"Phone\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-weight-bold mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }, \"Security:\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, \"Login verification\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light-primary font-weight-bold btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  }, \"Setup login verification\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"form-text text-muted pt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, \"After you log in, you will be asked for additional information to confirm your identity and protect your account from being compromised. \", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }\n  }, \"Learn more\"), \".\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }, \"Password reset verification\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 19\n    }\n  }), \"Require personal information to reset your password.\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"form-text text-muted py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }, \"For extra security, this requires you to confirm your email or phone number when you reset your password.\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"font-weight-boldk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }\n  }, \"Learn more\"), \".\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light-danger font-weight-bold btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 15\n    }\n  }, \"Deactivate your account ?\"))))));\n}\n\nexport default connect(null, auth.actions)(AccountInformation);","map":{"version":3,"names":["React","useState","useEffect","Link","useSelector","shallowEqual","connect","useDispatch","useFormik","Yup","ModalProgressBar","auth","AccountInformation","props","loading","setloading","dispatch","user","state","saveUser","values","setStatus","setSubmitting","updatedUser","Object","assign","username","email","language","timeZone","communication","communicationEmail","sms","communicationSMS","phone","communicationPhone","setUser","setTimeout","initialValues","Schema","object","shape","string","required","bool","getInputClasses","fieldname","formik","touched","errors","validationSchema","onSubmit","onReset","resetForm","handleSubmit","isSubmitting","isValid","getFieldProps","handleChange","actions"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/UserProfile/AccountInformation.js"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport * as auth from \"../Auth\";\r\n\r\nfunction AccountInformation(props) {\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {}, [user]);\r\n\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    const updatedUser = Object.assign(user, {\r\n      username: values.username,\r\n      email: values.email,\r\n      language: values.language,\r\n      timeZone: values.timeZone,\r\n      communication: {\r\n        email: values.communicationEmail,\r\n        sms: values.communicationSMS,\r\n        phone: values.communicationPhone,\r\n      },\r\n    });\r\n    // user for update preparation\r\n    dispatch(props.setUser(updatedUser));\r\n    setTimeout(() => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      // Do request to your server for user update, we just imitate user update there, For example:\r\n      // update(updatedUser)\r\n      //  .then(()) => {\r\n      //    setloading(false);\r\n      //  })\r\n      //  .catch((error) => {\r\n      //    setloading(false);\r\n      //    setSubmitting(false);\r\n      //    setStatus(error);\r\n      // });\r\n    }, 1000);\r\n  };\r\n  // UI Helpers\r\n  const initialValues = {\r\n    username: user.username,\r\n    email: user.email,\r\n    language: user.language,\r\n    timeZone: user.timeZone,\r\n    communicationEmail: user.communication.email,\r\n    communicationSMS: user.communication.sms,\r\n    communicationPhone: user.communication.phone,\r\n  };\r\n  const Schema = Yup.object().shape({\r\n    username: Yup.string().required(\"Username is required\"),\r\n    email: Yup.string()\r\n      .email(\"Wrong email format\")\r\n      .required(\"Email is required\"),\r\n    language: Yup.string(),\r\n    timeZone: Yup.string(),\r\n    communicationEmail: Yup.bool(),\r\n    communicationSMS: Yup.bool(),\r\n    communicationPhone: Yup.bool(),\r\n  });\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            Account Information\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            Change your account settings\r\n          </span>\r\n        </div>\r\n        <div className=\"card-toolbar\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            Save Changes\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/profile-overview\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Cancel\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        <div className=\"card-body\">\r\n          {/* begin::Heading */}\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">Account:</h5>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">Username</label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"username\"\r\n                  )}`}\r\n                  name=\"username\"\r\n                  {...formik.getFieldProps(\"username\")}\r\n                />\r\n                {formik.touched.username && formik.errors.username ? (\r\n                  <div className=\"invalid-feedback\">\r\n                    {formik.errors.username}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Email Address\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"input-group input-group-lg input-group-solid\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    <i className=\"fa fa-at\"></i>\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                    \"email\"\r\n                  )}`}\r\n                  name=\"email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email ? (\r\n                  <div className=\"invalid-feedback\">{formik.errors.email}</div>\r\n                ) : null}\r\n              </div>\r\n              <span className=\"form-text text-muted\">\r\n                Email will not be publicly displayed.{` `}\r\n                <a href=\"#\" className=\"font-weight-bold\">\r\n                  Learn more\r\n                </a>\r\n                .\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">Language</label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <select\r\n                className=\"form-control form-control-lg form-control-solid\"\r\n                name=\"language\"\r\n                {...formik.getFieldProps(\"language\")}\r\n              >\r\n                <option>Select Language...</option>\r\n                <option value=\"id\">Bahasa Indonesia - Indonesian</option>\r\n                <option value=\"msa\">Bahasa Melayu - Malay</option>\r\n                <option value=\"ca\">Català - Catalan</option>\r\n                <option value=\"cs\">Čeština - Czech</option>\r\n                <option value=\"da\">Dansk - Danish</option>\r\n                <option value=\"de\">Deutsch - German</option>\r\n                <option value=\"en\">English</option>\r\n                <option value=\"en-gb\">English UK - British English</option>\r\n                <option value=\"es\">Español - Spanish</option>\r\n                <option value=\"eu\">Euskara - Basque (beta)</option>\r\n                <option value=\"fil\">Filipino</option>\r\n                <option value=\"fr\">Français - French</option>\r\n                <option value=\"pt\">Português - Portuguese</option>\r\n                <option value=\"ro\">Română - Romanian</option>\r\n                <option value=\"ru\">Русский - Russian</option>\r\n                <option value=\"sr\">Српски - Serbian</option>\r\n                <option value=\"uk\">Українська мова - Ukrainian</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Time Zone\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <select\r\n                className=\"form-control form-control-lg form-control-solid\"\r\n                name=\"timeZone\"\r\n                {...formik.getFieldProps(\"timeZone\")}\r\n              >\r\n                <option value=\"International Date Line West\">\r\n                  (GMT-11:00) International Date Line West\r\n                </option>\r\n                <option value=\"Midway Island\">(GMT-11:00) Midway Island</option>\r\n\r\n                <option value=\"Central America\">\r\n                  (GMT-06:00) Central America\r\n                </option>\r\n                <option value=\"Central Time (US &amp; Canada)\">\r\n                  (GMT-05:00) Central Time (US &amp; Canada)\r\n                </option>\r\n                <option value=\"Eastern Time (US &amp; Canada)\">\r\n                  (GMT-04:00) Eastern Time (US &amp; Canada)\r\n                </option>\r\n                <option value=\"Indiana (East)\">\r\n                  (GMT-04:00) Indiana (East)\r\n                </option>\r\n\r\n                <option value=\"Georgetown\">(GMT-04:00) Georgetown</option>\r\n\r\n                <option value=\"Buenos Aires\">(GMT-03:00) Buenos Aires</option>\r\n                <option value=\"Newfoundland\">(GMT-02:30) Newfoundland</option>\r\n                <option value=\"Mid-Atlantic\">(GMT-02:00) Mid-Atlantic</option>\r\n                <option value=\"Cape Verde Is.\">\r\n                  (GMT-01:00) Cape Verde Is.\r\n                </option>\r\n                <option value=\"UTC\">(GMT) UTC</option>\r\n                <option value=\"Dublin\">(GMT+01:00) Dublin</option>\r\n                <option value=\"Edinburgh\">(GMT+01:00) Edinburgh</option>\r\n                <option value=\"London\">(GMT+01:00) London</option>\r\n                <option value=\"Prague\">(GMT+02:00) Prague</option>\r\n                <option value=\"Helsinki\">(GMT+03:00) Helsinki</option>\r\n                <option value=\"Abu Dhabi\">(GMT+04:00) Abu Dhabi</option>\r\n                <option value=\"Tehran\">(GMT+04:30) Tehran</option>\r\n                <option value=\"Islamabad\">(GMT+05:00) Islamabad</option>\r\n                <option value=\"Karachi\">(GMT+05:00) Karachi</option>\r\n                <option value=\"Tashkent\">(GMT+05:00) Tashkent</option>\r\n                <option value=\"Kathmandu\">(GMT+05:45) Kathmandu</option>\r\n                <option value=\"Astana\">(GMT+06:00) Astana</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row align-items-center\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Communication\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-inline\">\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"communicationEmail\"\r\n                    checked={formik.values.communicationEmail}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Email\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"communicationSMS\"\r\n                    checked={formik.values.communicationSMS}\r\n                    {...formik.getFieldProps(\"communicationSMS\")}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>SMS\r\n                </label>\r\n                <label className=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"communicationPhone\"\r\n                    checked={formik.values.communicationPhone}\r\n                    {...formik.getFieldProps(\"communicationPhone\")}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <span></span>Phone\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"separator separator-dashed my-5\"></div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"row\">\r\n            <label className=\"col-xl-3\"></label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <h5 className=\"font-weight-bold mb-6\">Security:</h5>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Login verification\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bold btn-sm\"\r\n              >\r\n                Setup login verification\r\n              </button>\r\n              <p className=\"form-text text-muted pt-2\">\r\n                After you log in, you will be asked for additional information\r\n                to confirm your identity and protect your account from being\r\n                compromised. {` `}\r\n                <a href=\"#\" className=\"font-weight-bold\">\r\n                  Learn more\r\n                </a>\r\n                .\r\n              </p>\r\n            </div>\r\n          </div>\r\n          {/* begin::Form Group */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n              Password reset verification\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <div className=\"checkbox-inline\">\r\n                <label className=\"checkbox m-0\">\r\n                  <input type=\"checkbox\" />\r\n                  <span></span>Require personal information to reset your\r\n                  password.\r\n                </label>\r\n              </div>\r\n              <p className=\"form-text text-muted py-2\">\r\n                For extra security, this requires you to confirm your email or\r\n                phone number when you reset your password.\r\n                <a href=\"#\" className=\"font-weight-boldk\">\r\n                  Learn more\r\n                </a>\r\n                .\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-danger font-weight-bold btn-sm\"\r\n              >\r\n                Deactivate your account ?\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\nexport default connect(null, auth.actions)(AccountInformation);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}