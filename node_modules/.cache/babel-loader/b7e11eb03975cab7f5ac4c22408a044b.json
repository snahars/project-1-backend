{"ast":null,"code":"import _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/GoogleMaterialExamples/feedback/SnackbarsExamplesPage.js\";\nvar _excluded = [\"className\", \"message\", \"onClose\", \"variant\"];\n\n/* eslint-disable no-func-assign */\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Snackbar, IconButton, SnackbarContent, Fade, Slide, Grow, CssBaseline, Toolbar, AppBar, Typography, Fab } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { amber, green } from \"@material-ui/core/colors\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 1\n\nvar useStyles1 = makeStyles(function (theme) {\n  return {\n    close: {\n      padding: theme.spacing(0.5)\n    }\n  };\n}); // Example 2\n\nvar variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\nvar useStyles21 = makeStyles(function (theme) {\n  return {\n    success: {\n      backgroundColor: green[600]\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    info: {\n      backgroundColor: theme.palette.primary.main\n    },\n    warning: {\n      backgroundColor: amber[700]\n    },\n    icon: {\n      fontSize: 20\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1)\n    },\n    message: {\n      display: \"flex\",\n      alignItems: \"center\"\n    }\n  };\n});\n\nfunction MySnackbarContentWrapper2(props) {\n  var classes = useStyles21();\n\n  var className = props.className,\n      message = props.message,\n      onClose = props.onClose,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, _excluded);\n\n  var Icon = variantIcon[variant];\n  return /*#__PURE__*/React.createElement(SnackbarContent, Object.assign({\n    className: clsx(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), message),\n    action: [/*#__PURE__*/React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }))]\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }));\n}\n\nMySnackbarContentWrapper2.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\n};\nvar useStyles22 = makeStyles(function (theme) {\n  return {\n    margin: {\n      margin: theme.spacing(1)\n    }\n  };\n}); // Example 4\n\nvar action4 = /*#__PURE__*/React.createElement(Button, {\n  color: \"secondary\",\n  size: \"small\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 3\n  }\n}, \"lorem ipsum dolorem\");\nvar useStyles4 = makeStyles(function (theme) {\n  return {\n    root: {\n      maxWidth: 600\n    },\n    snackbar: {\n      margin: theme.spacing(1)\n    }\n  };\n}); // Example 7\n\nfunction SlideTransition7(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction GrowTransition7(props) {\n  return /*#__PURE__*/React.createElement(Grow, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 10\n    }\n  }));\n} // Example 8\n\n\nfunction TransitionLeft(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction TransitionUp(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction TransitionRight(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction TransitionDown(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default function SnackbarsExamplesPage() {\n  // Example 1\n  var classes1 = useStyles1();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open1 = _React$useState2[0],\n      setOpen1 = _React$useState2[1];\n\n  function handleClick1() {\n    setOpen1(true);\n  }\n\n  function handleClose1(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen1(false);\n  } // Example 2\n\n\n  var classes2 = useStyles22();\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open2 = _React$useState4[0],\n      setOpen2 = _React$useState4[1];\n\n  function handleClick2() {\n    setOpen2(true);\n  }\n\n  function handleClose2(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen2(false);\n  } // Example 3\n\n\n  var _React$useState5 = React.useState({\n    open: false,\n    vertical: \"top\",\n    horizontal: \"center\"\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      state = _React$useState6[0],\n      setState = _React$useState6[1];\n\n  var vertical = state.vertical,\n      horizontal = state.horizontal,\n      open = state.open;\n\n  var handleClick = function handleClick(newState) {\n    return function () {\n      setState(_objectSpread({\n        open: true\n      }, newState));\n    };\n  };\n\n  function handleClose() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: false\n    }));\n  } // Example 4\n\n\n  var classes4 = useStyles4(); // Example 7\n\n  var _React$useState7 = React.useState({\n    open7: false,\n    Transition7: Fade\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      state7 = _React$useState8[0],\n      setState7 = _React$useState8[1];\n\n  var handleClick7 = function handleClick7(Transition) {\n    return function () {\n      setState7({\n        open7: true,\n        Transition7: Transition\n      });\n    };\n  };\n\n  function handleClose7() {\n    setState7(_objectSpread(_objectSpread({}, state7), {}, {\n      open7: false\n    }));\n  } // Example 8\n\n\n  var _React$useState9 = React.useState({\n    open8: false\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      state8 = _React$useState10[0],\n      setState8 = _React$useState10[1];\n\n  var handleClick8 = function handleClick8(Transition) {\n    return function () {\n      setState8({\n        open8: true,\n        Transition: Transition\n      });\n    };\n  };\n\n  var handleClose8 = function handleClose8() {\n    setState8({\n      open8: false\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, \"Snackbars provide brief messages about app processes - typically at the bottom of the screen.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/snackbars/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Simple snackbars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, \"A basic snackbar that aims to reproduce Google Keep's snackbar behavior.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, \"Open simple snackbar\"), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: open1,\n    autoHideDuration: 6000,\n    onClose: handleClose1,\n    ContentProps: {\n      \"aria-describedby\": \"message-id\"\n    },\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 26\n      }\n    }, \"Note archived\"),\n    action: [/*#__PURE__*/React.createElement(Button, {\n      key: \"undo\",\n      color: \"secondary\",\n      size: \"small\",\n      onClick: handleClose1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 19\n      }\n    }, \"UNDO\"), /*#__PURE__*/React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      className: classes1.close,\n      onClick: handleClose1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode3,\n    beforeCodeTitle: \"Positioned snackbars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, \"There may be circumstances when the placement of the snackbar needs to be more flexible.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick({\n      vertical: \"top\",\n      horizontal: \"center\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }, \"Top-Center\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick({\n      vertical: \"top\",\n      horizontal: \"right\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  }, \"Top-Right\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick({\n      vertical: \"bottom\",\n      horizontal: \"right\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, \"Bottom-Right\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick({\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  }, \"Bottom-Center\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick({\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 15\n    }\n  }, \"Bottom-Left\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick({\n      vertical: \"top\",\n      horizontal: \"left\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  }, \"Top-Left\"), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: vertical,\n      horizontal: horizontal\n    },\n    key: \"\".concat(vertical, \",\").concat(horizontal),\n    open: open,\n    onClose: handleClose,\n    ContentProps: {\n      \"aria-describedby\": \"message-id\"\n    },\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 26\n      }\n    }, \"I love snacks\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode4,\n    beforeCodeTitle: \"Message Length\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }\n  }, \"Some snackbars with varying message length.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes4.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: classes4.snackbar,\n    message: \"I love snacks.\",\n    action: action4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: classes4.snackbar,\n    message: \"I love candy. I love cookies. I love cupcakes. \\\r\n                      I love cheesecake. I love chocolate.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: classes4.snackbar,\n    message: \"I love candy. I love cookies. I love cupcakes.\",\n    action: action4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: classes4.snackbar,\n    message: \"I love candy. I love cookies. I love cupcakes. \\\r\n                      I love cheesecake. I love chocolate.\",\n    action: action4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode7,\n    beforeCodeTitle: \"Change Transition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }\n  }, \"Grow is the default transition but you can use a different one.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick7(GrowTransition7),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 15\n    }\n  }, \"Grow Transition\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick7(Fade),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }, \"Fade Transition\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick7(SlideTransition7),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 15\n    }\n  }, \"Slide Transition\"), /*#__PURE__*/React.createElement(Snackbar, {\n    open: state7.open7,\n    onClose: handleClose7,\n    TransitionComponent: state7.Transition7,\n    ContentProps: {\n      \"aria-describedby\": \"message-id\"\n    },\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 26\n      }\n    }, \"I love snacks\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Customized snackbars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }\n  }, \"Here are some examples of customizing the component.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes2.margin,\n    onClick: handleClick2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 15\n    }\n  }, \"Open success snackbar\"), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: open2,\n    autoHideDuration: 6000,\n    onClose: handleClose2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper2, {\n    onClose: handleClose2,\n    variant: \"success\",\n    message: \"This is a success message!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(MySnackbarContentWrapper2, {\n    variant: \"error\",\n    className: classes2.margin,\n    message: \"This is an error message!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(MySnackbarContentWrapper2, {\n    variant: \"warning\",\n    className: classes2.margin,\n    message: \"This is a warning message!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(MySnackbarContentWrapper2, {\n    variant: \"info\",\n    className: classes2.margin,\n    message: \"This is an information message!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(MySnackbarContentWrapper2, {\n    variant: \"success\",\n    className: classes2.margin,\n    message: \"This is a success message!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode8,\n    beforeCodeTitle: \"Control Slide direction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 13\n    }\n  }, \"You can change the direction of the Slide transition.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick8(TransitionLeft),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 15\n    }\n  }, \"Right\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick8(TransitionUp),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 15\n    }\n  }, \"Up\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick8(TransitionRight),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 15\n    }\n  }, \"Left\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick8(TransitionDown),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 15\n    }\n  }, \"Down\"), /*#__PURE__*/React.createElement(Snackbar, {\n    open: state8.open8,\n    onClose: handleClose8,\n    TransitionComponent: state8.Transition,\n    ContentProps: {\n      \"aria-describedby\": \"message-id\"\n    },\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 26\n      }\n    }, \"I love snacks\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 15\n    }\n  }))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Snackbar from '@material-ui/core/Snackbar';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport CloseIcon from '@material-ui/icons/Close';\\n\\nconst useStyles = makeStyles(theme => ({\\n  close: {\\n    padding: theme.spacing(0.5),\\n  },\\n}));\\n\\nexport default function SimpleSnackbar() {\\n  const classes = useStyles();\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleClick() {\\n    setOpen(true);\\n  }\\n\\n  function handleClose(event, reason) {\\n    if (reason === 'clickaway') {\\n      return;\\n    }\\n\\n    setOpen(false);\\n  }\\n\\n  return (\\n    <div>\\n      <Button onClick={handleClick}>Open simple snackbar</Button>\\n      <Snackbar\\n        anchorOrigin={{\\n          vertical: 'bottom',\\n          horizontal: 'left',\\n        }}\\n        open={open}\\n        autoHideDuration={6000}\\n        onClose={handleClose}\\n        ContentProps={{\\n          'aria-describedby': 'message-id',\\n        }}\\n        message={<span id=\\\"message-id\\\">Note archived</span>}\\n        action={[\\n          <Button key=\\\"undo\\\" color=\\\"secondary\\\" size=\\\"small\\\" onClick={handleClose}>\\n            UNDO\\n          </Button>,\\n          <IconButton\\n            key=\\\"close\\\"\\n            aria-label=\\\"Close\\\"\\n            color=\\\"inherit\\\"\\n            className={classes.close}\\n            onClick={handleClose}\\n          >\\n            <CloseIcon />\\n          </IconButton>,\\n        ]}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport clsx from 'clsx';\\nimport Button from '@material-ui/core/Button';\\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\\nimport ErrorIcon from '@material-ui/icons/Error';\\nimport InfoIcon from '@material-ui/icons/Info';\\nimport CloseIcon from '@material-ui/icons/Close';\\nimport { amber, green } from '@material-ui/core/colors';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Snackbar from '@material-ui/core/Snackbar';\\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\\nimport WarningIcon from '@material-ui/icons/Warning';\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\nconst variantIcon = {\\n  success: CheckCircleIcon,\\n  warning: WarningIcon,\\n  error: ErrorIcon,\\n  info: InfoIcon,\\n};\\n\\nconst useStyles1 = makeStyles(theme => ({\\n  success: {\\n    backgroundColor: green[600],\\n  },\\n  error: {\\n    backgroundColor: theme.palette.error.dark,\\n  },\\n  info: {\\n    backgroundColor: theme.palette.primary.main,\\n  },\\n  warning: {\\n    backgroundColor: amber[700],\\n  },\\n  icon: {\\n    fontSize: 20,\\n  },\\n  iconVariant: {\\n    opacity: 0.9,\\n    marginRight: theme.spacing(1),\\n  },\\n  message: {\\n    display: 'flex',\\n    alignItems: 'center',\\n  },\\n}));\\n\\nfunction MySnackbarContentWrapper(props) {\\n  const classes = useStyles1();\\n  const { className, message, onClose, variant, ...other } = props;\\n  const Icon = variantIcon[variant];\\n\\n  return (\\n    <SnackbarContent\\n      className={clsx(classes[variant], className)}\\n      aria-describedby=\\\"client-snackbar\\\"\\n      message={\\n        <span id=\\\"client-snackbar\\\" className={classes.message}>\\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\\n          {message}\\n        </span>\\n      }\\n      action={[\\n        <IconButton key=\\\"close\\\" aria-label=\\\"Close\\\" color=\\\"inherit\\\" onClick={onClose}>\\n          <CloseIcon className={classes.icon} />\\n        </IconButton>,\\n      ]}\\n      {...other}\\n    />\\n  );\\n}\\n\\nMySnackbarContentWrapper.propTypes = {\\n  className: PropTypes.string,\\n  message: PropTypes.node,\\n  onClose: PropTypes.func,\\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\\n};\\n\\nconst useStyles2 = makeStyles(theme => ({\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function CustomizedSnackbars() {\\n  const classes = useStyles2();\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleClick() {\\n    setOpen(true);\\n  }\\n\\n  function handleClose(event, reason) {\\n    if (reason === 'clickaway') {\\n      return;\\n    }\\n\\n    setOpen(false);\\n  }\\n\\n  return (\\n    <div>\\n      <Button variant=\\\"outlined\\\" className={classes.margin} onClick={handleClick}>\\n        Open success snackbar\\n      </Button>\\n      <Snackbar\\n        anchorOrigin={{\\n          vertical: 'bottom',\\n          horizontal: 'left',\\n        }}\\n        open={open}\\n        autoHideDuration={6000}\\n        onClose={handleClose}\\n      >\\n        <MySnackbarContentWrapper\\n          onClose={handleClose}\\n          variant=\\\"success\\\"\\n          message=\\\"This is a success message!\\\"\\n        />\\n      </Snackbar>\\n      <MySnackbarContentWrapper\\n        variant=\\\"error\\\"\\n        className={classes.margin}\\n        message=\\\"This is an error message!\\\"\\n      />\\n      <MySnackbarContentWrapper\\n        variant=\\\"warning\\\"\\n        className={classes.margin}\\n        message=\\\"This is a warning message!\\\"\\n      />\\n      <MySnackbarContentWrapper\\n        variant=\\\"info\\\"\\n        className={classes.margin}\\n        message=\\\"This is an information message!\\\"\\n      />\\n      <MySnackbarContentWrapper\\n        variant=\\\"success\\\"\\n        className={classes.margin}\\n        message=\\\"This is a success message!\\\"\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode3 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Snackbar from '@material-ui/core/Snackbar';\\n\\nexport default function PositionedSnackbar() {\\n  const [state, setState] = React.useState({\\n    open: false,\\n    vertical: 'top',\\n    horizontal: 'center',\\n  });\\n\\n  const { vertical, horizontal, open } = state;\\n\\n  const handleClick = newState => () => {\\n    setState({ open: true, ...newState });\\n  };\\n\\n  function handleClose() {\\n    setState({ ...state, open: false });\\n  }\\n\\n  return (\\n    <div>\\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'center' })}>Top-Center</Button>\\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'right' })}>Top-Right</Button>\\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'right' })}>\\n        Bottom-Right\\n      </Button>\\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'center' })}>\\n        Bottom-Center\\n      </Button>\\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'left' })}>Bottom-Left</Button>\\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'left' })}>Top-Left</Button>\\n      <Snackbar\\n        anchorOrigin={{ vertical, horizontal }}\\n        key={`${vertical},${horizontal}`}\\n        open={open}\\n        onClose={handleClose}\\n        ContentProps={{\\n          'aria-describedby': 'message-id',\\n        }}\\n        message={<span id=\\\"message-id\\\">I love snacks</span>}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode4 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\\n\\nconst action = (\\n  <Button color=\\\"secondary\\\" size=\\\"small\\\">\\n    lorem ipsum dolorem\\n  </Button>\\n);\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    maxWidth: 600,\\n  },\\n  snackbar: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function LongTextSnackbar() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <SnackbarContent className={classes.snackbar} message=\\\"I love snacks.\\\" action={action} />\\n      <SnackbarContent\\n        className={classes.snackbar}\\n        message={\\n          'I love candy. I love cookies. I love cupcakes.           I love cheesecake. I love chocolate.'\\n        }\\n      />\\n      <SnackbarContent\\n        className={classes.snackbar}\\n        message=\\\"I love candy. I love cookies. I love cupcakes.\\\"\\n        action={action}\\n      />\\n      <SnackbarContent\\n        className={classes.snackbar}\\n        message={\\n          'I love candy. I love cookies. I love cupcakes.           I love cheesecake. I love chocolate.'\\n        }\\n        action={action}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode7 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Snackbar from '@material-ui/core/Snackbar';\\nimport Fade from '@material-ui/core/Fade';\\nimport Slide from '@material-ui/core/Slide';\\nimport Grow from '@material-ui/core/Grow';\\n\\nfunction SlideTransition(props) {\\n  return <Slide {...props} direction=\\\"up\\\" />;\\n}\\n\\nfunction GrowTransition(props) {\\n  return <Grow {...props} />;\\n}\\n\\nexport default function TransitionsSnackbar() {\\n  const [state, setState] = React.useState({\\n    open: false,\\n    Transition: Fade,\\n  });\\n\\n  const handleClick = Transition => () => {\\n    setState({\\n      open: true,\\n      Transition,\\n    });\\n  };\\n\\n  function handleClose() {\\n    setState({\\n      ...state,\\n      open: false,\\n    });\\n  }\\n\\n  return (\\n    <div>\\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\\n      <Snackbar\\n        open={state.open}\\n        onClose={handleClose}\\n        TransitionComponent={state.Transition}\\n        ContentProps={{\\n          'aria-describedby': 'message-id',\\n        }}\\n        message={<span id=\\\"message-id\\\">I love snacks</span>}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode8 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Snackbar from '@material-ui/core/Snackbar';\\nimport Slide from '@material-ui/core/Slide';\\n\\nfunction TransitionLeft(props) {\\n  return <Slide {...props} direction=\\\"left\\\" />;\\n}\\n\\nfunction TransitionUp(props) {\\n  return <Slide {...props} direction=\\\"up\\\" />;\\n}\\n\\nfunction TransitionRight(props) {\\n  return <Slide {...props} direction=\\\"right\\\" />;\\n}\\n\\nfunction TransitionDown(props) {\\n  return <Slide {...props} direction=\\\"down\\\" />;\\n}\\n\\nclass DirectionSnackbar extends React.Component {\\n  state = {\\n    open: false,\\n  };\\n\\n  handleClick = Transition => () => {\\n    this.setState({ open: true, Transition });\\n  };\\n\\n  handleClose = () => {\\n    this.setState({ open: false });\\n  };\\n\\n  render() {\\n    return (\\n      <div>\\n        <Button onClick={this.handleClick(TransitionLeft)}>Right</Button>\\n        <Button onClick={this.handleClick(TransitionUp)}>Up</Button>\\n        <Button onClick={this.handleClick(TransitionRight)}>Left</Button>\\n        <Button onClick={this.handleClick(TransitionDown)}>Down</Button>\\n        <Snackbar\\n          open={this.state.open}\\n          onClose={this.handleClose}\\n          TransitionComponent={this.state.Transition}\\n          ContentProps={{\\n            'aria-describedby': 'message-id',\\n          }}\\n          message={<span id=\\\"message-id\\\">I love snacks</span>}\\n        />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default DirectionSnackbar;\\n\";","map":{"version":3,"names":["React","PropTypes","clsx","makeStyles","Button","Snackbar","IconButton","SnackbarContent","Fade","Slide","Grow","CssBaseline","Toolbar","AppBar","Typography","Fab","CloseIcon","WarningIcon","CheckCircleIcon","ErrorIcon","InfoIcon","amber","green","AddIcon","MenuIcon","Notice","KTCodeExample","useStyles1","theme","close","padding","spacing","variantIcon","success","warning","error","info","useStyles21","backgroundColor","palette","dark","primary","main","icon","fontSize","iconVariant","opacity","marginRight","message","display","alignItems","MySnackbarContentWrapper2","props","classes","className","onClose","variant","other","Icon","propTypes","string","node","func","oneOf","isRequired","useStyles22","margin","action4","useStyles4","root","maxWidth","snackbar","SlideTransition7","GrowTransition7","TransitionLeft","TransitionUp","TransitionRight","TransitionDown","SnackbarsExamplesPage","classes1","useState","open1","setOpen1","handleClick1","handleClose1","event","reason","classes2","open2","setOpen2","handleClick2","handleClose2","open","vertical","horizontal","state","setState","handleClick","newState","handleClose","classes4","open7","Transition7","state7","setState7","handleClick7","Transition","handleClose7","open8","state8","setState8","handleClick8","handleClose8","jsCode1","jsCode3","jsCode4","jsCode7","jsCode2","jsCode8"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/GoogleMaterialExamples/feedback/SnackbarsExamplesPage.js"],"sourcesContent":["/* eslint-disable no-func-assign */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Snackbar,\r\n  IconButton,\r\n  SnackbarContent,\r\n  Fade,\r\n  Slide,\r\n  Grow,\r\n  CssBaseline,\r\n  Toolbar,\r\n  AppBar,\r\n  Typography,\r\n  Fab\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport {amber, green} from \"@material-ui/core/colors\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  close: {\r\n    padding: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\n\r\nconst useStyles21 = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700]\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n\r\nfunction MySnackbarContentWrapper2(props) {\r\n  const classes = useStyles21();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper2.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\r\n};\r\n\r\nconst useStyles22 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst action4 = (\r\n  <Button color=\"secondary\" size=\"small\">\r\n    lorem ipsum dolorem\r\n  </Button>\r\n);\r\n\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 600\r\n  },\r\n  snackbar: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 7\r\nfunction SlideTransition7(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction GrowTransition7(props) {\r\n  return <Grow {...props} />;\r\n}\r\n\r\n// Example 8\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"left\" />;\r\n}\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction TransitionRight(props) {\r\n  return <Slide {...props} direction=\"right\" />;\r\n}\r\n\r\nfunction TransitionDown(props) {\r\n  return <Slide {...props} direction=\"down\" />;\r\n}\r\n\r\nexport default function SnackbarsExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const [open1, setOpen1] = React.useState(false);\r\n\r\n  function handleClick1() {\r\n    setOpen1(true);\r\n  }\r\n\r\n  function handleClose1(event, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen1(false);\r\n  }\r\n\r\n  // Example 2\r\n  const classes2 = useStyles22();\r\n  const [open2, setOpen2] = React.useState(false);\r\n\r\n  function handleClick2() {\r\n    setOpen2(true);\r\n  }\r\n\r\n  function handleClose2(event, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen2(false);\r\n  }\r\n\r\n  // Example 3\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\"\r\n  });\r\n\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleClick = newState => () => {\r\n    setState({ open: true, ...newState });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({ ...state, open: false });\r\n  }\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n\r\n  // Example 7\r\n  const [state7, setState7] = React.useState({\r\n    open7: false,\r\n    Transition7: Fade\r\n  });\r\n\r\n  const handleClick7 = Transition => () => {\r\n    setState7({\r\n      open7: true,\r\n      Transition7: Transition\r\n    });\r\n  };\r\n\r\n  function handleClose7() {\r\n    setState7({\r\n      ...state7,\r\n      open7: false\r\n    });\r\n  }\r\n\r\n  // Example 8\r\n  const [state8, setState8] = React.useState({\r\n    open8: false\r\n  });\r\n\r\n  const handleClick8 = Transition => {\r\n    return () => {\r\n      setState8({ open8: true, Transition });\r\n    };\r\n  };\r\n\r\n  const handleClose8 = () => {\r\n    setState8({ open8: false });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Snackbars provide brief messages about app processes - typically at\r\n          the bottom of the screen.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/snackbars/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple snackbars\">\r\n            <span>\r\n              A basic snackbar that aims to reproduce Google Keep's snackbar\r\n              behavior.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={handleClick1}>Open simple snackbar</Button>\r\n              <Snackbar\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\"\r\n                }}\r\n                open={open1}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose1}\r\n                ContentProps={{\r\n                  \"aria-describedby\": \"message-id\"\r\n                }}\r\n                message={<span id=\"message-id\">Note archived</span>}\r\n                action={[\r\n                  <Button\r\n                    key=\"undo\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    onClick={handleClose1}\r\n                  >\r\n                    UNDO\r\n                  </Button>,\r\n                  <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={classes1.close}\r\n                    onClick={handleClose1}\r\n                  >\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                ]}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Positioned snackbars\"\r\n          >\r\n            <span>\r\n              There may be circumstances when the placement of the snackbar\r\n              needs to be more flexible.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"top\",\r\n                  horizontal: \"center\"\r\n                })}\r\n              >\r\n                Top-Center\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                })}\r\n              >\r\n                Top-Right\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"right\"\r\n                })}\r\n              >\r\n                Bottom-Right\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"center\"\r\n                })}\r\n              >\r\n                Bottom-Center\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\"\r\n                })}\r\n              >\r\n                Bottom-Left\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\"\r\n                })}\r\n              >\r\n                Top-Left\r\n              </Button>\r\n              <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                key={`${vertical},${horizontal}`}\r\n                open={open}\r\n                onClose={handleClose}\r\n                ContentProps={{\r\n                  \"aria-describedby\": \"message-id\"\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Message Length\">\r\n            <span>Some snackbars with varying message length.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes4.root}>\r\n              <SnackbarContent\r\n                className={classes4.snackbar}\r\n                message=\"I love snacks.\"\r\n                action={action4}\r\n              />\r\n              <SnackbarContent\r\n                className={classes4.snackbar}\r\n                message={\r\n                  \"I love candy. I love cookies. I love cupcakes. \\\r\n                      I love cheesecake. I love chocolate.\"\r\n                }\r\n              />\r\n              <SnackbarContent\r\n                className={classes4.snackbar}\r\n                message=\"I love candy. I love cookies. I love cupcakes.\"\r\n                action={action4}\r\n              />\r\n              <SnackbarContent\r\n                className={classes4.snackbar}\r\n                message={\r\n                  \"I love candy. I love cookies. I love cupcakes. \\\r\n                      I love cheesecake. I love chocolate.\"\r\n                }\r\n                action={action4}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Change Transition\">\r\n            <span>\r\n              Grow is the default transition but you can use a different one.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={handleClick7(GrowTransition7)}>\r\n                Grow Transition\r\n              </Button>\r\n              <Button onClick={handleClick7(Fade)}>Fade Transition</Button>\r\n              <Button onClick={handleClick7(SlideTransition7)}>\r\n                Slide Transition\r\n              </Button>\r\n              <Snackbar\r\n                open={state7.open7}\r\n                onClose={handleClose7}\r\n                TransitionComponent={state7.Transition7}\r\n                ContentProps={{\r\n                  \"aria-describedby\": \"message-id\"\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Customized snackbars\"\r\n          >\r\n            <span>Here are some examples of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                className={classes2.margin}\r\n                onClick={handleClick2}\r\n              >\r\n                Open success snackbar\r\n              </Button>\r\n              <Snackbar\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\"\r\n                }}\r\n                open={open2}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose2}\r\n              >\r\n                <MySnackbarContentWrapper2\r\n                  onClose={handleClose2}\r\n                  variant=\"success\"\r\n                  message=\"This is a success message!\"\r\n                />\r\n              </Snackbar>\r\n              <MySnackbarContentWrapper2\r\n                variant=\"error\"\r\n                className={classes2.margin}\r\n                message=\"This is an error message!\"\r\n              />\r\n              <MySnackbarContentWrapper2\r\n                variant=\"warning\"\r\n                className={classes2.margin}\r\n                message=\"This is a warning message!\"\r\n              />\r\n              <MySnackbarContentWrapper2\r\n                variant=\"info\"\r\n                className={classes2.margin}\r\n                message=\"This is an information message!\"\r\n              />\r\n              <MySnackbarContentWrapper2\r\n                variant=\"success\"\r\n                className={classes2.margin}\r\n                message=\"This is a success message!\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode8}\r\n            beforeCodeTitle=\"Control Slide direction\"\r\n          >\r\n            <span>You can change the direction of the Slide transition.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={handleClick8(TransitionLeft)}>Right</Button>\r\n              <Button onClick={handleClick8(TransitionUp)}>Up</Button>\r\n              <Button onClick={handleClick8(TransitionRight)}>Left</Button>\r\n              <Button onClick={handleClick8(TransitionDown)}>Down</Button>\r\n              <Snackbar\r\n                open={state8.open8}\r\n                onClose={handleClose8}\r\n                TransitionComponent={state8.Transition}\r\n                ContentProps={{\r\n                  \"aria-describedby\": \"message-id\"\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSnackbar() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>Open simple snackbar</Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id=\"message-id\">Note archived</span>}\r\n        action={[\r\n          <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n            UNDO\r\n          </Button>,\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            className={classes.close}\r\n            onClick={handleClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>,\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles1();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" className={classes.margin} onClick={handleClick}>\r\n        Open success snackbar\r\n      </Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant=\"success\"\r\n          message=\"This is a success message!\"\r\n        />\r\n      </Snackbar>\r\n      <MySnackbarContentWrapper\r\n        variant=\"error\"\r\n        className={classes.margin}\r\n        message=\"This is an error message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"warning\"\r\n        className={classes.margin}\r\n        message=\"This is a warning message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"info\"\r\n        className={classes.margin}\r\n        message=\"This is an information message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"success\"\r\n        className={classes.margin}\r\n        message=\"This is a success message!\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nexport default function PositionedSnackbar() {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleClick = newState => () => {\r\n    setState({ open: true, ...newState });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({ ...state, open: false });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'center' })}>Top-Center</Button>\r\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'right' })}>Top-Right</Button>\r\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'right' })}>\r\n        Bottom-Right\r\n      </Button>\r\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'center' })}>\r\n        Bottom-Center\r\n      </Button>\r\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'left' })}>Bottom-Left</Button>\r\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'left' })}>Top-Left</Button>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        key={\\`\\${vertical},\\${horizontal}\\`}\r\n        open={open}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id=\"message-id\">I love snacks</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\n\r\nconst action = (\r\n  <Button color=\"secondary\" size=\"small\">\r\n    lorem ipsum dolorem\r\n  </Button>\r\n);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 600,\r\n  },\r\n  snackbar: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function LongTextSnackbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SnackbarContent className={classes.snackbar} message=\"I love snacks.\" action={action} />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message={\r\n          'I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.'\r\n        }\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message=\"I love candy. I love cookies. I love cupcakes.\"\r\n        action={action}\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message={\r\n          'I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.'\r\n        }\r\n        action={action}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction GrowTransition(props) {\r\n  return <Grow {...props} />;\r\n}\r\n\r\nexport default function TransitionsSnackbar() {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    Transition: Fade,\r\n  });\r\n\r\n  const handleClick = Transition => () => {\r\n    setState({\r\n      open: true,\r\n      Transition,\r\n    });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\r\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\r\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\r\n      <Snackbar\r\n        open={state.open}\r\n        onClose={handleClose}\r\n        TransitionComponent={state.Transition}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id=\"message-id\">I love snacks</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"left\" />;\r\n}\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction TransitionRight(props) {\r\n  return <Slide {...props} direction=\"right\" />;\r\n}\r\n\r\nfunction TransitionDown(props) {\r\n  return <Slide {...props} direction=\"down\" />;\r\n}\r\n\r\nclass DirectionSnackbar extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleClick = Transition => () => {\r\n    this.setState({ open: true, Transition });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleClick(TransitionLeft)}>Right</Button>\r\n        <Button onClick={this.handleClick(TransitionUp)}>Up</Button>\r\n        <Button onClick={this.handleClick(TransitionRight)}>Left</Button>\r\n        <Button onClick={this.handleClick(TransitionDown)}>Down</Button>\r\n        <Snackbar\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          TransitionComponent={this.state.Transition}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">I love snacks</span>}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DirectionSnackbar;\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}