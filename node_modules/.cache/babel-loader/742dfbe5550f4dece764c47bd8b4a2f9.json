{"ast":null,"code":"import _toConsumableArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Production/QA/qa-review/table/QAReviewList.js\";\nimport React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nexport default function QAReviewList(_ref) {\n  var _this = this;\n\n  var setSingleAll = _ref.setSingleAll,\n      singleAll = _ref.singleAll,\n      qaInspectionData = _ref.qaInspectionData;\n\n  // alert(qaInspectionData)\n  var singleWiseSelectHandler = function singleWiseSelectHandler(data, isSelect) {\n    console.log(\"data\", qaInspectionData);\n\n    if (isSelect == true) {\n      var temp = _toConsumableArray(singleAll);\n\n      temp.push(data);\n      setSingleAll(temp);\n    } else {\n      if (singleAll.length >= 0) {\n        var _temp = _toConsumableArray(singleAll);\n\n        var index = _temp.findIndex(function (obj) {\n          return obj.id == data.id;\n        });\n\n        _temp.splice(index, 1);\n\n        setSingleAll(_temp);\n      }\n    }\n  };\n\n  var allSelectHandler = function allSelectHandler(allData, isSelect) {\n    if (isSelect == true) {\n      setSingleAll(allData);\n    } else {\n      if (allData.length >= 0) {\n        var _loop = function _loop(i) {\n          var index = singleAll.findIndex(function (obj) {\n            return obj.id == allData[i].id;\n          });\n          singleAll.splice(index, 1);\n          setSingleAll(singleAll);\n        };\n\n        for (var i = 0; i < allData.length; i++) {\n          _loop(i);\n        }\n      }\n    }\n  };\n\n  var columns = [{\n    dataField: \"productsInfo\",\n    text: \"PRODUCTS INFO\",\n    formatter: function formatter(cellContent, row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-muted\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, row.productSku), /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 65\n        }\n      }), /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, row.productName), /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 47\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-muted\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, row.productCategory));\n    }\n  }, {\n    dataField: \"batchInfo\",\n    text: \"BATCH INFO\",\n    formatter: function formatter(cellContent, row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-muted\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, row.batchNo), /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 62\n        }\n      }));\n    }\n  }, {\n    dataField: \"name\",\n    text: \"QA BY\",\n    formatter: function formatter(cellContent, row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, row.salesOfficer), /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 48\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-muted\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, row.designation));\n    }\n  }, {\n    dataField: \"qty\",\n    text: \"QTY.\",\n    formatter: function formatter(cellContent, row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, row.quantity), /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 44\n        }\n      }));\n    }\n  }, {\n    dataField: \"status\",\n    text: \"STATUS\",\n    formatter: function formatter(cellContent, row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"dark-success-color\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, row.qaStatus), /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 75\n        }\n      }));\n    }\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BootstrapTable, {\n    wrapperClasses: \"table-responsive\",\n    classes: \"table table-head-custom table-vertical-center overflow-hidden\",\n    bootstrap4: true,\n    bordered: false,\n    keyField: \"id\",\n    data: qaInspectionData,\n    columns: columns,\n    selectRow: {\n      mode: 'checkbox',\n      onSelect: function onSelect(row, isSelect, rowIndex, e) {\n        singleWiseSelectHandler(row, isSelect);\n      },\n      onSelectAll: function onSelectAll(isSelect, rows, e) {\n        allSelectHandler(rows, isSelect);\n      }\n    },\n    pagination: paginationFactory({\n      sizePerPage: 10,\n      showTotal: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","BootstrapTable","paginationFactory","QAReviewList","setSingleAll","singleAll","qaInspectionData","singleWiseSelectHandler","data","isSelect","console","log","temp","push","length","index","findIndex","obj","id","splice","allSelectHandler","allData","i","columns","dataField","text","formatter","cellContent","row","productSku","productName","productCategory","batchNo","salesOfficer","designation","quantity","qaStatus","mode","onSelect","rowIndex","e","onSelectAll","rows","sizePerPage","showTotal"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Production/QA/qa-review/table/QAReviewList.js"],"sourcesContent":["\nimport React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\n\nexport default function QAReviewList({ setSingleAll, singleAll, qaInspectionData}) {\n // alert(qaInspectionData)\n  const singleWiseSelectHandler = (data, isSelect) => {\n    console.log(\"data\",qaInspectionData);\n    if (isSelect == true) {\n      let temp = [...singleAll]\n      temp.push(data)\n      setSingleAll(temp)\n    } else {\n      if (singleAll.length >= 0) {\n        let temp = [...singleAll]\n        const index = temp.findIndex(obj => obj.id == data.id);\n        temp.splice(index, 1);\n        setSingleAll(temp)\n      }\n    }\n\n  }\n  const allSelectHandler = (allData, isSelect) => {\n    if (isSelect == true) {\n      setSingleAll(allData)\n    }\n    else {\n      if (allData.length >= 0) {\n        for (let i = 0; i < allData.length; i++) {\n          const index = singleAll.findIndex(obj => obj.id == allData[i].id);\n          singleAll.splice(index, 1);\n          setSingleAll(singleAll)\n        }\n      }\n    }\n\n  }\n  const columns = [\n    {\n      dataField: \"productsInfo\",\n      text: \"PRODUCTS INFO\",\n      formatter: (cellContent, row) => (\n        <>\n            <span className=\"text-muted\">{row.productSku}</span><br />\n            <strong>{row.productName}</strong><br />\n            <span className=\"text-muted\">{row.productCategory}</span>\n        </>\n      )\n    },\n    {\n      dataField: \"batchInfo\",\n      text: \"BATCH INFO\",\n      formatter: (cellContent, row) => (\n        <>\n            <span className=\"text-muted\">{row.batchNo}</span><br />\n        </>\n      )\n    },\n    {\n      dataField: \"name\",\n      text: \"QA BY\",\n      formatter: (cellContent, row) => (\n        <>\n            <strong>{row.salesOfficer}</strong><br />\n            <span className=\"text-muted\">{row.designation}</span>\n        </>\n      )\n    },\n    {\n      dataField: \"qty\",\n      text: \"QTY.\",\n      formatter: (cellContent, row) => (\n        <>\n            <strong>{row.quantity}</strong><br />\n        </>\n      )\n    },\n    {\n      dataField: \"status\",\n      text: \"STATUS\",\n      formatter: (cellContent, row) => (\n        <>\n            <strong className=\"dark-success-color\">{row.qaStatus}</strong><br />\n        </>\n      )\n    }\n  ];\n\n  return (\n    <>\n      <BootstrapTable\n        wrapperClasses=\"table-responsive\"\n        classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n        bootstrap4\n        bordered={false}\n        keyField=\"id\"\n        data={qaInspectionData}\n        columns={columns}\n        selectRow={\n          {\n            mode: 'checkbox',\n            onSelect: (row, isSelect, rowIndex, e) => {\n              singleWiseSelectHandler(row, isSelect);\n            },\n            onSelectAll: (isSelect, rows, e) => {\n              allSelectHandler(rows, isSelect);\n\n            }\n\n          }\n        }\n\n        pagination={paginationFactory({ sizePerPage: 10, showTotal: true })}\n      />\n    </>\n  );\n}\n"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AAEA,eAAe,SAASC,YAAT,OAAoE;EAAA;;EAAA,IAA5CC,YAA4C,QAA5CA,YAA4C;EAAA,IAA9BC,SAA8B,QAA9BA,SAA8B;EAAA,IAAnBC,gBAAmB,QAAnBA,gBAAmB;;EAClF;EACC,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,IAAD,EAAOC,QAAP,EAAoB;IAClDC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBL,gBAAnB;;IACA,IAAIG,QAAQ,IAAI,IAAhB,EAAsB;MACpB,IAAIG,IAAI,sBAAOP,SAAP,CAAR;;MACAO,IAAI,CAACC,IAAL,CAAUL,IAAV;MACAJ,YAAY,CAACQ,IAAD,CAAZ;IACD,CAJD,MAIO;MACL,IAAIP,SAAS,CAACS,MAAV,IAAoB,CAAxB,EAA2B;QACzB,IAAIF,KAAI,sBAAOP,SAAP,CAAR;;QACA,IAAMU,KAAK,GAAGH,KAAI,CAACI,SAAL,CAAe,UAAAC,GAAG;UAAA,OAAIA,GAAG,CAACC,EAAJ,IAAUV,IAAI,CAACU,EAAnB;QAAA,CAAlB,CAAd;;QACAN,KAAI,CAACO,MAAL,CAAYJ,KAAZ,EAAmB,CAAnB;;QACAX,YAAY,CAACQ,KAAD,CAAZ;MACD;IACF;EAEF,CAfD;;EAgBA,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAUZ,QAAV,EAAuB;IAC9C,IAAIA,QAAQ,IAAI,IAAhB,EAAsB;MACpBL,YAAY,CAACiB,OAAD,CAAZ;IACD,CAFD,MAGK;MACH,IAAIA,OAAO,CAACP,MAAR,IAAkB,CAAtB,EAAyB;QAAA,2BACdQ,CADc;UAErB,IAAMP,KAAK,GAAGV,SAAS,CAACW,SAAV,CAAoB,UAAAC,GAAG;YAAA,OAAIA,GAAG,CAACC,EAAJ,IAAUG,OAAO,CAACC,CAAD,CAAP,CAAWJ,EAAzB;UAAA,CAAvB,CAAd;UACAb,SAAS,CAACc,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB;UACAX,YAAY,CAACC,SAAD,CAAZ;QAJqB;;QACvB,KAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACP,MAA5B,EAAoCQ,CAAC,EAArC,EAAyC;UAAA,MAAhCA,CAAgC;QAIxC;MACF;IACF;EAEF,CAdD;;EAeA,IAAMC,OAAO,GAAG,CACd;IACEC,SAAS,EAAE,cADb;IAEEC,IAAI,EAAE,eAFR;IAGEC,SAAS,EAAE,mBAACC,WAAD,EAAcC,GAAd;MAAA,oBACT,uDACI;QAAM,SAAS,EAAC,YAAhB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAA8BA,GAAG,CAACC,UAAlC,CADJ,eACwD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADxD,eAEI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAASD,GAAG,CAACE,WAAb,CAFJ,eAEsC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAFtC,eAGI;QAAM,SAAS,EAAC,YAAhB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAA8BF,GAAG,CAACG,eAAlC,CAHJ,CADS;IAAA;EAHb,CADc,EAYd;IACEP,SAAS,EAAE,WADb;IAEEC,IAAI,EAAE,YAFR;IAGEC,SAAS,EAAE,mBAACC,WAAD,EAAcC,GAAd;MAAA,oBACT,uDACI;QAAM,SAAS,EAAC,YAAhB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAA8BA,GAAG,CAACI,OAAlC,CADJ,eACqD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADrD,CADS;IAAA;EAHb,CAZc,EAqBd;IACER,SAAS,EAAE,MADb;IAEEC,IAAI,EAAE,OAFR;IAGEC,SAAS,EAAE,mBAACC,WAAD,EAAcC,GAAd;MAAA,oBACT,uDACI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAASA,GAAG,CAACK,YAAb,CADJ,eACuC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADvC,eAEI;QAAM,SAAS,EAAC,YAAhB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAA8BL,GAAG,CAACM,WAAlC,CAFJ,CADS;IAAA;EAHb,CArBc,EA+Bd;IACEV,SAAS,EAAE,KADb;IAEEC,IAAI,EAAE,MAFR;IAGEC,SAAS,EAAE,mBAACC,WAAD,EAAcC,GAAd;MAAA,oBACT,uDACI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAASA,GAAG,CAACO,QAAb,CADJ,eACmC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADnC,CADS;IAAA;EAHb,CA/Bc,EAwCd;IACEX,SAAS,EAAE,QADb;IAEEC,IAAI,EAAE,QAFR;IAGEC,SAAS,EAAE,mBAACC,WAAD,EAAcC,GAAd;MAAA,oBACT,uDACI;QAAQ,SAAS,EAAC,oBAAlB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAwCA,GAAG,CAACQ,QAA5C,CADJ,eACkE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADlE,CADS;IAAA;EAHb,CAxCc,CAAhB;EAmDA,oBACE,uDACE,oBAAC,cAAD;IACE,cAAc,EAAC,kBADjB;IAEE,OAAO,EAAC,+DAFV;IAGE,UAAU,MAHZ;IAIE,QAAQ,EAAE,KAJZ;IAKE,QAAQ,EAAC,IALX;IAME,IAAI,EAAE9B,gBANR;IAOE,OAAO,EAAEiB,OAPX;IAQE,SAAS,EACP;MACEc,IAAI,EAAE,UADR;MAEEC,QAAQ,EAAE,kBAACV,GAAD,EAAMnB,QAAN,EAAgB8B,QAAhB,EAA0BC,CAA1B,EAAgC;QACxCjC,uBAAuB,CAACqB,GAAD,EAAMnB,QAAN,CAAvB;MACD,CAJH;MAKEgC,WAAW,EAAE,qBAAChC,QAAD,EAAWiC,IAAX,EAAiBF,CAAjB,EAAuB;QAClCpB,gBAAgB,CAACsB,IAAD,EAAOjC,QAAP,CAAhB;MAED;IARH,CATJ;IAsBE,UAAU,EAAEP,iBAAiB,CAAC;MAAEyC,WAAW,EAAE,EAAf;MAAmBC,SAAS,EAAE;IAA9B,CAAD,CAtB/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF;AA4BD"},"metadata":{},"sourceType":"module"}