{"ast":null,"code":"import _defineProperty from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/SalesAndCollection.js\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\"; // import ReportsSubTabsHeader from \"../../../../../../sub-tabs-header/ReportsSubTabsHeader\";\n// import InventoryStockHeader from \"../../../../../../header/InventoryStockHeader\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport { getDayDiff, getDaysCount } from \"../../../Util\";\nexport default function SalesCollectionReport() {\n  var _this = this;\n\n  var fields = {\n    locationId: \"\",\n    salesOfficerId: \"\",\n    accountingYearId: \"\",\n    report: \"\",\n    reportType: \"\",\n    startDate: \"\",\n    endDate: \"\"\n  };\n\n  var _useState = useState(fields),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var selectedCompany = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var userLoginId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n  var intl = useIntl();\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      locationTree = _useState4[0],\n      setLocationTree = _useState4[1]; //const [company, setCompany] = useState([]);\n\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      accountingYearId = _useState6[0],\n      setAccountingYearId = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      locationId = _useState8[0],\n      setLocationId = _useState8[1]; //const [childCategoryList, setChildCategoryList] = useState([]);\n\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      productCategoryId = _useState10[0],\n      setProductCategoryId = _useState10[1]; // const [allAccountingYear, setAllAccountingYear] = useState([]);\n  // const [categoryName, setCategoryName] = useState('All');\n\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      salesOfficer = _useState12[0],\n      setSalesOfficer = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      fiscalYears = _useState14[0],\n      setFiscalYears = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      fiscalYearsValue = _useState16[0],\n      setFiscalYearsValue = _useState16[1]; // const [inputs, setInputs] = useState({});\n\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      salesOfficerValue = _useState18[0],\n      setSalesOfficerValue = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      showReport = _useState20[0],\n      setShowReport = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      reportData = _useState22[0],\n      setReportData = _useState22[1];\n\n  var _useState23 = useState(),\n      _useState24 = _slicedToArray(_useState23, 2),\n      option = _useState24[0],\n      setOption = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      showSalesOfficer = _useState26[0],\n      setShowSalesOfficer = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      showProduct = _useState28[0],\n      setShowProduct = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      showTerritory = _useState30[0],\n      setShowTerritory = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      showArea = _useState32[0],\n      setShowArea = _useState32[1];\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      showZone = _useState34[0],\n      setShowZone = _useState34[1];\n\n  var searchParams = useMemo(function () {\n    return {\n      userLoginId: userLoginId,\n      companyId: selectedCompany,\n      accountingYearId: accountingYearId,\n      locationId: locationId,\n      productCategoryId: productCategoryId\n    };\n  }, [userLoginId, selectedCompany, accountingYearId, locationId, productCategoryId]);\n\n  var _useState35 = useState({}),\n      _useState36 = _slicedToArray(_useState35, 2),\n      selectedLocation = _useState36[0],\n      setSelectedLocation = _useState36[1];\n\n  var _useState37 = useState({\n    totalQuantity: 0,\n    totlaSalesAmount: 0\n  }),\n      _useState38 = _slicedToArray(_useState37, 2),\n      total = _useState38[0],\n      setTotal = _useState38[1];\n\n  var _useState39 = useState([]),\n      _useState40 = _slicedToArray(_useState39, 2),\n      salesDataList = _useState40[0],\n      setSalesCollectionReportList = _useState40[1];\n\n  var history = useHistory();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      singleAll = _React$useState4[0],\n      setSingleAll = _React$useState4[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? 'simple-popper' : undefined; // useEffect(() => {\n  //     // document.getElementById('pills-inventory-stock-report-tab').classList.add('active')\n  //     // document.getElementById('pills-inventory-stock-sales-collection-report-tab').classList.add('active')\n  // }, []);\n\n  useEffect(function () {\n    document.getElementById('reportShowIframe').style.display = \"none\";\n    getLocationTreeList(searchParams);\n    getAllFiscalYear(selectedCompany);\n  }, [userLoginId, selectedCompany]); // useEffect(() => {\n  // }, [searchParams]);\n\n  var getLocationTreeList = function getLocationTreeList(params) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/location-tree/locationTree/\").concat(params.userLoginId, \"/\").concat(params.companyId);\n    axios.get(URL).then(function (response) {\n      var locationTree = response.data.data;\n      setLocationTree(locationTree);\n    }).catch(function (err) {\n      showError(\"Cannot get Location Tree data.\");\n    });\n  };\n\n  var selectLocationTreeNode = function selectLocationTreeNode(node) {\n    var id = \"summary-id-\" + node.id;\n    var getId = document.getElementById(id);\n    var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n    for (var i = 0; i < getElements.length; i++) {\n      getElements[i].classList.remove('tree-nav-item');\n    }\n\n    if (getId) {\n      getId.classList.add('tree-nav-item');\n      setSelectedLocation(node);\n      setLocationId(node.id);\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"locationId\": node.id\n      }));\n      if (node.id) getSalesOfficerListByLocation(node.id, selectedCompany);\n    }\n  };\n\n  var getSalesOfficerListByLocation = function getSalesOfficerListByLocation(locationId, companyId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/auth/get-sales-officer-location/\").concat(locationId, \"/\").concat(companyId);\n    axios.get(URL).then(function (response) {\n      if (response.data.data != undefined) {\n        setSalesOfficer(response.data.data);\n      } else {\n        setSalesOfficer([]);\n        setSalesOfficerValue('');\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Company data.\");\n    });\n  };\n\n  var getAllFiscalYear = function getAllFiscalYear(companyId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/accounting-year/companyWise/\").concat(selectedCompany);\n    axios.get(URL).then(function (response) {\n      if (response.data.data != undefined) {\n        setFiscalYears(response.data.data);\n      } else {\n        setFiscalYears([]);\n        setFiscalYearsValue('');\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Company data.\");\n    });\n  };\n\n  var handleChange = function handleChange(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    setInputs(function (values) {\n      return _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var validate = function validate() {\n    // if (!inputs.locationId) {\n    //     showError('Location is required.');\n    //     return false;\n    // }\n    // else if (!inputs.salesOfficerId) {\n    //     showError('Sales Officer Name is required.');\n    //     return false;\n    // }\n    if (!inputs.accountingYearId) {\n      showError('Acconting Year is required.');\n      return false;\n    } else if (!inputs.startDate) {\n      showError(\"Start date  is required\");\n    } else if (!inputs.endDate) {\n      showError(\"End date is required\");\n    } else if (inputs.endDate < inputs.startDate) {\n      showError(\"End Date should be greater than Start Date.\");\n      return false;\n    } else if (!inputs.report) {\n      showError('Report Format is required.');\n      return false;\n    } else if (!inputs.reportType) {\n      showError('Report Type is required.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var previewValidate = function previewValidate() {\n    if (!inputs.accountingYearId) {\n      showError('Acconting Year is required.');\n      return false;\n    } else if (!inputs.startDate) {\n      showError(\"Start date  is required\");\n    } else if (!inputs.endDate) {\n      showError(\"End date is required\");\n    } else if (inputs.endDate < inputs.startDate) {\n      showError(\"End Date should be greater than Start Date.\");\n      return false;\n    } else if (!inputs.reportType) {\n      showError('Report Type is required.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var preview = function preview() {\n    if (!previewValidate()) {\n      return false;\n    }\n\n    var queryString = '?';\n    queryString += 'companyId=' + parseInt(selectedCompany);\n    queryString += inputs.locationId ? '&locationId=' + parseInt(inputs.locationId) : '';\n    queryString += inputs.salesOfficerId ? '&salesOfficerId=' + parseInt(inputs.salesOfficerId) : '';\n    queryString += '&accountingYearId=' + parseInt(inputs.accountingYearId);\n    queryString += '&startDate=' + inputs.startDate;\n    queryString += '&endDate=' + inputs.endDate;\n    queryString += '&reportFormat=' + \"pdf\";\n    queryString += '&reportType=' + inputs.reportType;\n    var dataURL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/reports/sales-and-collection\") + queryString;\n    axios.get(dataURL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var file = new Blob([response.data], {\n        type: \"application/pdf\"\n      });\n      var fileURL = URL.createObjectURL(file);\n      var iframe = document.querySelector(\"iframe\");\n      if (iframe === null || iframe === void 0 ? void 0 : iframe.src) iframe.src = fileURL;\n      document.getElementById('reportShowIframe').style.display = \"inline-block\";\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var download = function download() {\n    if (!validate()) {\n      return false;\n    }\n\n    var queryString = '?';\n    queryString += 'companyId=' + parseInt(selectedCompany);\n    queryString += inputs.locationId ? '&locationId=' + parseInt(inputs.locationId) : '';\n    queryString += inputs.salesOfficerId ? '&salesOfficerId=' + parseInt(inputs.salesOfficerId) : '';\n    queryString += '&accountingYearId=' + parseInt(inputs.accountingYearId);\n    queryString += '&startDate=' + inputs.startDate;\n    queryString += '&endDate=' + inputs.endDate;\n    queryString += '&reportFormat=' + inputs.report;\n    queryString += '&reportType=' + inputs.reportType;\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/reports/sales-and-collection\") + queryString;\n    axios.get(URL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var url = window.URL.createObjectURL(new Blob([response.data]));\n      var link = document.createElement('a');\n      link.href = url;\n\n      if (inputs.report == \"pdf\") {\n        link.setAttribute('download', \"salesAndCollection.pdf\");\n      } else {\n        link.setAttribute('download', \"salesAndCollection.xlsx\");\n      }\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  var getReportData = function getReportData() {\n    if (!validate()) {\n      return false;\n    }\n\n    setShowReport(inputs.reportType); // if(!validate()){\n    //     return false;\n    // }\n    // let queryString = \"?\";\n    // queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n    // queryString += '&startDate=' + inputs.startDate;\n    // queryString += '&endDate=' + inputs.endDate;\n    //const URL = `${process.env.REACT_APP_API_URL}/api/reports/distributor-ledger-view`+queryString;\n\n    axios.get(URL).then(function (response) {\n      setReportData(response.data.data);\n      setShowReport(true);\n    }).catch();\n  };\n\n  var getOption = function getOption(event) {\n    setOption(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MisReportBreadCrum, {\n    menuTitle: \"Sales And Collection Report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-3\",\n    style: {\n      borderRight: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottom: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc3.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginLeft: \"10px\",\n      color: \"#828282\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 41\n    }\n  }, intl.formatMessage({\n    id: \"COMMON.LOCATION_ALL\"\n  })))), /*#__PURE__*/React.createElement(LocationTreeView, {\n    tree: locationTree,\n    selectLocationTreeNode: selectLocationTreeNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 45\n    }\n  }, \"Sales Officer\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 97\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    name: \"salesOfficerId\",\n    options: salesOfficer,\n    onKeyDown: getSalesOfficerListByLocation,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.salesOfficerName;\n    },\n    value: salesOfficerValue,\n    onChange: function onChange(event, newValue) {\n      setSalesOfficerValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          salesOfficerId: newValue.id\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Sales Officer*\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 53\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 72\n    }\n  }, \"Fiscal Year\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 106\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(Autocomplete //id=\"accountingYearId\"\n  , {\n    name: \"accountingYearId\",\n    options: fiscalYears,\n    onKeyDown: getAllFiscalYear,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.fiscalYearName;\n    },\n    value: fiscalYearsValue,\n    onChange: function onChange(event, newValue) {\n      setFiscalYearsValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          accountingYearId: newValue.id\n        }));\n      } else {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          accountingYearId: ''\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Fiscal Year*\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 49\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 41\n    }\n  }, \"Start Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 82\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"startDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"startDate\",\n    value: inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 41\n    }\n  }, \"End Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 80\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"endDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"endDate\",\n    value: inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    required: true,\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 76\n    }\n  }, \"Report Type\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 110\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"reportType\",\n    name: \"reportType\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 49\n    }\n  }, \"Select Report Type\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"byProduct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 49\n    }\n  }, \"By Product\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"bySalesOfficer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 49\n    }\n  }, \"By Sales Officer\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 76\n    }\n  }, \"Report Format\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 112\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"reportId\",\n    name: \"report\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 49\n    }\n  }, \"Select Report Format\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 49\n    }\n  }, \"Pdf\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"excel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 49\n    }\n  }, \"Excel\"))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: download,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 33\n    }\n  }, \"Download\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-5 mr-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 37\n    }\n  }, \"Preview\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    src: \"\",\n    className: \"w-100\",\n    id: \"reportShowIframe\",\n    height: \"500px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 29\n    }\n  }))))));\n}","map":{"version":3,"names":["React","useEffect","useMemo","useState","toAbsoluteUrl","Card","CardBody","useHistory","LocationTreeView","showError","axios","useIntl","shallowEqual","useSelector","Autocomplete","TextField","Button","typeOf","moment","Flatpickr","MisReportBreadCrum","getDayDiff","getDaysCount","SalesCollectionReport","fields","locationId","salesOfficerId","accountingYearId","report","reportType","startDate","endDate","inputs","setInputs","selectedCompany","state","auth","company","userLoginId","user","userId","intl","locationTree","setLocationTree","setAccountingYearId","setLocationId","productCategoryId","setProductCategoryId","salesOfficer","setSalesOfficer","fiscalYears","setFiscalYears","fiscalYearsValue","setFiscalYearsValue","salesOfficerValue","setSalesOfficerValue","showReport","setShowReport","reportData","setReportData","option","setOption","showSalesOfficer","setShowSalesOfficer","showProduct","setShowProduct","showTerritory","setShowTerritory","showArea","setShowArea","showZone","setShowZone","searchParams","companyId","selectedLocation","setSelectedLocation","totalQuantity","totlaSalesAmount","total","setTotal","salesDataList","setSalesCollectionReportList","history","anchorEl","setAnchorEl","singleAll","setSingleAll","handleClick","event","currentTarget","open","Boolean","id","undefined","document","getElementById","style","display","getLocationTreeList","getAllFiscalYear","params","URL","process","env","REACT_APP_API_URL","get","then","response","data","catch","err","selectLocationTreeNode","node","getId","getElements","getElementsByClassName","i","length","classList","remove","add","getSalesOfficerListByLocation","handleChange","name","target","value","values","validate","previewValidate","preview","queryString","parseInt","dataURL","responseType","file","Blob","type","fileURL","createObjectURL","iframe","querySelector","src","download","url","window","link","createElement","href","setAttribute","body","appendChild","click","removeChild","getReportData","getOption","borderRight","borderBottom","width","height","textAlign","marginLeft","color","formatMessage","marginTop","salesOfficerName","newValue","fiscalYearName","format","dateFormat","Date","e"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/SalesAndCollection.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\n// import ReportsSubTabsHeader from \"../../../../../../sub-tabs-header/ReportsSubTabsHeader\";\n\n\n// import InventoryStockHeader from \"../../../../../../header/InventoryStockHeader\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport { getDayDiff, getDaysCount } from \"../../../Util\"\n\n\nexport default function SalesCollectionReport() {\n\n    const fields = {\n        locationId: \"\",\n        salesOfficerId: \"\",\n        accountingYearId: \"\",\n        report: \"\",\n        reportType: \"\",\n        startDate: \"\",\n        endDate: \"\"\n\n    };\n\n    const [inputs, setInputs] = useState(fields);\n    const selectedCompany = useSelector((state) => state.auth.company, shallowEqual);\n    const userLoginId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const intl = useIntl();\n    const [locationTree, setLocationTree] = useState([]);\n    //const [company, setCompany] = useState([]);\n    const [accountingYearId, setAccountingYearId] = useState('');\n    const [locationId, setLocationId] = useState('');\n    //const [childCategoryList, setChildCategoryList] = useState([]);\n    const [productCategoryId, setProductCategoryId] = useState('');\n    // const [allAccountingYear, setAllAccountingYear] = useState([]);\n    // const [categoryName, setCategoryName] = useState('All');\n    const [salesOfficer, setSalesOfficer] = useState([]);\n    const [fiscalYears, setFiscalYears] = useState([]);\n    const [fiscalYearsValue, setFiscalYearsValue] = useState(null);\n    // const [inputs, setInputs] = useState({});\n    const [salesOfficerValue, setSalesOfficerValue] = useState(null);\n    const [showReport, setShowReport] = useState('');\n    const [reportData, setReportData] = useState([]);\n    const [option, setOption] = useState()\n\n\n    const [showSalesOfficer, setShowSalesOfficer] = useState(false);\n    const [showProduct, setShowProduct] = useState(false);\n    const [showTerritory, setShowTerritory] = useState(false);\n    const [showArea, setShowArea] = useState(false);\n    const [showZone, setShowZone] = useState(false);\n\n    const searchParams = useMemo(() => {\n        return {\n            userLoginId: userLoginId, companyId: selectedCompany, accountingYearId: accountingYearId\n            , locationId: locationId, productCategoryId: productCategoryId\n        }\n    }, [userLoginId, selectedCompany, accountingYearId, locationId, productCategoryId]);\n\n    const [selectedLocation, setSelectedLocation] = useState({});\n    const [total, setTotal] = useState({ totalQuantity: 0, totlaSalesAmount: 0 });\n    const [salesDataList, setSalesCollectionReportList] = useState([]);\n\n    let history = useHistory();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    let [singleAll, setSingleAll] = React.useState([]);\n\n    const handleClick = (event) => {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popper' : undefined;\n    // useEffect(() => {\n    //     // document.getElementById('pills-inventory-stock-report-tab').classList.add('active')\n    //     // document.getElementById('pills-inventory-stock-sales-collection-report-tab').classList.add('active')\n    // }, []);\n\n    useEffect(() => {\n        document.getElementById('reportShowIframe').style.display = \"none\";\n        getLocationTreeList(searchParams);\n        getAllFiscalYear(selectedCompany);\n    }, [userLoginId, selectedCompany]);\n\n    // useEffect(() => {\n    // }, [searchParams]);\n\n    const getLocationTreeList = (params) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/location-tree/locationTree/${params.userLoginId}/${params.companyId}`;\n        axios.get(URL).then(response => {\n            const locationTree = response.data.data;\n            setLocationTree(locationTree);\n        }).catch(err => {\n            showError(\"Cannot get Location Tree data.\");\n        });\n    }\n\n    const selectLocationTreeNode = (node) => {\n        let id = \"summary-id-\" + node.id;\n        const getId = document.getElementById(id);\n        const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n        for (var i = 0; i < getElements.length; i++) {\n            getElements[i].classList.remove('tree-nav-item');\n        }\n        if (getId) {\n            getId.classList.add('tree-nav-item');\n            setSelectedLocation(node);\n            setLocationId(node.id);\n            setInputs({ ...inputs, \"locationId\": node.id })\n            if (node.id)\n                getSalesOfficerListByLocation(node.id, selectedCompany);\n        }\n    }\n\n    const getSalesOfficerListByLocation = (locationId, companyId) => {\n        const URL = `${process.env.REACT_APP_API_URL}/auth/get-sales-officer-location/${locationId}/${companyId}`;\n        axios.get(URL).then(response => {\n            if (response.data.data != undefined) {\n                setSalesOfficer(response.data.data);\n            }\n            else {\n                setSalesOfficer([]);\n                setSalesOfficerValue('');\n            }\n        }).catch(err => {\n            showError(\"Cannot get Company data.\");\n        });\n    }\n\n    const getAllFiscalYear = (companyId) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/accounting-year/companyWise/${selectedCompany}`;\n        axios.get(URL).then(response => {\n            if (response.data.data != undefined) {\n                setFiscalYears(response.data.data);\n            }\n            else {\n                setFiscalYears([]);\n                setFiscalYearsValue('');\n            }\n        }).catch(err => {\n            showError(\"Cannot get Company data.\");\n        });\n    }\n\n    const handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setInputs(values => ({ ...values, [name]: value }))\n    }\n\n    const validate = () => {\n        // if (!inputs.locationId) {\n        //     showError('Location is required.');\n        //     return false;\n        // }\n\n        // else if (!inputs.salesOfficerId) {\n        //     showError('Sales Officer Name is required.');\n        //     return false;\n        // }\n\n        if (!inputs.accountingYearId) {\n            showError('Acconting Year is required.');\n            return false;\n        }\n\n        else if (!inputs.startDate) {\n            showError(\"Start date  is required\");\n        }\n        else if (!inputs.endDate) {\n            showError(\"End date is required\");\n        }\n\n        else if (inputs.endDate < inputs.startDate) {\n            showError(\"End Date should be greater than Start Date.\");\n            return false;\n        }\n\n        else if (!inputs.report) {\n            showError('Report Format is required.');\n            return false;\n        }\n        else if (!inputs.reportType) {\n            showError('Report Type is required.');\n            return false;\n        }\n        return true;\n    }\n\n    const previewValidate = () => {\n        if (!inputs.accountingYearId) {\n            showError('Acconting Year is required.');\n            return false;\n        }\n\n        else if (!inputs.startDate) {\n            showError(\"Start date  is required\");\n        }\n        else if (!inputs.endDate) {\n            showError(\"End date is required\");\n        }\n\n        else if (inputs.endDate < inputs.startDate) {\n            showError(\"End Date should be greater than Start Date.\");\n            return false;\n        }\n        else if (!inputs.reportType) {\n            showError('Report Type is required.');\n            return false;\n        }\n        return true;\n    }\n\n\n    const preview = () => {\n        if (!previewValidate()) {\n            return false;\n        }\n        let queryString = '?';\n        queryString += 'companyId=' + parseInt(selectedCompany);\n        queryString += inputs.locationId ? '&locationId=' + parseInt(inputs.locationId) : '';\n        queryString += inputs.salesOfficerId ? '&salesOfficerId=' + parseInt(inputs.salesOfficerId) : '';\n        queryString += '&accountingYearId=' + parseInt(inputs.accountingYearId);\n        queryString += '&startDate=' + inputs.startDate;\n        queryString += '&endDate=' + inputs.endDate;\n        queryString += '&reportFormat=' + \"pdf\";\n        queryString += '&reportType=' + inputs.reportType;\n\n        const dataURL = `${process.env.REACT_APP_API_URL}/api/reports/sales-and-collection` + queryString;\n        axios.get(dataURL, { responseType: 'blob' }).then(response => {\n            const file = new Blob([response.data], { type: \"application/pdf\" });\n            const fileURL = URL.createObjectURL(file);\n            const iframe = document.querySelector(\"iframe\");\n            if (iframe?.src) iframe.src = fileURL;\n            document.getElementById('reportShowIframe').style.display = \"inline-block\";\n        }).catch(err => {\n            showError();\n        });\n\n    }\n    const download = () => {\n        if (!validate()) {\n            return false;\n        }\n        let queryString = '?';\n        queryString += 'companyId=' + parseInt(selectedCompany);\n        queryString += inputs.locationId ? '&locationId=' + parseInt(inputs.locationId) : '';\n        queryString += inputs.salesOfficerId ? '&salesOfficerId=' + parseInt(inputs.salesOfficerId) : '';\n        queryString += '&accountingYearId=' + parseInt(inputs.accountingYearId);\n        queryString += '&startDate=' + inputs.startDate;\n        queryString += '&endDate=' + inputs.endDate;\n        queryString += '&reportFormat=' + inputs.report;\n        queryString += '&reportType=' + inputs.reportType;\n\n        const URL = `${process.env.REACT_APP_API_URL}/api/reports/sales-and-collection` + queryString;\n        axios.get(URL, { responseType: 'blob' }).then(response => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            if (inputs.report == \"pdf\") {\n                link.setAttribute('download', \"salesAndCollection.pdf\");\n            }\n            else {\n                link.setAttribute('download', \"salesAndCollection.xlsx\");\n            }\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n\n        }).catch(err => {\n            showError();\n        });\n\n    }\n\n    const getReportData = () => {\n\n        if (!validate()) {\n            return false;\n        }\n\n        setShowReport(inputs.reportType);\n        // if(!validate()){\n        //     return false;\n        // }\n        // let queryString = \"?\";\n        // queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n        // queryString += '&startDate=' + inputs.startDate;\n        // queryString += '&endDate=' + inputs.endDate;\n\n        //const URL = `${process.env.REACT_APP_API_URL}/api/reports/distributor-ledger-view`+queryString;\n        axios.get(URL).then((response) => {\n            setReportData(response.data.data);\n            setShowReport(true);\n        }).catch();\n    }\n\n    const getOption = (event) => {\n        setOption(event.target.value)\n    }\n\n\n    return (\n        <>\n            <div>\n                <MisReportBreadCrum menuTitle=\"Sales And Collection Report\" />\n            </div>\n            <div>\n                <Card>\n                    <CardBody>\n                        <div className='row'>\n                            {/* LEFT SIDE TREE ROW */}\n                            <div className='col-xl-3' style={{ borderRight: \"1px solid #F2F2F2\" }}>\n                                <div style={{ borderBottom: \"1px solid #F2F2F2\" }}>\n                                    <label>\n                                        <img src={toAbsoluteUrl(\"/images/loc3.png\")}\n                                            style={{ width: \"20px\", height: \"20px\", textAlign: \"center\" }}\n                                            alt='Company Picture' />\n                                        <strong style={{ marginLeft: \"10px\", color: \"#828282\" }}>{intl.formatMessage({ id: \"COMMON.LOCATION_ALL\" })}</strong>\n                                    </label>\n                                </div>\n                                {/* TREE */}\n                                <LocationTreeView tree={locationTree} selectLocationTreeNode={selectLocationTreeNode} />\n                            </div>\n                            {/* RIGHT SIDE LIST ROW */}\n                            <div className='col-xl-9'>\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <div style={{ marginTop: \"5px\" }}>\n                                            <label className='level-title'>Sales Officer</label><br />\n                                            <Autocomplete\n                                                name=\"salesOfficerId\"\n                                                options={salesOfficer}\n                                                onKeyDown={getSalesOfficerListByLocation}\n                                                getOptionLabel={(option) => option.salesOfficerName}\n                                                value={salesOfficerValue}\n                                                onChange={(event, newValue) => {\n                                                    setSalesOfficerValue(newValue)\n                                                    if (newValue !== null) {\n                                                        setInputs({ ...inputs, salesOfficerId: newValue.id });\n                                                    }\n                                                }}\n                                                renderInput={(params) => (\n                                                    <TextField {...params} label=\"Select Sales Officer*\" />\n                                                )}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <label className='level-title'><span className=\"mr-1\">Fiscal Year<i style={{ color: \"red\" }}>*</i></span></label>\n                                        <Autocomplete\n                                            //id=\"accountingYearId\"\n                                            name=\"accountingYearId\"\n                                            options={fiscalYears}\n                                            onKeyDown={getAllFiscalYear}\n                                            getOptionLabel={(option) => option.fiscalYearName}\n                                            value={fiscalYearsValue}\n                                            onChange={(event, newValue) => {\n                                                setFiscalYearsValue(newValue)\n                                                if (newValue !== null) {\n                                                    setInputs({ ...inputs, accountingYearId: newValue.id });\n                                                } else {\n                                                    setInputs({ ...inputs, accountingYearId: '' });\n                                                }\n                                            }}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Select Fiscal Year*\" />\n                                            )}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>Start Date<i style={{ color: \"red\" }}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"startDate\" placeholder=\"dd-MM-yy\"\n                                            name='startDate'\n                                            value={inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"d-M-Y\" }}\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                })\n\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>End Date<i style={{ color: \"red\" }}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"endDate\" placeholder=\"dd-MM-yy\"\n                                            name='endDate'\n                                            value={inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"d-M-Y\" }} required\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                })\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span className=\"mr-1\">Report Type<i style={{ color: \"red\" }}>*</i></span></label>\n                                            <select className=\"form-control\" id=\"reportType\" name=\"reportType\"\n                                                onChange={(e) => handleChange(e)} >\n                                                <option value=\"\">Select Report Type</option>\n                                                <option value=\"byProduct\">By Product</option>\n                                                <option value=\"bySalesOfficer\">By Sales Officer</option>\n                                                {/* <option value=\"byTerritory\">By Territory</option>\n                                                <option value=\"byArea\">By Area</option>\n                                                <option value=\"byZone\">By Zone</option> */}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span className=\"mr-1\">Report Format<i style={{ color: \"red\" }}>*</i></span></label>\n                                            <select className=\"form-control\" id=\"reportId\" name=\"report\"\n                                                onChange={(e) => handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report Format</option>\n                                                <option value=\"pdf\">Pdf</option>\n                                                <option value=\"excel\">Excel</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <Button className=\"float-right mt-5\" id=\"gotItBtn\" variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={download}>Download\n                                </Button>\n\n                                <div className=\"float-right\">\n                                    <Button className=\"mt-5 mr-5\" id=\"gotItBtn\" variant=\"contained\" color=\"primary\"\n                                        onClick={preview}>Preview\n                                    </Button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='mt-5'>\n                            <iframe src=\"\" className='w-100' id=\"reportShowIframe\" height=\"500px\" />\n                        </div>\n                    </CardBody>\n\n                </Card>\n            </div>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}