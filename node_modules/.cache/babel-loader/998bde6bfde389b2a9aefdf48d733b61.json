{"ast":null,"code":"import _classCallCheck from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/ReactBootstrapExamples/ToastsExamplesPage.js\";\nimport React from \"react\";\nimport { Button, Toast, Col, Row } from \"react-bootstrap\";\nimport { Notice, KTCodeExample } from \"../../../_metronic/_partials/controls\";\n\nvar Example = /*#__PURE__*/function (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  var _super = _createSuper(Example);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      showA: true,\n      showB: true\n    };\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          showA = _this$state.showA,\n          showB = _this$state.showB;\n\n      var toggleShowA = function toggleShowA() {\n        return _this2.setState({\n          showA: !showA\n        });\n      };\n\n      var toggleShowB = function toggleShowB() {\n        return _this2.setState({\n          showB: !showB\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Toast, {\n        show: showA,\n        onClose: toggleShowA,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Toast.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, \"Bootstrap\"), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, \"11 mins ago\")), /*#__PURE__*/React.createElement(Toast.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, \"Woohoo, you're reading this text in a Toast!\"))), /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: toggleShowA,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, \"Toggle Toast \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 26\n        }\n      }, \"with\"), \" Animation\")), /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        className: \"my-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Toast, {\n        onClose: toggleShowB,\n        show: showB,\n        animation: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Toast.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, \"Bootstrap\"), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }, \"11 mins ago\")), /*#__PURE__*/React.createElement(Toast.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, \"Woohoo, you're reading this text in a Toast!\"))), /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: toggleShowB,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, \"Toggle Toast \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 26\n        }\n      }, \"without\"), \" Animation\")));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nvar Example1 = /*#__PURE__*/function (_React$Component2) {\n  _inherits(Example1, _React$Component2);\n\n  var _super2 = _createSuper(Example1);\n\n  function Example1(props) {\n    var _this3;\n\n    _classCallCheck(this, Example1);\n\n    _this3 = _super2.call(this, props);\n    _this3.state = {\n      show: false\n    };\n    return _this3;\n  }\n\n  _createClass(Example1, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var show = this.state.show;\n\n      var handleShow = function handleShow() {\n        return _this4.setState({\n          show: true\n        });\n      };\n\n      var handleClose = function handleClose() {\n        return _this4.setState({\n          show: false\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Toast, {\n        onClose: handleClose,\n        show: show,\n        delay: 3000,\n        autohide: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Toast.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, \"Bootstrap\"), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, \"11 mins ago\")), /*#__PURE__*/React.createElement(Toast.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, \"Woohoo, you're reading this text in a Toast!\"))), /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: handleShow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, \"Show Toast\")));\n    }\n  }]);\n\n  return Example1;\n}(React.Component);\n\nvar ToastsExamplesPage = /*#__PURE__*/function (_React$Component3) {\n  _inherits(ToastsExamplesPage, _React$Component3);\n\n  var _super3 = _createSuper(ToastsExamplesPage);\n\n  function ToastsExamplesPage() {\n    _classCallCheck(this, ToastsExamplesPage);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(ToastsExamplesPage, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n        icon: \"flaticon-warning font-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, \"Push notifications to your visitors with a toast, a lightweight and easily customizable alert message.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        className: \"font-weight-bold\",\n        rel: \"noopener noreferrer\",\n        href: \"https://react-bootstrap.github.io/components/toasts/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode1,\n        beforeCodeTitle: \"Basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"section-sub\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, \"To encourage extensible and predictable toasts, we recommend a header and body. Toast headers use display: flex, allowing easy alignment of content thanks to our margin and flexbox utilities.\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"section-sub\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, \"Toasts are as flexible as you need and have very little required markup. At a minimum, we require a single element to contain your \\u201Ctoasted\\u201D content and strongly encourage a dismiss button.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Toast, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Toast.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, \"Bootstrap\"), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, \"11 mins ago\")), /*#__PURE__*/React.createElement(Toast.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }\n      }, \"Hello, world! This is a toast message.\")))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode3,\n        beforeCodeTitle: \"Stacking\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      }, \"When you have multiple toasts, we default to vertically stacking them in a readable manner.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Toast, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Toast.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }, \"Bootstrap\"), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }\n      }, \"just now\")), /*#__PURE__*/React.createElement(Toast.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 19\n        }\n      }, \"See? Just like this.\")), /*#__PURE__*/React.createElement(Toast, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Toast.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      }, \"Bootstrap\"), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }\n      }, \"2 seconds ago\")), /*#__PURE__*/React.createElement(Toast.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 19\n        }\n      }, \"Heads up, toasts will stack automatically\")))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode5,\n        beforeCodeTitle: \"Autohide\",\n        codeBlockHeight: \"400px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }\n      }, \"A Toast can also automatically hide after X milliseconds. For that, use the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 31\n        }\n      }, \"autohide\"), \" prop in combination with\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }, \"delay\"), \" the prop to sepecify the delay. But be aware, that it will only trigger the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 47\n        }\n      }, \"onClose\"), \" function, you have to set manually the show property.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Example1, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode2,\n        beforeCodeTitle: \"Dismissible\",\n        codeBlockHeight: \"400px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Example, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode4,\n        beforeCodeTitle: \"Placement\",\n        codeBlockHeight: \"400px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }\n      }, \"Place toasts with custom CSS as you need them. The top right is often used for notifications, as is the top middle.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        \"aria-live\": \"polite\",\n        \"aria-atomic\": \"true\",\n        style: {\n          position: \"relative\",\n          minHeight: \"200px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: 0,\n          right: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Toast, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Toast.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 23\n        }\n      }, \"Bootstrap\"), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 23\n        }\n      }, \"just now\")), /*#__PURE__*/React.createElement(Toast.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }\n      }, \"See? Just like this.\")), /*#__PURE__*/React.createElement(Toast, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Toast.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"holder.js/20x20?text=%20\",\n        className: \"rounded mr-2\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 23\n        }\n      }, \"Bootstrap\"), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 23\n        }\n      }, \"2 seconds ago\")), /*#__PURE__*/React.createElement(Toast.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }\n      }, \"Heads up, toasts will stack automatically\"))))))));\n    }\n  }]);\n\n  return ToastsExamplesPage;\n}(React.Component);\n\nexport { ToastsExamplesPage as default };\nvar jsCode1 = \"\\n<Toast>\\n  <Toast.Header>\\n    <img src=\\\"holder.js/20x20?text=%20\\\" className=\\\"rounded mr-2\\\" alt=\\\"\\\" />\\n    <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n    <small>11 mins ago</small>\\n  </Toast.Header>\\n  <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\\n</Toast>\\n\";\nvar jsCode2 = \"\\nclass Example extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      showA: true,\\n      showB: true,\\n    };\\n  }\\n\\n  render() {\\n    const { showA, showB } = this.state;\\n    const toggleShowA = () => this.setState({ showA: !showA });\\n    const toggleShowB = () => this.setState({ showB: !showB });\\n    return (\\n      <Row>\\n        <Col xs={6}>\\n          <Toast show={showA} onClose={toggleShowA}>\\n            <Toast.Header>\\n              <img\\n                src=\\\"holder.js/20x20?text=%20\\\"\\n                className=\\\"rounded mr-2\\\"\\n                alt=\\\"\\\"\\n              />\\n              <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n              <small>11 mins ago</small>\\n            </Toast.Header>\\n            <Toast.Body>\\n              Woohoo, you're reading this text in a Toast!\\n            </Toast.Body>\\n          </Toast>\\n        </Col>\\n        <Col xs={6}>\\n          <Button onClick={toggleShowA}>\\n            Toggle Toast <strong>with</strong> Animation\\n          </Button>\\n        </Col>\\n        <Col xs={6} className=\\\"my-1\\\">\\n          <Toast onClose={toggleShowB} show={showB} animation={false}>\\n            <Toast.Header>\\n              <img\\n                src=\\\"holder.js/20x20?text=%20\\\"\\n                className=\\\"rounded mr-2\\\"\\n                alt=\\\"\\\"\\n              />\\n              <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n              <small>11 mins ago</small>\\n            </Toast.Header>\\n            <Toast.Body>\\n              Woohoo, you're reading this text in a Toast!\\n            </Toast.Body>\\n          </Toast>\\n        </Col>\\n        <Col xs={6}>\\n          <Button onClick={toggleShowB}>\\n            Toggle Toast <strong>without</strong> Animation\\n          </Button>\\n        </Col>\\n      </Row>\\n    );\\n  }\\n}\\n\\nrender(<Example />);\\n\";\nvar jsCode3 = \"\\n<>\\n  <Toast>\\n    <Toast.Header>\\n      <img src=\\\"holder.js/20x20?text=%20\\\" className=\\\"rounded mr-2\\\" alt=\\\"\\\" />\\n      <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n      <small>just now</small>\\n    </Toast.Header>\\n    <Toast.Body>See? Just like this.</Toast.Body>\\n  </Toast>\\n  <Toast>\\n    <Toast.Header>\\n      <img src=\\\"holder.js/20x20?text=%20\\\" className=\\\"rounded mr-2\\\" alt=\\\"\\\" />\\n      <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n      <small>2 seconds ago</small>\\n    </Toast.Header>\\n    <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\\n  </Toast>\\n</>\\n\";\nvar jsCode4 = \"\\n<div\\n  aria-live=\\\"polite\\\"\\n  aria-atomic=\\\"true\\\"\\n  style={{\\n    position: 'relative',\\n    minHeight: '200px',\\n  }}\\n>\\n  <div\\n    style={{\\n      position: 'absolute',\\n      top: 0,\\n      right: 0,\\n    }}\\n  >\\n    <Toast>\\n      <Toast.Header>\\n        <img src=\\\"holder.js/20x20?text=%20\\\" className=\\\"rounded mr-2\\\" alt=\\\"\\\" />\\n        <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n        <small>just now</small>\\n      </Toast.Header>\\n      <Toast.Body>See? Just like this.</Toast.Body>\\n    </Toast>\\n    <Toast>\\n      <Toast.Header>\\n        <img src=\\\"holder.js/20x20?text=%20\\\" className=\\\"rounded mr-2\\\" alt=\\\"\\\" />\\n        <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n        <small>2 seconds ago</small>\\n      </Toast.Header>\\n      <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\\n    </Toast>\\n  </div>\\n</div>\\n\";\nvar jsCode5 = \"\\nclass Example extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      show: false,\\n    };\\n  }\\n\\n  render() {\\n    const { show } = this.state;\\n    const handleShow = () => this.setState({ show: true });\\n    const handleClose = () => this.setState({ show: false });\\n    return (\\n      <Row>\\n        <Col xs={6}>\\n          <Toast onClose={handleClose} show={show} delay={3000} autohide>\\n            <Toast.Header>\\n              <img\\n                src=\\\"holder.js/20x20?text=%20\\\"\\n                className=\\\"rounded mr-2\\\"\\n                alt=\\\"\\\"\\n              />\\n              <strong className=\\\"mr-auto\\\">Bootstrap</strong>\\n              <small>11 mins ago</small>\\n            </Toast.Header>\\n            <Toast.Body>\\n              Woohoo, you're reading this text in a Toast!\\n            </Toast.Body>\\n          </Toast>\\n        </Col>\\n        <Col xs={6}>\\n          <Button onClick={handleShow}>Show Toast</Button>\\n        </Col>\\n      </Row>\\n    );\\n  }\\n}\\n\\nrender(<Example />);\\n\";","map":{"version":3,"names":["React","Button","Toast","Col","Row","Notice","KTCodeExample","Example","props","state","showA","showB","toggleShowA","setState","toggleShowB","Component","Example1","show","handleShow","handleClose","ToastsExamplesPage","jsCode1","jsCode3","jsCode5","jsCode2","jsCode4","position","minHeight","top","right"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/ReactBootstrapExamples/ToastsExamplesPage.js"],"sourcesContent":["import React from \"react\";\r\nimport {Button, Toast, Col, Row} from \"react-bootstrap\";\r\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\r\n\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showA: true,\r\n      showB: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { showA, showB } = this.state;\r\n    const toggleShowA = () => this.setState({ showA: !showA });\r\n    const toggleShowB = () => this.setState({ showB: !showB });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast show={showA} onClose={toggleShowA}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowA}>\r\n            Toggle Toast <strong>with</strong> Animation\r\n          </Button>\r\n        </Col>\r\n        <Col xs={6} className=\"my-1\">\r\n          <Toast onClose={toggleShowB} show={showB} animation={false}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowB}>\r\n            Toggle Toast <strong>without</strong> Animation\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nclass Example1 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.state;\r\n    const handleShow = () => this.setState({ show: true });\r\n    const handleClose = () => this.setState({ show: false });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast onClose={handleClose} show={show} delay={3000} autohide>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={handleShow}>Show Toast</Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class ToastsExamplesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Notice icon=\"flaticon-warning font-primary\">\r\n          <span>\r\n            Push notifications to your visitors with a toast, a lightweight and\r\n            easily customizable alert message.\r\n          </span>{\" \"}\r\n          <span>\r\n            For more info please check the components's official{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              className=\"font-weight-bold\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://react-bootstrap.github.io/components/toasts/\"\r\n            >\r\n              demos & documentation\r\n            </a>\r\n          </span>\r\n        </Notice>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic\">\r\n              <div className=\"section\">\r\n                <span className=\"section-sub\">\r\n                  To encourage extensible and predictable toasts, we recommend a\r\n                  header and body. Toast headers use display: flex, allowing\r\n                  easy alignment of content thanks to our margin and flexbox\r\n                  utilities.\r\n                </span>\r\n                <p className=\"section-sub\">\r\n                  Toasts are as flexible as you need and have very little\r\n                  required markup. At a minimum, we require a single element to\r\n                  contain your “toasted” content and strongly encourage a\r\n                  dismiss button.\r\n                </p>\r\n                <div className=\"separator separator-dashed my-7\"></div>\r\n                <Toast>\r\n                  <Toast.Header>\r\n                    <img\r\n                      src=\"holder.js/20x20?text=%20\"\r\n                      className=\"rounded mr-2\"\r\n                      alt=\"\"\r\n                    />\r\n                    <strong className=\"mr-auto\">Bootstrap</strong>\r\n                    <small>11 mins ago</small>\r\n                  </Toast.Header>\r\n                  <Toast.Body>\r\n                    Hello, world! This is a toast message.\r\n                  </Toast.Body>\r\n                </Toast>\r\n              </div>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Stacking\">\r\n              <span>\r\n                When you have multiple toasts, we default to vertically stacking\r\n                them in a readable manner.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <>\r\n                <Toast>\r\n                  <Toast.Header>\r\n                    <img\r\n                      src=\"holder.js/20x20?text=%20\"\r\n                      className=\"rounded mr-2\"\r\n                      alt=\"\"\r\n                    />\r\n                    <strong className=\"mr-auto\">Bootstrap</strong>\r\n                    <small>just now</small>\r\n                  </Toast.Header>\r\n                  <Toast.Body>See? Just like this.</Toast.Body>\r\n                </Toast>\r\n                <Toast>\r\n                  <Toast.Header>\r\n                    <img\r\n                      src=\"holder.js/20x20?text=%20\"\r\n                      className=\"rounded mr-2\"\r\n                      alt=\"\"\r\n                    />\r\n                    <strong className=\"mr-auto\">Bootstrap</strong>\r\n                    <small>2 seconds ago</small>\r\n                  </Toast.Header>\r\n                  <Toast.Body>\r\n                    Heads up, toasts will stack automatically\r\n                  </Toast.Body>\r\n                </Toast>\r\n              </>\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode5}\r\n              beforeCodeTitle=\"Autohide\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                A Toast can also automatically hide after X milliseconds. For\r\n                that, use the <code>autohide</code> prop in combination with{\" \"}\r\n                <code>delay</code> the prop to sepecify the delay. But be aware,\r\n                that it will only trigger the <code>onClose</code> function, you\r\n                have to set manually the show property.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <Example1 />\r\n            </KTCodeExample>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <KTCodeExample\r\n              jsCode={jsCode2}\r\n              beforeCodeTitle=\"Dismissible\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <Example />\r\n            </KTCodeExample>\r\n\r\n            <KTCodeExample\r\n              jsCode={jsCode4}\r\n              beforeCodeTitle=\"Placement\"\r\n              codeBlockHeight=\"400px\"\r\n            >\r\n              <span>\r\n                Place toasts with custom CSS as you need them. The top right is\r\n                often used for notifications, as is the top middle.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div\r\n                aria-live=\"polite\"\r\n                aria-atomic=\"true\"\r\n                style={{\r\n                  position: \"relative\",\r\n                  minHeight: \"200px\"\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    right: 0\r\n                  }}\r\n                >\r\n                  <Toast>\r\n                    <Toast.Header>\r\n                      <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                      />\r\n                      <strong className=\"mr-auto\">Bootstrap</strong>\r\n                      <small>just now</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>See? Just like this.</Toast.Body>\r\n                  </Toast>\r\n                  <Toast>\r\n                    <Toast.Header>\r\n                      <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                      />\r\n                      <strong className=\"mr-auto\">Bootstrap</strong>\r\n                      <small>2 seconds ago</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>\r\n                      Heads up, toasts will stack automatically\r\n                    </Toast.Body>\r\n                  </Toast>\r\n                </div>\r\n              </div>\r\n            </KTCodeExample>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst jsCode1 = `\r\n<Toast>\r\n  <Toast.Header>\r\n    <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n    <strong className=\"mr-auto\">Bootstrap</strong>\r\n    <small>11 mins ago</small>\r\n  </Toast.Header>\r\n  <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\r\n</Toast>\r\n`;\r\nconst jsCode2 = `\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showA: true,\r\n      showB: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { showA, showB } = this.state;\r\n    const toggleShowA = () => this.setState({ showA: !showA });\r\n    const toggleShowB = () => this.setState({ showB: !showB });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast show={showA} onClose={toggleShowA}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowA}>\r\n            Toggle Toast <strong>with</strong> Animation\r\n          </Button>\r\n        </Col>\r\n        <Col xs={6} className=\"my-1\">\r\n          <Toast onClose={toggleShowB} show={showB} animation={false}>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={toggleShowB}>\r\n            Toggle Toast <strong>without</strong> Animation\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\nconst jsCode3 = `\r\n<>\r\n  <Toast>\r\n    <Toast.Header>\r\n      <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n      <strong className=\"mr-auto\">Bootstrap</strong>\r\n      <small>just now</small>\r\n    </Toast.Header>\r\n    <Toast.Body>See? Just like this.</Toast.Body>\r\n  </Toast>\r\n  <Toast>\r\n    <Toast.Header>\r\n      <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n      <strong className=\"mr-auto\">Bootstrap</strong>\r\n      <small>2 seconds ago</small>\r\n    </Toast.Header>\r\n    <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\r\n  </Toast>\r\n</>\r\n`;\r\nconst jsCode4 = `\r\n<div\r\n  aria-live=\"polite\"\r\n  aria-atomic=\"true\"\r\n  style={{\r\n    position: 'relative',\r\n    minHeight: '200px',\r\n  }}\r\n>\r\n  <div\r\n    style={{\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n    }}\r\n  >\r\n    <Toast>\r\n      <Toast.Header>\r\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n        <strong className=\"mr-auto\">Bootstrap</strong>\r\n        <small>just now</small>\r\n      </Toast.Header>\r\n      <Toast.Body>See? Just like this.</Toast.Body>\r\n    </Toast>\r\n    <Toast>\r\n      <Toast.Header>\r\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n        <strong className=\"mr-auto\">Bootstrap</strong>\r\n        <small>2 seconds ago</small>\r\n      </Toast.Header>\r\n      <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\r\n    </Toast>\r\n  </div>\r\n</div>\r\n`;\r\nconst jsCode5 = `\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.state;\r\n    const handleShow = () => this.setState({ show: true });\r\n    const handleClose = () => this.setState({ show: false });\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n          <Toast onClose={handleClose} show={show} delay={3000} autohide>\r\n            <Toast.Header>\r\n              <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n              />\r\n              <strong className=\"mr-auto\">Bootstrap</strong>\r\n              <small>11 mins ago</small>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              Woohoo, you're reading this text in a Toast!\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n        <Col xs={6}>\r\n          <Button onClick={handleShow}>Show Toast</Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<Example />);\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}