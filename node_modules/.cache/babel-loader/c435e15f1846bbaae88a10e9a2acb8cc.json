{"ast":null,"code":"import _defineProperty from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/SalesAndCollection.js\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\"; // import ReportsSubTabsHeader from \"../../../../../../sub-tabs-header/ReportsSubTabsHeader\";\n// import InventoryStockHeader from \"../../../../../../header/InventoryStockHeader\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport { getDayDiff, getDaysCount } from \"../../../Util\";\nexport default function SalesCollectionReport() {\n  var _this = this;\n\n  var fields = {\n    salesOfficerId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    report: \"\"\n  };\n\n  var _useState = useState(fields),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var selectedCompany = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var userLoginId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n  var intl = useIntl();\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      locationTree = _useState4[0],\n      setLocationTree = _useState4[1]; //const [company, setCompany] = useState([]);\n\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      accountingYearId = _useState6[0],\n      setAccountingYearId = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      locationId = _useState8[0],\n      setLocationId = _useState8[1]; //const [childCategoryList, setChildCategoryList] = useState([]);\n\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      productCategoryId = _useState10[0],\n      setProductCategoryId = _useState10[1]; // const [allAccountingYear, setAllAccountingYear] = useState([]);\n  // const [categoryName, setCategoryName] = useState('All');\n\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      salesOfficer = _useState12[0],\n      setSalesOfficer = _useState12[1]; // const [inputs, setInputs] = useState({});\n\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      salesOfficerValue = _useState14[0],\n      setSalesOfficerValue = _useState14[1];\n\n  var searchParams = useMemo(function () {\n    return {\n      userLoginId: userLoginId,\n      companyId: selectedCompany,\n      accountingYearId: accountingYearId,\n      locationId: locationId,\n      productCategoryId: productCategoryId\n    };\n  }, [userLoginId, selectedCompany, accountingYearId, locationId, productCategoryId]);\n\n  var _useState15 = useState({}),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selectedLocation = _useState16[0],\n      setSelectedLocation = _useState16[1];\n\n  var _useState17 = useState({\n    totalQuantity: 0,\n    totlaSalesAmount: 0\n  }),\n      _useState18 = _slicedToArray(_useState17, 2),\n      total = _useState18[0],\n      setTotal = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      salesDataList = _useState20[0],\n      setSalesCollectionReportList = _useState20[1];\n\n  var history = useHistory();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      singleAll = _React$useState4[0],\n      setSingleAll = _React$useState4[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? 'simple-popper' : undefined; // useEffect(() => {\n  //     // document.getElementById('pills-inventory-stock-report-tab').classList.add('active')\n  //     // document.getElementById('pills-inventory-stock-sales-collection-report-tab').classList.add('active')\n  // }, []);\n\n  useEffect(function () {\n    getLocationTreeList(searchParams);\n  }, [userLoginId, selectedCompany]); // useEffect(() => {\n  // }, [searchParams]);\n\n  var getLocationTreeList = function getLocationTreeList(params) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/location-tree/locationTree/\").concat(params.userLoginId, \"/\").concat(params.companyId);\n    axios.get(URL).then(function (response) {\n      var locationTree = response.data.data;\n      setLocationTree(locationTree);\n    }).catch(function (err) {\n      showError(\"Cannot get Location Tree data.\");\n    });\n  };\n\n  var selectLocationTreeNode = function selectLocationTreeNode(node) {\n    var id = \"summary-id-\" + node.id;\n    var getId = document.getElementById(id);\n    var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n    for (var i = 0; i < getElements.length; i++) {\n      getElements[i].classList.remove('tree-nav-item');\n    }\n\n    if (getId) {\n      getId.classList.add('tree-nav-item');\n      setSelectedLocation(node);\n      setLocationId(node.id);\n      if (node.id) getSalesOfficerListByLocation(node.id, selectedCompany);\n    }\n  };\n\n  var getSalesOfficerListByLocation = function getSalesOfficerListByLocation(locationId, companyId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/auth/get-sales-officer-location/\").concat(locationId, \"/\").concat(companyId);\n    axios.get(URL).then(function (response) {\n      if (response.data.data != undefined) {\n        console.log(response.data.data);\n        setSalesOfficer(response.data.data);\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Company data.\");\n    });\n  };\n\n  var handleChange = function handleChange(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    setInputs(function (values) {\n      return _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var validate = function validate() {\n    if (!inputs.salesOfficerId) {\n      showError('Sales Officer Name is required.');\n      return false;\n    } else if (!inputs.startDate) {\n      showError(\"Start date  is required\");\n    } else if (!inputs.endDate) {\n      showError(\"End date is required\");\n    } else if (inputs.endDate < inputs.startDate) {\n      showError(\"End Date should be greater than Start Date.\");\n      return false;\n    } else if (!inputs.report) {\n      showError('Report is required.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var previewSalesAndCollection = function previewSalesAndCollection() {\n    if (!validate()) {\n      return false;\n    }\n\n    var queryString = '?'; //queryString += 'depotId=' + parseInt(inputs.depotId);\n    //queryString += '&companyId=' + companyId;\n    //queryString += '&storeId=' + parseInt(inputs.storeId);\n\n    queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n    queryString += '&startDate=' + inputs.startDate;\n    queryString += '&endDate=' + inputs.endDate;\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/reports/stock-valuation\") + queryString;\n    axios.get(URL, {\n      responseType: 'blob'\n    }).then(function (response) {\n      var url = window.URL.createObjectURL(new Blob([response.data]));\n      var link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', \"salesAndCollection.pdf\");\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }).catch(function (err) {\n      showError();\n    });\n  };\n\n  console.log(inputs);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MisReportBreadCrum, {\n    menuTitle: \"Sales And Collection Report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-3\",\n    style: {\n      borderRight: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottom: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc3.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginLeft: \"10px\",\n      color: \"#828282\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 41\n    }\n  }, intl.formatMessage({\n    id: \"COMMON.LOCATION_ALL\"\n  })))), /*#__PURE__*/React.createElement(LocationTreeView, {\n    tree: locationTree,\n    selectLocationTreeNode: selectLocationTreeNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 45\n    }\n  }, \"Sales Officer\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 97\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    name: \"salesOfficerId\",\n    options: salesOfficer,\n    onKeyDown: getSalesOfficerListByLocation,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.salesOfficerName;\n    },\n    value: salesOfficerValue,\n    onChange: function onChange(event, newValue) {\n      setSalesOfficerValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          salesOfficerId: newValue.id\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Sales Officer*\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 53\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, \"Start Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 66\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"startDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"startDate\",\n    value: inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 33\n    }\n  }, \"End Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 72\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"endDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"endDate\",\n    value: inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    required: true,\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 76\n    }\n  }, \"Report\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 112\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"reportId\",\n    name: \"report\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 49\n    }\n  }, \"Select Report\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 49\n    }\n  }, \"Pdf\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 49\n    }\n  }, \"Excel\"))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: previewSalesAndCollection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 33\n    }\n  }, \"Submit\")))))));\n}","map":{"version":3,"names":["React","useEffect","useMemo","useState","toAbsoluteUrl","Card","CardBody","useHistory","LocationTreeView","showError","axios","useIntl","shallowEqual","useSelector","Autocomplete","TextField","Button","typeOf","moment","Flatpickr","MisReportBreadCrum","getDayDiff","getDaysCount","SalesCollectionReport","fields","salesOfficerId","startDate","endDate","report","inputs","setInputs","selectedCompany","state","auth","company","userLoginId","user","userId","intl","locationTree","setLocationTree","accountingYearId","setAccountingYearId","locationId","setLocationId","productCategoryId","setProductCategoryId","salesOfficer","setSalesOfficer","salesOfficerValue","setSalesOfficerValue","searchParams","companyId","selectedLocation","setSelectedLocation","totalQuantity","totlaSalesAmount","total","setTotal","salesDataList","setSalesCollectionReportList","history","anchorEl","setAnchorEl","singleAll","setSingleAll","handleClick","event","currentTarget","open","Boolean","id","undefined","getLocationTreeList","params","URL","process","env","REACT_APP_API_URL","get","then","response","data","catch","err","selectLocationTreeNode","node","getId","document","getElementById","getElements","getElementsByClassName","i","length","classList","remove","add","getSalesOfficerListByLocation","console","log","handleChange","name","target","value","values","validate","previewSalesAndCollection","queryString","parseInt","responseType","url","window","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","removeChild","borderRight","borderBottom","width","height","textAlign","marginLeft","color","formatMessage","marginTop","option","salesOfficerName","newValue","format","dateFormat","Date","e"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/SalesAndCollection.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\n// import ReportsSubTabsHeader from \"../../../../../../sub-tabs-header/ReportsSubTabsHeader\";\n\n\n// import InventoryStockHeader from \"../../../../../../header/InventoryStockHeader\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nimport {getDayDiff, getDaysCount} from \"../../../Util\"\n\n\nexport default function SalesCollectionReport() {\n\n    const fields = {\n        salesOfficerId: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        report:\"\"\n        \n        \n    };\n\n    const [inputs, setInputs] = useState(fields);\n    const selectedCompany = useSelector((state) => state.auth.company, shallowEqual);\n    const userLoginId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const intl = useIntl();\n    const [locationTree, setLocationTree] = useState([]);\n    //const [company, setCompany] = useState([]);\n    const [accountingYearId, setAccountingYearId] = useState('');\n    const [locationId, setLocationId] = useState('');\n    //const [childCategoryList, setChildCategoryList] = useState([]);\n    const [productCategoryId, setProductCategoryId] = useState('');\n    // const [allAccountingYear, setAllAccountingYear] = useState([]);\n    // const [categoryName, setCategoryName] = useState('All');\n    const [salesOfficer, setSalesOfficer] = useState([]);\n    // const [inputs, setInputs] = useState({});\n    const [salesOfficerValue, setSalesOfficerValue] = useState(null);\n    \n  \n    \n    const searchParams = useMemo(() => {\n        return {\n            userLoginId: userLoginId, companyId: selectedCompany, accountingYearId: accountingYearId\n            , locationId: locationId, productCategoryId: productCategoryId\n        }\n    }, [userLoginId, selectedCompany, accountingYearId, locationId, productCategoryId]);\n\n    const [selectedLocation, setSelectedLocation] = useState({});\n    const [total, setTotal] = useState({ totalQuantity: 0, totlaSalesAmount: 0 });\n    const [salesDataList, setSalesCollectionReportList] = useState([]);\n\n    let history = useHistory();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    let [singleAll, setSingleAll] = React.useState([]);\n\n    const handleClick = (event) => {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popper' : undefined;\n    // useEffect(() => {\n    //     // document.getElementById('pills-inventory-stock-report-tab').classList.add('active')\n    //     // document.getElementById('pills-inventory-stock-sales-collection-report-tab').classList.add('active')\n    // }, []);\n\n    useEffect(() => {\n        getLocationTreeList(searchParams);\n    }, [userLoginId, selectedCompany]);\n\n    // useEffect(() => {\n    // }, [searchParams]);\n\n\n \n\n    const getLocationTreeList = (params) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/location-tree/locationTree/${params.userLoginId}/${params.companyId}`;\n        axios.get(URL).then(response => {\n            const locationTree = response.data.data;\n            setLocationTree(locationTree);\n        }).catch(err => {\n            showError(\"Cannot get Location Tree data.\");\n        });\n    }\n\n\n    const selectLocationTreeNode = (node) => {\n        let id = \"summary-id-\"+node.id;\n        const getId = document.getElementById(id);\n        const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n        \n        for (var i = 0; i < getElements.length; i++) {\n            getElements[i].classList.remove('tree-nav-item');\n        }\n        if (getId) {\n            getId.classList.add('tree-nav-item');\n            setSelectedLocation(node);\n        setLocationId(node.id);\n        if(node.id)\n        getSalesOfficerListByLocation(node.id, selectedCompany)\n        }\n        \n    }\n\n    const getSalesOfficerListByLocation = (locationId, companyId) => {\n        const URL = `${process.env.REACT_APP_API_URL}/auth/get-sales-officer-location/${locationId}/${companyId}`;\n        axios.get(URL).then(response => {\n            if (response.data.data != undefined) {\n                console.log(response.data.data)\n                setSalesOfficer(response.data.data);\n            }\n        }).catch(err => {\n            showError(\"Cannot get Company data.\");\n        });\n    }\n\n       const handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setInputs(values => ({ ...values, [name]: value }))\n    }\n\n    const validate = () => {\n\n        if (!inputs.salesOfficerId) {\n            showError('Sales Officer Name is required.');\n            return false;\n        }\n\n        else if(!inputs.startDate){\n            showError(\"Start date  is required\");\n        }\n        else if(!inputs.endDate ){\n            showError(\"End date is required\");\n        }\n\n        else if(inputs.endDate<inputs.startDate){\n            showError(\"End Date should be greater than Start Date.\");\n            return false;  \n        }\n\n        else if (!inputs.report) {\n            showError('Report is required.');\n            return false;\n        }\n        return true;\n    }\n\n\n    const previewSalesAndCollection = () =>{\n        if(!validate()){\n            return false;\n        }\n        let queryString = '?';\n        //queryString += 'depotId=' + parseInt(inputs.depotId);\n        //queryString += '&companyId=' + companyId;\n        //queryString += '&storeId=' + parseInt(inputs.storeId);\n\n        queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n        queryString += '&startDate=' + inputs.startDate;\n        queryString += '&endDate=' + inputs.endDate;\n\n        const URL = `${process.env.REACT_APP_API_URL}/api/reports/stock-valuation`+queryString;\n        axios.get(URL, {responseType: 'blob'}).then(response => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', \"salesAndCollection.pdf\");\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n\n        }).catch(err => {\n            showError();\n        });\n        \n    }\n    console.log(inputs)\n    return (\n        <>\n        <div>\n        <MisReportBreadCrum menuTitle=\"Sales And Collection Report\"/>\n        </div>\n            <div>\n                {/* BREAD CRUM ROW */}\n                {/* <InventoryBreadCrum /> */}\n                {/* TODAY SALE ROW */}\n                {/* <InventoryStockHeader showStockData={true} /> */}\n                {/* <ReportsSubTabsHeader /> */}\n            </div>\n            <div>\n                <Card>\n                    <CardBody>\n                        <div className='row'>\n                            {/* LEFT SIDE TREE ROW */}\n                            <div className='col-xl-3' style={{ borderRight: \"1px solid #F2F2F2\" }}>\n                                <div style={{ borderBottom: \"1px solid #F2F2F2\" }}>\n                                    <label>\n                                        <img src={toAbsoluteUrl(\"/images/loc3.png\")}\n                                            style={{ width: \"20px\", height: \"20px\", textAlign: \"center\" }}\n                                            alt='Company Picture' />\n                                        <strong style={{ marginLeft: \"10px\", color: \"#828282\" }}>{intl.formatMessage({ id: \"COMMON.LOCATION_ALL\" })}</strong>\n                                    </label>\n                                </div>\n                                {/* TREE */}\n                                <LocationTreeView tree={locationTree} selectLocationTreeNode={selectLocationTreeNode} />\n                            </div>\n                            {/* RIGHT SIDE LIST ROW */}\n                            <div className='col-xl-9'>\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <div style={{ marginTop: \"5px\" }}>\n                                            <label className='level-title'>Sales Officer</label><br />\n                                            <Autocomplete\n                                                name=\"salesOfficerId\"\n                                                options={salesOfficer}\n                                                onKeyDown={getSalesOfficerListByLocation}\n                                                getOptionLabel={(option) => option.salesOfficerName}\n                                                value={salesOfficerValue}\n                                                onChange={(event, newValue) => {\n                                                    setSalesOfficerValue(newValue)\n                                                    if (newValue !== null) {\n                                                        setInputs({ ...inputs, salesOfficerId: newValue.id });\n                                                    }\n                                                }}\n                                                renderInput={(params) => (\n                                                    <TextField {...params} label=\"Select Sales Officer*\" />\n                                                )}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n\n                        <div className='row'>\n                        <div className='form-group col-lg-8 first-level-top'>\n                        <label className='level-title'>Start Date<i style={{ color: \"red\" }}>*</i></label>\n                            <Flatpickr className=\"form-control\" id=\"startDate\" placeholder=\"dd-MM-yy\"\n                            name='startDate'\n                            value={inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                            options={{dateFormat: \"d-M-Y\"}}\n                            onChange={(value) => {\n                            setInputs({\n                                ...inputs,\"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                            })\n                            \n                            }}\n                            />\n                        </div>\n                    </div>\n\n\n                        <div className='row'>\n                            <div className='form-group col-lg-8 first-level-top'>\n                                <label className='level-title'>End Date<i style={{ color: \"red\" }}>*</i></label>\n                                    <Flatpickr className=\"form-control\" id=\"endDate\" placeholder=\"dd-MM-yy\"\n                                    name='endDate'\n                                    value={inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                    options={{dateFormat: \"d-M-Y\"}} required\n                                    onChange={(value) => {\n                                        setInputs({\n                                            ...inputs,\"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                        })\n                                    }}\n                                     />  \n                            </div>\n                        </div>\n\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span className=\"mr-1\">Report</span><span className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportId\" name=\"report\"\n                                            onChange={(e)=>handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report</option>\n                                                <option value=\"1\">Pdf</option>\n                                                <option value=\"2\">Excel</option>\n\n                                                {/* {\n                                                allReport.map((report)=>(\n                                                <option key={report.id} value={report.id}>\n                                                    {report.name}\n                                                </option> \n                                                ))\n                                            }    */}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <Button className=\"float-right mt-5\" id=\"gotItBtn\" variant=\"contained\"\n                                    color=\"primary\"\n                                onClick={previewSalesAndCollection}\n                                >\n                                    Submit\n                                </Button>\n                            </div>\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        </>\n    );\n}"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,6CAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,4DAA7B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C,C,CACA;AAGA;;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,0CAAP;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,SAAQC,UAAR,EAAoBC,YAApB,QAAuC,eAAvC;AAGA,eAAe,SAASC,qBAAT,GAAiC;EAAA;;EAE5C,IAAMC,MAAM,GAAG;IACXC,cAAc,EAAE,EADL;IAEXC,SAAS,EAAE,EAFA;IAGXC,OAAO,EAAE,EAHE;IAIXC,MAAM,EAAC;EAJI,CAAf;;EASA,gBAA4BzB,QAAQ,CAACqB,MAAD,CAApC;EAAA;EAAA,IAAOK,MAAP;EAAA,IAAeC,SAAf;;EACA,IAAMC,eAAe,GAAGlB,WAAW,CAAC,UAACmB,KAAD;IAAA,OAAWA,KAAK,CAACC,IAAN,CAAWC,OAAtB;EAAA,CAAD,EAAgCtB,YAAhC,CAAnC;EACA,IAAMuB,WAAW,GAAGtB,WAAW,CAAC,UAACmB,KAAD;IAAA,OAAWA,KAAK,CAACC,IAAN,CAAWG,IAAX,CAAgBC,MAA3B;EAAA,CAAD,EAAoCzB,YAApC,CAA/B;EACA,IAAM0B,IAAI,GAAG3B,OAAO,EAApB;;EACA,iBAAwCR,QAAQ,CAAC,EAAD,CAAhD;EAAA;EAAA,IAAOoC,YAAP;EAAA,IAAqBC,eAArB,iBAf4C,CAgB5C;;;EACA,iBAAgDrC,QAAQ,CAAC,EAAD,CAAxD;EAAA;EAAA,IAAOsC,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,iBAAoCvC,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOwC,UAAP;EAAA,IAAmBC,aAAnB,iBAlB4C,CAmB5C;;;EACA,iBAAkDzC,QAAQ,CAAC,EAAD,CAA1D;EAAA;EAAA,IAAO0C,iBAAP;EAAA,IAA0BC,oBAA1B,kBApB4C,CAqB5C;EACA;;;EACA,kBAAwC3C,QAAQ,CAAC,EAAD,CAAhD;EAAA;EAAA,IAAO4C,YAAP;EAAA,IAAqBC,eAArB,kBAvB4C,CAwB5C;;;EACA,kBAAkD7C,QAAQ,CAAC,IAAD,CAA1D;EAAA;EAAA,IAAO8C,iBAAP;EAAA,IAA0BC,oBAA1B;;EAIA,IAAMC,YAAY,GAAGjD,OAAO,CAAC,YAAM;IAC/B,OAAO;MACHiC,WAAW,EAAEA,WADV;MACuBiB,SAAS,EAAErB,eADlC;MACmDU,gBAAgB,EAAEA,gBADrE;MAEDE,UAAU,EAAEA,UAFX;MAEuBE,iBAAiB,EAAEA;IAF1C,CAAP;EAIH,CAL2B,EAKzB,CAACV,WAAD,EAAcJ,eAAd,EAA+BU,gBAA/B,EAAiDE,UAAjD,EAA6DE,iBAA7D,CALyB,CAA5B;;EAOA,kBAAgD1C,QAAQ,CAAC,EAAD,CAAxD;EAAA;EAAA,IAAOkD,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,kBAA0BnD,QAAQ,CAAC;IAAEoD,aAAa,EAAE,CAAjB;IAAoBC,gBAAgB,EAAE;EAAtC,CAAD,CAAlC;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EACA,kBAAsDvD,QAAQ,CAAC,EAAD,CAA9D;EAAA;EAAA,IAAOwD,aAAP;EAAA,IAAsBC,4BAAtB;;EAEA,IAAIC,OAAO,GAAGtD,UAAU,EAAxB;;EACA,sBAAgCP,KAAK,CAACG,QAAN,CAAe,IAAf,CAAhC;EAAA;EAAA,IAAO2D,QAAP;EAAA,IAAiBC,WAAjB;;EACA,uBAAgC/D,KAAK,CAACG,QAAN,CAAe,EAAf,CAAhC;EAAA;EAAA,IAAK6D,SAAL;EAAA,IAAgBC,YAAhB;;EAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;IAC3BJ,WAAW,CAACD,QAAQ,GAAG,IAAH,GAAUK,KAAK,CAACC,aAAzB,CAAX;EACH,CAFD;;EAGA,IAAMC,IAAI,GAAGC,OAAO,CAACR,QAAD,CAApB;EACA,IAAMS,EAAE,GAAGF,IAAI,GAAG,eAAH,GAAqBG,SAApC,CAhD4C,CAiD5C;EACA;EACA;EACA;;EAEAvE,SAAS,CAAC,YAAM;IACZwE,mBAAmB,CAACtB,YAAD,CAAnB;EACH,CAFQ,EAEN,CAAChB,WAAD,EAAcJ,eAAd,CAFM,CAAT,CAtD4C,CA0D5C;EACA;;EAKA,IAAM0C,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,MAAD,EAAY;IACpC,IAAMC,GAAG,aAAMC,OAAO,CAACC,GAAR,CAAYC,iBAAlB,6CAAsEJ,MAAM,CAACvC,WAA7E,cAA4FuC,MAAM,CAACtB,SAAnG,CAAT;IACA1C,KAAK,CAACqE,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CAAoB,UAAAC,QAAQ,EAAI;MAC5B,IAAM1C,YAAY,GAAG0C,QAAQ,CAACC,IAAT,CAAcA,IAAnC;MACA1C,eAAe,CAACD,YAAD,CAAf;IACH,CAHD,EAGG4C,KAHH,CAGS,UAAAC,GAAG,EAAI;MACZ3E,SAAS,CAAC,gCAAD,CAAT;IACH,CALD;EAMH,CARD;;EAWA,IAAM4E,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,IAAD,EAAU;IACrC,IAAIf,EAAE,GAAG,gBAAce,IAAI,CAACf,EAA5B;IACA,IAAMgB,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwBlB,EAAxB,CAAd;IACA,IAAMmB,WAAW,GAAGF,QAAQ,CAACG,sBAAT,CAAgC,0CAAhC,CAApB;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACG,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;MACzCF,WAAW,CAACE,CAAD,CAAX,CAAeE,SAAf,CAAyBC,MAAzB,CAAgC,eAAhC;IACH;;IACD,IAAIR,KAAJ,EAAW;MACPA,KAAK,CAACO,SAAN,CAAgBE,GAAhB,CAAoB,eAApB;MACA1C,mBAAmB,CAACgC,IAAD,CAAnB;MACJ1C,aAAa,CAAC0C,IAAI,CAACf,EAAN,CAAb;MACA,IAAGe,IAAI,CAACf,EAAR,EACA0B,6BAA6B,CAACX,IAAI,CAACf,EAAN,EAAUxC,eAAV,CAA7B;IACC;EAEJ,CAhBD;;EAkBA,IAAMkE,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACtD,UAAD,EAAaS,SAAb,EAA2B;IAC7D,IAAMuB,GAAG,aAAMC,OAAO,CAACC,GAAR,CAAYC,iBAAlB,8CAAuEnC,UAAvE,cAAqFS,SAArF,CAAT;IACA1C,KAAK,CAACqE,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CAAoB,UAAAC,QAAQ,EAAI;MAC5B,IAAIA,QAAQ,CAACC,IAAT,CAAcA,IAAd,IAAsBV,SAA1B,EAAqC;QACjC0B,OAAO,CAACC,GAAR,CAAYlB,QAAQ,CAACC,IAAT,CAAcA,IAA1B;QACAlC,eAAe,CAACiC,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAf;MACH;IACJ,CALD,EAKGC,KALH,CAKS,UAAAC,GAAG,EAAI;MACZ3E,SAAS,CAAC,0BAAD,CAAT;IACH,CAPD;EAQH,CAVD;;EAYG,IAAM2F,YAAY,GAAG,SAAfA,YAAe,CAACjC,KAAD,EAAW;IAC/B,IAAIkC,IAAI,GAAGlC,KAAK,CAACmC,MAAN,CAAaD,IAAxB;IACA,IAAIE,KAAK,GAAGpC,KAAK,CAACmC,MAAN,CAAaC,KAAzB;IACAzE,SAAS,CAAC,UAAA0E,MAAM;MAAA,uCAAUA,MAAV,2BAAmBH,IAAnB,EAA0BE,KAA1B;IAAA,CAAP,CAAT;EACH,CAJE;;EAMH,IAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM;IAEnB,IAAI,CAAC5E,MAAM,CAACJ,cAAZ,EAA4B;MACxBhB,SAAS,CAAC,iCAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHD,MAKK,IAAG,CAACoB,MAAM,CAACH,SAAX,EAAqB;MACtBjB,SAAS,CAAC,yBAAD,CAAT;IACH,CAFI,MAGA,IAAG,CAACoB,MAAM,CAACF,OAAX,EAAoB;MACrBlB,SAAS,CAAC,sBAAD,CAAT;IACH,CAFI,MAIA,IAAGoB,MAAM,CAACF,OAAP,GAAeE,MAAM,CAACH,SAAzB,EAAmC;MACpCjB,SAAS,CAAC,6CAAD,CAAT;MACA,OAAO,KAAP;IACH,CAHI,MAKA,IAAI,CAACoB,MAAM,CAACD,MAAZ,EAAoB;MACrBnB,SAAS,CAAC,qBAAD,CAAT;MACA,OAAO,KAAP;IACH;;IACD,OAAO,IAAP;EACH,CAxBD;;EA2BA,IAAMiG,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAK;IACnC,IAAG,CAACD,QAAQ,EAAZ,EAAe;MACX,OAAO,KAAP;IACH;;IACD,IAAIE,WAAW,GAAG,GAAlB,CAJmC,CAKnC;IACA;IACA;;IAEAA,WAAW,IAAI,oBAAoBC,QAAQ,CAAC/E,MAAM,CAACJ,cAAR,CAA3C;IACAkF,WAAW,IAAI,gBAAgB9E,MAAM,CAACH,SAAtC;IACAiF,WAAW,IAAI,cAAc9E,MAAM,CAACF,OAApC;IAEA,IAAMgD,GAAG,GAAG,UAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAf,oCAA+D6B,WAA3E;IACAjG,KAAK,CAACqE,GAAN,CAAUJ,GAAV,EAAe;MAACkC,YAAY,EAAE;IAAf,CAAf,EAAuC7B,IAAvC,CAA4C,UAAAC,QAAQ,EAAI;MACpD,IAAM6B,GAAG,GAAGC,MAAM,CAACpC,GAAP,CAAWqC,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAAChC,QAAQ,CAACC,IAAV,CAAT,CAA3B,CAAZ;MACA,IAAMgC,IAAI,GAAG1B,QAAQ,CAAC2B,aAAT,CAAuB,GAAvB,CAAb;MACAD,IAAI,CAACE,IAAL,GAAYN,GAAZ;MACAI,IAAI,CAACG,YAAL,CAAkB,UAAlB,EAA8B,wBAA9B;MACA7B,QAAQ,CAAC8B,IAAT,CAAcC,WAAd,CAA0BL,IAA1B;MACAA,IAAI,CAACM,KAAL;MACAhC,QAAQ,CAAC8B,IAAT,CAAcG,WAAd,CAA0BP,IAA1B;IAEH,CATD,EASG/B,KATH,CASS,UAAAC,GAAG,EAAI;MACZ3E,SAAS;IACZ,CAXD;EAaH,CA3BD;;EA4BAyF,OAAO,CAACC,GAAR,CAAYtE,MAAZ;EACA,oBACI,uDACA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,kBAAD;IAAoB,SAAS,EAAC,6BAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADA,CADA,eAII;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJJ,eAWI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,IAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI;IAAK,SAAS,EAAC,UAAf;IAA0B,KAAK,EAAE;MAAE6F,WAAW,EAAE;IAAf,CAAjC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAhB,CAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,GAAG,EAAEvH,aAAa,CAAC,kBAAD,CAAvB;IACI,KAAK,EAAE;MAAEwH,KAAK,EAAE,MAAT;MAAiBC,MAAM,EAAE,MAAzB;MAAiCC,SAAS,EAAE;IAA5C,CADX;IAEI,GAAG,EAAC,iBAFR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAII;IAAQ,KAAK,EAAE;MAAEC,UAAU,EAAE,MAAd;MAAsBC,KAAK,EAAE;IAA7B,CAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA0D1F,IAAI,CAAC2F,aAAL,CAAmB;IAAE1D,EAAE,EAAE;EAAN,CAAnB,CAA1D,CAJJ,CADJ,CADJ,eAUI,oBAAC,gBAAD;IAAkB,IAAI,EAAEhC,YAAxB;IAAsC,sBAAsB,EAAE8C,sBAA9D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAVJ,CAFJ,eAeI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,KAAK,EAAE;MAAE6C,SAAS,EAAE;IAAb,CAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBADJ,eACwD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADxD,eAEI,oBAAC,YAAD;IACI,IAAI,EAAC,gBADT;IAEI,OAAO,EAAEnF,YAFb;IAGI,SAAS,EAAEkD,6BAHf;IAII,cAAc,EAAE,wBAACkC,MAAD;MAAA,OAAYA,MAAM,CAACC,gBAAnB;IAAA,CAJpB;IAKI,KAAK,EAAEnF,iBALX;IAMI,QAAQ,EAAE,kBAACkB,KAAD,EAAQkE,QAAR,EAAqB;MAC3BnF,oBAAoB,CAACmF,QAAD,CAApB;;MACA,IAAIA,QAAQ,KAAK,IAAjB,EAAuB;QACnBvG,SAAS,iCAAMD,MAAN;UAAcJ,cAAc,EAAE4G,QAAQ,CAAC9D;QAAvC,GAAT;MACH;IACJ,CAXL;IAYI,WAAW,EAAE,qBAACG,MAAD;MAAA,oBACT,oBAAC,SAAD,oBAAeA,MAAf;QAAuB,KAAK,EAAC,uBAA7B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GADS;IAAA,CAZjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CADJ,CADJ,CADJ,eAyBJ;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA;IAAK,SAAS,EAAC,qCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAAyC;IAAG,KAAK,EAAE;MAAEsD,KAAK,EAAE;IAAT,CAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAzC,CADA,eAEI,oBAAC,SAAD;IAAW,SAAS,EAAC,cAArB;IAAoC,EAAE,EAAC,WAAvC;IAAmD,WAAW,EAAC,UAA/D;IACA,IAAI,EAAC,WADL;IAEA,KAAK,EAAEnG,MAAM,CAACH,SAAP,GAAmBR,MAAM,CAACW,MAAM,CAACH,SAAR,EAAmB,YAAnB,CAAN,CAAuC4G,MAAvC,CAA8C,aAA9C,CAAnB,GAAkF,EAFzF;IAGA,OAAO,EAAE;MAACC,UAAU,EAAE;IAAb,CAHT;IAIA,QAAQ,EAAE,kBAAChC,KAAD,EAAW;MACrBzE,SAAS,iCACFD,MADE;QACK,aAAaX,MAAM,CAAC,IAAIsH,IAAJ,CAASjC,KAAT,CAAD,CAAN,CAAwB+B,MAAxB,CAA+B,YAA/B;MADlB,GAAT;IAIC,CATD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CADA,CAzBI,eA2CJ;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,qCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4BAAuC;IAAG,KAAK,EAAE;MAAEN,KAAK,EAAE;IAAT,CAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAvC,CADJ,eAEQ,oBAAC,SAAD;IAAW,SAAS,EAAC,cAArB;IAAoC,EAAE,EAAC,SAAvC;IAAiD,WAAW,EAAC,UAA7D;IACA,IAAI,EAAC,SADL;IAEA,KAAK,EAAEnG,MAAM,CAACF,OAAP,GAAiBT,MAAM,CAACW,MAAM,CAACF,OAAR,EAAiB,YAAjB,CAAN,CAAqC2G,MAArC,CAA4C,aAA5C,CAAjB,GAA8E,EAFrF;IAGA,OAAO,EAAE;MAACC,UAAU,EAAE;IAAb,CAHT;IAGgC,QAAQ,MAHxC;IAIA,QAAQ,EAAE,kBAAChC,KAAD,EAAW;MACjBzE,SAAS,iCACFD,MADE;QACK,WAAWX,MAAM,CAAC,IAAIsH,IAAJ,CAASjC,KAAT,CAAD,CAAN,CAAwB+B,MAAxB,CAA+B,YAA/B;MADhB,GAAT;IAGH,CARD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFR,CADJ,CA3CI,eA4DI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,qCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,SAAS,EAAC,aAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAA+B;IAAM,SAAS,EAAC,MAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAA/B,eAAmE;IAAM,SAAS,EAAC,cAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAnE,CADJ,eAEI;IAAQ,SAAS,EAAC,cAAlB;IAAiC,EAAE,EAAC,UAApC;IAA+C,IAAI,EAAC,QAApD;IACA,QAAQ,EAAE,kBAACG,CAAD;MAAA,OAAKrC,YAAY,CAACqC,CAAD,CAAjB;IAAA,CADV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAGI;IAAQ,KAAK,EAAC,EAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAHJ,eAII;IAAQ,KAAK,EAAC,GAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SAJJ,eAKI;IAAQ,KAAK,EAAC,GAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WALJ,CAFJ,CADJ,CADJ,CA5DJ,eAmFI,oBAAC,MAAD;IAAQ,SAAS,EAAC,kBAAlB;IAAqC,EAAE,EAAC,UAAxC;IAAmD,OAAO,EAAC,WAA3D;IACI,KAAK,EAAC,SADV;IAEA,OAAO,EAAE/B,yBAFT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAnFJ,CAfJ,CADJ,CADJ,CADJ,CAXJ,CADJ;AA8HH"},"metadata":{},"sourceType":"module"}