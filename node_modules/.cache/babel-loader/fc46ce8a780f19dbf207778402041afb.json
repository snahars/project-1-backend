{"ast":null,"code":"var _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/ECommerce/pages/customers/customers-table/CustomersTable.js\";\n// React bootstrap table next =>\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\nimport React, { useEffect, useMemo } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport { getSelectRow, getHandlerTableChange, NoRecordsFoundMessage, PleaseWaitMessage, sortCaret, headerSortingClasses } from \"../../../../../../_metronic/_helpers\";\nimport * as uiHelpers from \"../CustomersUIHelpers\";\nimport * as columnFormatters from \"./column-formatters\";\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\nexport function CustomersTable() {\n  var _this = this;\n\n  // Customers UI Context\n  var customersUIContext = useCustomersUIContext();\n  var customersUIProps = useMemo(function () {\n    return {\n      ids: customersUIContext.ids,\n      setIds: customersUIContext.setIds,\n      queryParams: customersUIContext.queryParams,\n      setQueryParams: customersUIContext.setQueryParams,\n      openEditCustomerDialog: customersUIContext.openEditCustomerDialog,\n      openDeleteCustomerDialog: customersUIContext.openDeleteCustomerDialog\n    };\n  }, [customersUIContext]); // Getting curret state of customers list from store (Redux)\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      currentState: state.customers\n    };\n  }, shallowEqual),\n      currentState = _useSelector.currentState;\n\n  var totalCount = currentState.totalCount,\n      entities = currentState.entities,\n      listLoading = currentState.listLoading; // Customers Redux state\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    // clear selections list\n    customersUIProps.setIds([]); // server call by queryParams\n\n    dispatch(actions.fetchCustomers(customersUIProps.queryParams)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customersUIProps.queryParams, dispatch]); // Table columns\n\n  var columns = [{\n    dataField: \"id\",\n    text: \"ID\",\n    sort: true,\n    sortCaret: sortCaret,\n    headerSortingClasses: headerSortingClasses\n  }, {\n    dataField: \"firstName\",\n    text: \"Firstname\",\n    sort: true,\n    sortCaret: sortCaret,\n    headerSortingClasses: headerSortingClasses\n  }, {\n    dataField: \"lastName\",\n    text: \"Lastname\",\n    sort: true,\n    sortCaret: sortCaret,\n    headerSortingClasses: headerSortingClasses\n  }, {\n    dataField: \"email\",\n    text: \"Email\",\n    sort: true,\n    sortCaret: sortCaret,\n    headerSortingClasses: headerSortingClasses\n  }, {\n    dataField: \"gender\",\n    text: \"Gender\",\n    sort: false,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"status\",\n    text: \"Status\",\n    sort: true,\n    sortCaret: sortCaret,\n    formatter: columnFormatters.StatusColumnFormatter,\n    headerSortingClasses: headerSortingClasses\n  }, {\n    dataField: \"type\",\n    text: \"Type\",\n    sort: true,\n    sortCaret: sortCaret,\n    formatter: columnFormatters.TypeColumnFormatter\n  }, {\n    dataField: \"action\",\n    text: \"Actions\",\n    formatter: columnFormatters.ActionsColumnFormatter,\n    formatExtraData: {\n      openEditCustomerDialog: customersUIProps.openEditCustomerDialog,\n      openDeleteCustomerDialog: customersUIProps.openDeleteCustomerDialog\n    },\n    classes: \"text-right pr-0\",\n    headerClasses: \"text-right pr-3\",\n    style: {\n      minWidth: \"100px\"\n    }\n  }]; // Table pagination properties\n\n  var paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: customersUIProps.queryParams.pageSize,\n    page: customersUIProps.queryParams.pageNumber\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PaginationProvider, {\n    pagination: paginationFactory(paginationOptions),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, function (_ref) {\n    var paginationProps = _ref.paginationProps,\n        paginationTableProps = _ref.paginationTableProps;\n    return /*#__PURE__*/React.createElement(Pagination, {\n      isLoading: listLoading,\n      paginationProps: paginationProps,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({\n      wrapperClasses: \"table-responsive\",\n      bordered: false,\n      classes: \"table table-head-custom table-vertical-center overflow-hidden\",\n      bootstrap4: true,\n      remote: true,\n      keyField: \"id\",\n      data: entities === null ? [] : entities,\n      columns: columns,\n      defaultSorted: uiHelpers.defaultSorted,\n      onTableChange: getHandlerTableChange(customersUIProps.setQueryParams),\n      selectRow: getSelectRow({\n        entities: entities,\n        ids: customersUIProps.ids,\n        setIds: customersUIProps.setIds\n      })\n    }, paginationTableProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(PleaseWaitMessage, {\n      entities: entities,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NoRecordsFoundMessage, {\n      entities: entities,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    })));\n  }));\n}","map":{"version":3,"names":["React","useEffect","useMemo","BootstrapTable","paginationFactory","PaginationProvider","shallowEqual","useDispatch","useSelector","actions","getSelectRow","getHandlerTableChange","NoRecordsFoundMessage","PleaseWaitMessage","sortCaret","headerSortingClasses","uiHelpers","columnFormatters","Pagination","useCustomersUIContext","CustomersTable","customersUIContext","customersUIProps","ids","setIds","queryParams","setQueryParams","openEditCustomerDialog","openDeleteCustomerDialog","state","currentState","customers","totalCount","entities","listLoading","dispatch","fetchCustomers","columns","dataField","text","sort","formatter","StatusColumnFormatter","TypeColumnFormatter","ActionsColumnFormatter","formatExtraData","classes","headerClasses","style","minWidth","paginationOptions","custom","totalSize","sizePerPageList","sizePerPage","pageSize","page","pageNumber","paginationProps","paginationTableProps","defaultSorted"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/ECommerce/pages/customers/customers-table/CustomersTable.js"],"sourcesContent":["// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n  headerSortingClasses,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as uiHelpers from \"../CustomersUIHelpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomersTable() {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n      setQueryParams: customersUIContext.setQueryParams,\r\n      openEditCustomerDialog: customersUIContext.openEditCustomerDialog,\r\n      openDeleteCustomerDialog: customersUIContext.openDeleteCustomerDialog,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Getting curret state of customers list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.customers }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    customersUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchCustomers(customersUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"firstName\",\r\n      text: \"Firstname\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"lastName\",\r\n      text: \"Lastname\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"gender\",\r\n      text: \"Gender\",\r\n      sort: false,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.StatusColumnFormatter,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"type\",\r\n      text: \"Type\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.TypeColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditCustomerDialog: customersUIProps.openEditCustomerDialog,\r\n        openDeleteCustomerDialog: customersUIProps.openDeleteCustomerDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: customersUIProps.queryParams.pageSize,\r\n    page: customersUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                bordered={false}\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  customersUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: customersUIProps.ids,\r\n                  setIds: customersUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}