{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = Star;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar defaultStyles = {\n  position: \"relative\",\n  overflow: \"hidden\",\n  cursor: \"pointer\",\n  display: \"block\",\n  float: \"left\"\n};\n\nfunction Star(props) {\n  var index = props.index,\n      active = props.active,\n      config = props.config,\n      onMouseOver = props.onMouseOver,\n      onMouseLeave = props.onMouseLeave,\n      onClick = props.onClick,\n      halfStarHidden = props.halfStarHidden,\n      halfStarAt = props.halfStarAt,\n      isUsingIcons = props.isUsingIcons,\n      uniqueness = props.uniqueness;\n  var color = config.color,\n      activeColor = config.activeColor,\n      size = config.size,\n      char = config.char,\n      isHalf = config.isHalf,\n      edit = config.edit,\n      halfIcon = config.halfIcon,\n      emptyIcon = config.emptyIcon,\n      filledIcon = config.filledIcon;\n  var starClass = '';\n  var half = false;\n\n  if (isHalf && !halfStarHidden && halfStarAt === index) {\n    if (!isUsingIcons) starClass = \"react-stars-\" + uniqueness;else starClass = 'react-stars-half';\n    half = true;\n  }\n\n  var style = _extends({}, defaultStyles, {\n    color: active ? activeColor : color,\n    cursor: edit ? 'pointer' : 'default',\n    fontSize: size + \"px\"\n  });\n\n  function renderIcon() {\n    if (!isUsingIcons) {\n      return char;\n    } else {\n      if (active) {\n        return filledIcon;\n      } else if (!active && half) {\n        return halfIcon;\n      } else {\n        return emptyIcon;\n      }\n    }\n  }\n\n  return _react2.default.createElement(\"span\", {\n    className: starClass,\n    style: style,\n    key: index,\n    \"data-index\": index,\n    \"data-forhalf\": filledIcon ? index : char,\n    onMouseOver: onMouseOver,\n    onMouseMove: onMouseOver,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick\n  }, renderIcon());\n}","map":null,"metadata":{},"sourceType":"script"}