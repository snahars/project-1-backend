{"ast":null,"code":"import _defineProperty from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/DebitCreditNoteReport.js\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\"; // import ReportsSubTabsHeader from \"../../../../../../sub-tabs-header/ReportsSubTabsHeader\";\n// import InventoryStockHeader from \"../../../../../../header/InventoryStockHeader\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport { getDayDiff, getDaysCount } from \"../../../Util\";\nimport MisReportBreadCrum from '../MisReportBreadCrum';\nexport default function DebitCreditNoteReport() {\n  var _this = this;\n\n  var fields = {\n    locationId: \"\",\n    salesOfficerId: \"\",\n    distributorId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    report: \"\",\n    reportType: \"\"\n  };\n\n  var _useState = useState(fields),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var userId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n  var companyId = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var selectedCompany = useSelector(function (state) {\n    return state.auth.company;\n  }, shallowEqual);\n  var userLoginId = useSelector(function (state) {\n    return state.auth.user.userId;\n  }, shallowEqual);\n  var intl = useIntl();\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      locationTree = _useState4[0],\n      setLocationTree = _useState4[1];\n\n  var _useState5 = useState({\n    userLoginId: userId,\n    companyId: companyId\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sessionData = _useState6[0],\n      setSessionData = _useState6[1]; //const [company, setCompany] = useState([]);\n\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      accountingYearId = _useState8[0],\n      setAccountingYearId = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      locationId = _useState10[0],\n      setLocationId = _useState10[1]; //const [childCategoryList, setChildCategoryList] = useState([]);\n\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      productCategoryId = _useState12[0],\n      setProductCategoryId = _useState12[1]; // const [allAccountingYear, setAllAccountingYear] = useState([]);\n  // const [categoryName, setCategoryName] = useState('All');\n\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      salesOfficer = _useState14[0],\n      setSalesOfficer = _useState14[1]; // const [inputs, setInputs] = useState({});\n\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      salesOfficerValue = _useState16[0],\n      setSalesOfficerValue = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      distributorValue = _useState18[0],\n      setDistributorValue = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      distributors = _useState20[0],\n      setDistributors = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      showReport = _useState22[0],\n      setShowReport = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      reportData = _useState24[0],\n      setReportData = _useState24[1];\n\n  var searchParams = useMemo(function () {\n    return {\n      userLoginId: userLoginId,\n      companyId: selectedCompany,\n      accountingYearId: accountingYearId,\n      locationId: locationId,\n      productCategoryId: productCategoryId\n    };\n  }, [userLoginId, selectedCompany, accountingYearId, locationId, productCategoryId]);\n\n  var _useState25 = useState({}),\n      _useState26 = _slicedToArray(_useState25, 2),\n      selectedLocation = _useState26[0],\n      setSelectedLocation = _useState26[1];\n\n  var _useState27 = useState({\n    totalQuantity: 0,\n    totlaSalesAmount: 0\n  }),\n      _useState28 = _slicedToArray(_useState27, 2),\n      total = _useState28[0],\n      setTotal = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      salesDataList = _useState30[0],\n      setSalesReturnReportList = _useState30[1];\n\n  var history = useHistory();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      singleAll = _React$useState4[0],\n      setSingleAll = _React$useState4[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? 'simple-popper' : undefined; // useEffect(() => {\n  //     // document.getElementById('pills-inventory-stock-report-tab').classList.add('active')\n  //     // document.getElementById('pills-inventory-stock-sales-collection-report-tab').classList.add('active')\n  // }, []);\n\n  useEffect(function () {\n    getLocationTreeList(searchParams);\n  }, [userLoginId, selectedCompany]); // useEffect(() => {\n  // }, [searchParams]);\n\n  var getLocationTreeList = function getLocationTreeList(params) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/location-tree/locationTree/\").concat(params.userLoginId, \"/\").concat(params.companyId);\n    axios.get(URL).then(function (response) {\n      var locationTree = response.data.data;\n      setLocationTree(locationTree);\n    }).catch(function (err) {\n      showError(\"Cannot get Location Tree data.\");\n    });\n  };\n\n  var selectLocationTreeNode = function selectLocationTreeNode(node) {\n    var id = \"summary-id-\" + node.id;\n    var getId = document.getElementById(id);\n    var getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n    for (var i = 0; i < getElements.length; i++) {\n      getElements[i].classList.remove('tree-nav-item');\n    }\n\n    if (getId) {\n      getId.classList.add('tree-nav-item');\n      setSelectedLocation(node);\n      setLocationId(node.id);\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"locationId\": node.id\n      }));\n      if (node.id) getSalesOfficerListByLocation(node.id, selectedCompany);\n      getAllDistributorList(userId, node.id, selectedCompany);\n    }\n  };\n\n  var getSalesOfficerListByLocation = function getSalesOfficerListByLocation(locationId, companyId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/auth/get-sales-officer-location/\").concat(locationId, \"/\").concat(companyId);\n    axios.get(URL).then(function (response) {\n      //console.log(response.data.data)\n      if (response.data.data != undefined) {\n        // console.log(\"sales officer\",response.data.data)\n        setSalesOfficer(response.data.data);\n      } else {\n        setSalesOfficer([]);\n        setSalesOfficerValue('');\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Sales Officer data.\");\n    });\n  };\n\n  var getAllDistributorList = function getAllDistributorList(userLoginId, locationId, companyId) {\n    var URL = \"\".concat(process.env.REACT_APP_API_URL, \"/api/distributor/distributorList/\").concat(userLoginId, \"/\").concat(locationId, \"/\").concat(companyId); //API call from backend\n\n    axios.get(URL).then(function (response) {\n      //get data in response\n      // console.log('hello',response.data.data)\n      if (response.data.data != undefined && response.data.data.length != 0) {\n        // console.log('Distributors',response.data.data)\n        setDistributors(response.data.data);\n      } else {\n        setDistributors([]);\n        setDistributorValue('');\n      }\n    }).catch(function (err) {\n      showError(\"Cannot get Distributor data.\");\n    });\n  };\n\n  var handleChange = function handleChange(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n    setInputs(function (values) {\n      return _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var validate = function validate() {\n    // console.log(\"inputs=\", inputs)\n    if (!inputs.locationId) {\n      showError('Location is required.');\n      return false;\n    } else if (!inputs.salesOfficerId) {\n      showError('Sales Officer Name is required.');\n      return false;\n    } else if (!inputs.distributorId) {\n      showError('Distributor Name is required.');\n      return false;\n    } else if (inputs.startDate === undefined || inputs.startDate === \"\") {\n      showError(\"Start date  is required\");\n      return false;\n    } else if (inputs.endDate === undefined || inputs.endDate === \"\") {\n      showError(\"End date is required\");\n      return false;\n    } else if (new Date(inputs.endDate) < new Date(inputs.startDate)) {\n      showError(\"End Date should be greater than Start Date.\");\n      return false;\n    } else if (!inputs.reportFormate) {\n      showError('Report Format is required.');\n      return false;\n    }\n\n    return true;\n  };\n\n  var submit = function submit() {\n    if (!validate()) {\n      return false;\n    } // let queryParams = '?locationId=' + inputs.locationId;\n    // queryParams += '&reportFormate=' + inputs.reportFormate;\n    // queryParams += '&companyId=' + companyId;\n    // queryParams += '&startDate=' + inputs.startDate;\n    // queryParams += '&endDate=' + inputs.endDate;\n    //const URL = `${process.env.REACT_APP_API_URL}/api/report/sales-return` + queryParams;\n    // axios.get(URL, { responseType: 'blob' }).then(response => {\n    //     if (inputs.reportFormate === \"PDF\") {\n    //         const url = window.URL.createObjectURL(new Blob([response.data]));\n    //         const link = document.createElement('a');\n    //         link.href = url;\n    //         link.setAttribute('download', \"DebitCreditNoteReport.pdf\");\n    //         document.body.appendChild(link);\n    //         link.click();\n    //         document.body.removeChild(link);\n    //     } else {\n    //         const url = window.URL.createObjectURL(new Blob([response.data]));\n    //         const link = document.createElement('a');\n    //         link.href = url;\n    //         link.setAttribute('download', \"DebitCreditNoteReport.xlsx\");\n    //         document.body.appendChild(link);\n    //         link.click();\n    //         document.body.removeChild(link);\n    //     }\n    // }).catch(err => {\n    //     showError();\n    // });\n\n  };\n\n  var getReportData = function getReportData() {\n    if (!validate()) {\n      return false;\n    }\n\n    setShowReport(inputs.reportType); // if(!validate()){\n    //     return false;\n    // }\n    // let queryString = \"?\";\n    // queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n    // queryString += '&startDate=' + inputs.startDate;\n    // queryString += '&endDate=' + inputs.endDate;\n    //const URL = `${process.env.REACT_APP_API_URL}/api/reports/distributor-ledger-view`+queryString;\n\n    axios.get(URL).then(function (response) {\n      setReportData(response.data.data);\n      setShowReport(true);\n    }).catch();\n  }; // console.log(inputs)\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MisReportBreadCrum, {\n    menuTitle: \"Debit Credit Note Report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-3\",\n    style: {\n      borderRight: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottom: \"1px solid #F2F2F2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: toAbsoluteUrl(\"/images/loc3.png\"),\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      textAlign: \"center\"\n    },\n    alt: \"Company Picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      marginLeft: \"10px\",\n      color: \"#828282\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 41\n    }\n  }, intl.formatMessage({\n    id: \"COMMON.LOCATION_ALL\"\n  })))), /*#__PURE__*/React.createElement(LocationTreeView, {\n    tree: locationTree,\n    selectLocationTreeNode: selectLocationTreeNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 41\n    }\n  }, \"Sales Officer\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 93\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    name: \"salesOfficerId\",\n    options: salesOfficer,\n    onKeyDown: getSalesOfficerListByLocation,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.salesOfficerName;\n    },\n    value: salesOfficerValue,\n    onChange: function onChange(event, newValue) {\n      setSalesOfficerValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          salesOfficerId: newValue.id\n        }));\n      } else {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          salesOfficerId: ''\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Sales Officer*\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 53\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 40\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 71\n    }\n  }, \"Distributor\")), /*#__PURE__*/React.createElement(Autocomplete //id=\"distributorId\"\n  , {\n    name: \"distributorId\",\n    options: distributors,\n    onKeyDown: getAllDistributorList,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.distributorName;\n    },\n    value: distributorValue,\n    onChange: function onChange(event, newValue) {\n      setDistributorValue(newValue);\n\n      if (newValue !== null) {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          distributorId: newValue.distributorId\n        }));\n      } else {\n        setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n          distributorId: ''\n        }));\n      }\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"Select Distributor*\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 49\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 41\n    }\n  }, \"Start Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 82\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"startDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"startDate\",\n    value: inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 41\n    }\n  }, \"End Date\", /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 80\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Flatpickr, {\n    className: \"form-control\",\n    id: \"endDate\",\n    placeholder: \"dd-MM-yy\",\n    name: \"endDate\",\n    value: inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : '',\n    options: {\n      dateFormat: \"d-M-Y\"\n    },\n    required: true,\n    onChange: function onChange(value) {\n      setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n        \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-lg-8 first-level-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"level-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 76\n    }\n  }, \"Report Format\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 119\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"reportFormate\",\n    name: \"reportFormate\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 49\n    }\n  }, \"Select Report Format\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"PDF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 49\n    }\n  }, \"PDF\"))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right mt-5\",\n    id: \"gotItBtn\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 33\n    }\n  }, \"Submit\")))))));\n}","map":{"version":3,"names":["React","useEffect","useMemo","useState","toAbsoluteUrl","Card","CardBody","useHistory","LocationTreeView","showError","axios","useIntl","shallowEqual","useSelector","Autocomplete","TextField","Button","typeOf","moment","Flatpickr","getDayDiff","getDaysCount","MisReportBreadCrum","DebitCreditNoteReport","fields","locationId","salesOfficerId","distributorId","startDate","endDate","report","reportType","inputs","setInputs","userId","state","auth","user","companyId","company","selectedCompany","userLoginId","intl","locationTree","setLocationTree","sessionData","setSessionData","accountingYearId","setAccountingYearId","setLocationId","productCategoryId","setProductCategoryId","salesOfficer","setSalesOfficer","salesOfficerValue","setSalesOfficerValue","distributorValue","setDistributorValue","distributors","setDistributors","showReport","setShowReport","reportData","setReportData","searchParams","selectedLocation","setSelectedLocation","totalQuantity","totlaSalesAmount","total","setTotal","salesDataList","setSalesReturnReportList","history","anchorEl","setAnchorEl","singleAll","setSingleAll","handleClick","event","currentTarget","open","Boolean","id","undefined","getLocationTreeList","params","URL","process","env","REACT_APP_API_URL","get","then","response","data","catch","err","selectLocationTreeNode","node","getId","document","getElementById","getElements","getElementsByClassName","i","length","classList","remove","add","getSalesOfficerListByLocation","getAllDistributorList","handleChange","name","target","value","values","validate","Date","reportFormate","submit","getReportData","borderRight","borderBottom","width","height","textAlign","marginLeft","color","formatMessage","marginTop","option","salesOfficerName","newValue","distributorName","format","dateFormat","e"],"sources":["/home/sunipa/projects/sncworkspace/ntl-snc_frontend/src/app/modules/Report/mis-report/sales-and-collection/DebitCreditNoteReport.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { toAbsoluteUrl } from \"../../../../../_metronic/_helpers\";\nimport { Card, CardBody } from \"../../../../../_metronic/_partials/controls\";\nimport { useHistory } from 'react-router-dom';\nimport LocationTreeView from '../../../SalesCollection/CommonComponents/LocationTreeView';\nimport { showError } from '../../../../pages/Alert';\nimport axios from \"axios\";\nimport { useIntl } from \"react-intl\";\nimport { shallowEqual, useSelector } from \"react-redux\";\n// import ReportsSubTabsHeader from \"../../../../../../sub-tabs-header/ReportsSubTabsHeader\";\n\n\n// import InventoryStockHeader from \"../../../../../../header/InventoryStockHeader\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport { typeOf } from 'react-is';\nimport moment from \"moment\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport { getDayDiff, getDaysCount } from \"../../../Util\"\nimport MisReportBreadCrum from '../MisReportBreadCrum';\n\n\nexport default function DebitCreditNoteReport() {\n\n    const fields = {\n        locationId: \"\",\n        salesOfficerId: \"\",\n        distributorId: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        report: \"\",\n        reportType: \"\"\n\n\n    };\n\n    const [inputs, setInputs] = useState(fields);\n    const userId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const companyId = useSelector((state) => state.auth.company, shallowEqual);\n    const selectedCompany = useSelector((state) => state.auth.company, shallowEqual);\n    const userLoginId = useSelector((state) => state.auth.user.userId, shallowEqual);\n    const intl = useIntl();\n    const [locationTree, setLocationTree] = useState([]);\n    const [sessionData, setSessionData] = useState({ userLoginId: userId, companyId: companyId });\n    //const [company, setCompany] = useState([]);\n    const [accountingYearId, setAccountingYearId] = useState('');\n    const [locationId, setLocationId] = useState('');\n    //const [childCategoryList, setChildCategoryList] = useState([]);\n    const [productCategoryId, setProductCategoryId] = useState('');\n    // const [allAccountingYear, setAllAccountingYear] = useState([]);\n    // const [categoryName, setCategoryName] = useState('All');\n    const [salesOfficer, setSalesOfficer] = useState([]);\n    // const [inputs, setInputs] = useState({});\n    const [salesOfficerValue, setSalesOfficerValue] = useState(null);\n    const [distributorValue, setDistributorValue] = useState(null);\n    const [distributors, setDistributors] = useState([]);\n    const [showReport, setShowReport] = useState('');\n    const [reportData, setReportData] = useState([]);\n\n\n\n    const searchParams = useMemo(() => {\n        return {\n            userLoginId: userLoginId, companyId: selectedCompany, accountingYearId: accountingYearId\n            , locationId: locationId, productCategoryId: productCategoryId\n        }\n    }, [userLoginId, selectedCompany, accountingYearId, locationId, productCategoryId]);\n\n    const [selectedLocation, setSelectedLocation] = useState({});\n    const [total, setTotal] = useState({ totalQuantity: 0, totlaSalesAmount: 0 });\n    const [salesDataList, setSalesReturnReportList] = useState([]);\n\n    let history = useHistory();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    let [singleAll, setSingleAll] = React.useState([]);\n\n    const handleClick = (event) => {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popper' : undefined;\n    // useEffect(() => {\n    //     // document.getElementById('pills-inventory-stock-report-tab').classList.add('active')\n    //     // document.getElementById('pills-inventory-stock-sales-collection-report-tab').classList.add('active')\n    // }, []);\n\n    useEffect(() => {\n        getLocationTreeList(searchParams);\n    }, [userLoginId, selectedCompany]);\n\n    // useEffect(() => {\n    // }, [searchParams]);\n\n\n\n\n    const getLocationTreeList = (params) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/location-tree/locationTree/${params.userLoginId}/${params.companyId}`;\n        axios.get(URL).then(response => {\n            const locationTree = response.data.data;\n            setLocationTree(locationTree);\n        }).catch(err => {\n            showError(\"Cannot get Location Tree data.\");\n        });\n    }\n\n    const selectLocationTreeNode = (node) => {\n        let id = \"summary-id-\" + node.id;\n        const getId = document.getElementById(id);\n        const getElements = document.getElementsByClassName('tree-nav__item_demo tree-nav__item-title');\n\n        for (var i = 0; i < getElements.length; i++) {\n            getElements[i].classList.remove('tree-nav-item');\n        }\n        if (getId) {\n            getId.classList.add('tree-nav-item');\n            setSelectedLocation(node);\n            setLocationId(node.id);\n            setInputs({ ...inputs, \"locationId\": node.id })\n            if (node.id)\n                getSalesOfficerListByLocation(node.id, selectedCompany)\n                getAllDistributorList(userId,node.id, selectedCompany)\n        }\n\n    }\n\n    const getSalesOfficerListByLocation = (locationId, companyId) => {\n        const URL = `${process.env.REACT_APP_API_URL}/auth/get-sales-officer-location/${locationId}/${companyId}`;\n        axios.get(URL).then(response => {\n            //console.log(response.data.data)\n            if (response.data.data != undefined) {\n                // console.log(\"sales officer\",response.data.data)\n                setSalesOfficer(response.data.data);\n            }\n            else {\n                setSalesOfficer([]);\n                setSalesOfficerValue('');\n            }\n        }).catch(err => {\n            showError(\"Cannot get Sales Officer data.\");\n        });\n    }\n    const getAllDistributorList = (userLoginId, locationId, companyId) => {\n        const URL = `${process.env.REACT_APP_API_URL}/api/distributor/distributorList/${userLoginId}/${locationId}/${companyId}`;//API call from backend\n        axios.get(URL).then(response => {//get data in response\n            // console.log('hello',response.data.data)\n            if (response.data.data != undefined && response.data.data.length != 0) {    \n                // console.log('Distributors',response.data.data)\n                setDistributors(response.data.data);\n            }\n            else{\n                setDistributors([]);\n                setDistributorValue('');\n            }\n        }).catch(err => {\n            showError(\"Cannot get Distributor data.\");\n        });\n    }\n    const handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        setInputs(values => ({ ...values, [name]: value }))\n    }\n\n    const validate = () => {\n        // console.log(\"inputs=\", inputs)\n\n        if (!inputs.locationId) {\n            showError('Location is required.');\n            return false;\n        }\n        else if (!inputs.salesOfficerId) {\n            showError('Sales Officer Name is required.');\n            return false;\n        }\n        else if (!inputs.distributorId) {\n            showError('Distributor Name is required.');\n            return false;\n        }\n        else if (inputs.startDate === undefined || inputs.startDate === \"\") {\n            showError(\"Start date  is required\");\n            return false;\n        }\n        else if (inputs.endDate === undefined || inputs.endDate === \"\") {\n            showError(\"End date is required\");\n            return false;\n        }\n        else if (new Date(inputs.endDate) < new Date(inputs.startDate)) {\n            showError(\"End Date should be greater than Start Date.\");\n            return false;\n        }         \n        else if(!inputs.reportFormate) {\n            showError('Report Format is required.');\n            return false;\n        }\n\n     \n        return true;\n    }\n\n    const submit = () => {\n        if (!validate()) {\n            return false;\n        }\n        // let queryParams = '?locationId=' + inputs.locationId;\n        // queryParams += '&reportFormate=' + inputs.reportFormate;\n        // queryParams += '&companyId=' + companyId;\n        // queryParams += '&startDate=' + inputs.startDate;\n        // queryParams += '&endDate=' + inputs.endDate;\n        //const URL = `${process.env.REACT_APP_API_URL}/api/report/sales-return` + queryParams;\n        // axios.get(URL, { responseType: 'blob' }).then(response => {\n        //     if (inputs.reportFormate === \"PDF\") {\n        //         const url = window.URL.createObjectURL(new Blob([response.data]));\n        //         const link = document.createElement('a');\n        //         link.href = url;\n        //         link.setAttribute('download', \"DebitCreditNoteReport.pdf\");\n        //         document.body.appendChild(link);\n        //         link.click();\n        //         document.body.removeChild(link);\n        //     } else {\n        //         const url = window.URL.createObjectURL(new Blob([response.data]));\n        //         const link = document.createElement('a');\n        //         link.href = url;\n        //         link.setAttribute('download', \"DebitCreditNoteReport.xlsx\");\n        //         document.body.appendChild(link);\n        //         link.click();\n        //         document.body.removeChild(link);\n        //     }\n        // }).catch(err => {\n        //     showError();\n        // });\n    }\n\n    const getReportData = () => {\n        if (!validate()) {\n            return false;\n        }\n        setShowReport(inputs.reportType);\n        // if(!validate()){\n        //     return false;\n        // }\n        // let queryString = \"?\";\n        // queryString += 'salesOfficerId=' + parseInt(inputs.salesOfficerId);\n        // queryString += '&startDate=' + inputs.startDate;\n        // queryString += '&endDate=' + inputs.endDate;\n\n        //const URL = `${process.env.REACT_APP_API_URL}/api/reports/distributor-ledger-view`+queryString;\n        axios.get(URL).then((response) => {\n            setReportData(response.data.data);\n            setShowReport(true);\n        }).catch();\n    }\n    // console.log(inputs)\n    return (\n        <>\n            <div>\n                <MisReportBreadCrum menuTitle=\"Debit Credit Note Report\" />\n            </div>\n            <div>\n            \n            </div>\n            <div>\n                <Card>\n                    <CardBody>\n                        <div className='row'>\n                            {/* LEFT SIDE TREE ROW */}\n                            <div className='col-xl-3' style={{ borderRight: \"1px solid #F2F2F2\" }}>\n                                <div style={{ borderBottom: \"1px solid #F2F2F2\" }}>\n                                    <label>\n                                        <img src={toAbsoluteUrl(\"/images/loc3.png\")}\n                                            style={{ width: \"20px\", height: \"20px\", textAlign: \"center\" }}\n                                            alt='Company Picture' />\n                                        <strong style={{ marginLeft: \"10px\", color: \"#828282\" }}>{intl.formatMessage({ id: \"COMMON.LOCATION_ALL\" })}</strong>\n                                    </label>\n                                </div>\n                                {/* TREE */}\n                                <LocationTreeView tree={locationTree} selectLocationTreeNode={selectLocationTreeNode} />\n                            </div>\n                            {/* RIGHT SIDE LIST ROW */}\n                            <div className='col-xl-9'>\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                        <div style={{ marginTop: \"5px\" }}>\n                                        <label className='level-title'>Sales Officer</label><br />\n                                            <Autocomplete\n                                              name=\"salesOfficerId\"\n                                               options={salesOfficer}\n                                               onKeyDown={getSalesOfficerListByLocation}\n                                                getOptionLabel={(option) => option.salesOfficerName}\n                                                value={salesOfficerValue}\n                                                onChange={(event, newValue) => {\n                                                    setSalesOfficerValue(newValue)\n                                                    if (newValue !== null) {\n                                                        setInputs({ ...inputs, salesOfficerId: newValue.id });\n                                                    } else {\n                                                        setInputs({ ...inputs, salesOfficerId: '' });\n                                                   }\n                                                }}\n                                                renderInput={(params) => (\n                                                    <TextField {...params} label=\"Select Sales Officer*\" />\n                                                )}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className='mt-5 row'>\n                                    <div className='col-xl-8'>\n                                       <label className='level-title'><span className=\"mr-1\">Distributor</span></label>\n                                        <Autocomplete\n                                            //id=\"distributorId\"\n                                            name=\"distributorId\"\n                                            options={distributors}\n                                            onKeyDown={getAllDistributorList}\n                                            getOptionLabel={(option) => option.distributorName}\n                                            value={distributorValue}\n                                            onChange={(event, newValue) => {\n                                                setDistributorValue(newValue)\n                                                if (newValue !== null) {\n                                                    setInputs({ ...inputs, distributorId: newValue.distributorId });\n                                                } else {\n                                                    setInputs({ ...inputs, distributorId: '' });\n                                                }\n                                            }}\n                                            renderInput={(params) => (\n                                                <TextField {...params} label=\"Select Distributor*\" />\n                                            )}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>Start Date<i style={{ color: \"red\" }}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"startDate\" placeholder=\"dd-MM-yy\"\n                                            name='startDate'\n                                            value={inputs.startDate ? moment(inputs.startDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"d-M-Y\" }}\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"startDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                })\n\n                                            }}\n                                        />\n                                    </div>\n                            </div>\n                            \n\n                            <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <label className='level-title'>End Date<i style={{ color: \"red\" }}>*</i></label>\n                                        <Flatpickr className=\"form-control\" id=\"endDate\" placeholder=\"dd-MM-yy\"\n                                            name='endDate'\n                                            value={inputs.endDate ? moment(inputs.endDate, \"YYYY-MM-DD\").format(\"DD-MMM-YYYY\") : ''}\n                                            options={{ dateFormat: \"d-M-Y\" }} required\n                                            onChange={(value) => {\n                                                setInputs({\n                                                    ...inputs, \"endDate\": moment(new Date(value)).format(\"YYYY-MM-DD\")\n                                                })\n                                            }}\n                                        />\n                                    </div>\n                            </div>\n\n                                <div className='row'>\n                                    <div className='form-group col-lg-8 first-level-top'>\n                                        <div>\n                                            <label className='level-title'><span className=\"mr-1\">Report Format</span><span className=\"text-danger \">*</span></label>\n                                            <select className=\"form-control\" id=\"reportFormate\" name=\"reportFormate\"\n                                                onChange={(e) => handleChange(e)}\n                                            >\n                                                <option value=\"\">Select Report Format</option>\n                                                <option value=\"PDF\">PDF</option>\n                                                {/*<option value=\"EXCEL\">EXCEL</option>*/}\n\n                                                {/* {\n                                                allReport.map((report)=>(\n                                                <option key={report.id} value={report.id}>\n                                                    {report.name}\n                                                </option> \n                                                ))\n                                            }    */}\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>                       \n\n                                <Button className=\"float-right mt-5\" id=\"gotItBtn\" variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={submit}\n                                >\n                                    Submit\n                                </Button>                              \n                            </div>\n                        </div>\n                    </CardBody>                                 \n                </Card>\n            </div>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}